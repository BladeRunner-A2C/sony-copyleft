#===============================================================================
#                    Copyright 2016, 2017 Qualcomm Technologies, Inc.
#                           All Rights Reserved.
#              Confidential and Proprietary - Qualcomm Technologies, Inc /GTDR
#===============================================================================
# AOP_FSM_L4 Libs
#-------------------------------------------------------------------------------
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/power/aop_fsm"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends within CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([

])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'DEBUGTOOLS',
   'SERVICES',
   'SYSTEMDRIVERS',
   'PRODUCTS',
   'POWER',
   
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

AOP_FSM_C_SOURCES = [
   '${BUILDPATH}/src/aop_fsm.c'
]

AOP_FSM_ARCH_SOURCES = [
]

AOP_FSM_INIT_SOURCES = [
  '${BUILDPATH}/src/aop_fsm_init.c',
]
		
aop_fsm_arm_obj = env.Object([AOP_FSM_C_SOURCES, AOP_FSM_ARCH_SOURCES])
aop_fsm_arm_lib = env.Library('${BUILDPATH}/aop_fsm_arm', aop_fsm_arm_obj)
env.AddBinaryLibrary(['CORE_AOP'], '${BUILDPATH}/aop_fsm_arc', AOP_FSM_C_SOURCES)

#Add init sources
env2 = env.Clone() #clone for init sources
env2.Append(CCFLAGS = ' -mlong-calls')
env2.AddBinaryLibrary(['CORE_AOP'], '${BUILDPATH}/aop_fsm_init', AOP_FSM_INIT_SOURCES)

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
# env.AddObject(['CORE','DALSYS_AOP_FSM','AOP_FSM_IMAGE','AOP_FSM', 'CORE_AOP'], AOP_FSM_ENTRY_SOURCES)

# env.AddLibsToImage(
   # ['CORE','DALSYS_AOP_FSM','AOP_FSM_IMAGE','AOP_FSM', 'CORE_AOP'],
   # aop_fsm_arm_lib)


