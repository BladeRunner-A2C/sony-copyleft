
/************************ THIS IS AN AUTOGENERATED FILE ************************
****************************** PLEASE DO NOT EDIT ******************************
********************************************************************************

                    Unified Crypto Library - Release Version                    
                    ----------------------------------------                    

GENERAL DESCRIPTION
Provides information on current uclib version number and release date/time
Also stores details of all commits made to uclib till date

Copyright (c) 2018 - 2021 Qualcomm Technologies, Inc. and/or its subsidiaries.
All Rights Reserved.
Confidential and Proprietary - Qualcomm Technologies, Inc.

*******************************************************************************/

#define UCLIB_MAJOR_VER   0
#define UCLIB_MINOR_VER   45
#define UCLIB_BUILD_VER   1

/****************************** Revision History ******************************/

/*********** UCLIB ver. 0.45.1 Release, 08/26/21 - 10:59 by c_apardk ***********/

/*
commit 6b495c206ae8935994fac79f66f9e734c8e27195
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Thu Aug 26 10:59:49 2021 +0530

    Fix KW Errors BOOT.MXF.2.0(ssg.boot.2.0)
    chipset        : waipio
    kw type/name  : Buffer Overflow - Array Index Out of Bounds
    build id      : BOOT.MXF.2.0-00462-WAIPIO-1

    Change-Id: Ibf316bd8db99c0c68496b871df7890b8c04867df
*/

/*********** UCLIB ver. 0.45.0 Release, 05/10/21 - 15:21 by abrahma ***********/

/*
commit d9d44c345e76d92237e61eabefcc1de463edddeb
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Sun May 9 22:06:49 2021 -0700

    Fixed Hmac sha224 issue and compilation errors for boot image.

     - resolve the issue when Hmac SHA224 with the large key. In this case, hash is need for the key to get the digest, the current implementation will return sha256 result with 32 bytes digest for sha224 which cause the issue. To solve the issue, the output size is restricted to the algorithm digest size in hash_final;
     - removed unused variables to fix the compilation errors for boot image;

    Change-Id: I62cbcc9d4ca3593f0c021d1fc1d86c9fcea17da6

commit 69a0dd85499e9a4b0cc63debacefe9ad07dcd28f
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Mar 1 19:05:56 2021 -0800

    Add support for SM4 using ARMv8.2

    Add support for SM4 cipher modes using ARMv8.2 crypto extension
    instructions.

    Change-Id: I9d1d951a770bb153e5383e9cef9ebcb36fcb1015

commit 2de192b9178c0051db44ca3307241df4f4ccdb87
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Feb 16 18:02:52 2021 -0800

    Add support for ARMv8.2 crypto SM3

    Add support for SM3 hash using ARMv8.2 crypto extensions. This change
    provides an assembly implementation for the SM3 block transformation.

    Change-Id: I4f14414bb951887903d4018f1fa88748c1f45bf8

commit ad4efaba060df96d4948ef59f5e5dc752aee271f
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Jul 14 19:38:04 2020 -0700

    Added HW GCM supports.

    Change-Id: If5656f90deb0465e17c1352e004f8b20d923191a

commit de713ca285517cfa7bb3ddf81188d218912c0ef7
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Apr 26 16:13:05 2021 -0700

    Released uclib version 0.44.0. This is an autogenerated commit. Please do not edit commit msg.


commit 2f37d5d5257469a21b9bcef84807565feaeb1c85
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Mar 10 15:16:01 2021 -0800

    Add support for DRM HLOS Offload features

    Add support for configuring pipe timer values, pipe pause configuration,
    and retrieving the pipe status (pipe timer expiry, pipe pause status).

    Change-Id: If6a83ca811bad6416143cd695ac907a57abaa05c

commit 1100e11efefa5f277e496da6f67a04470bfe24c3
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Mon Apr 12 11:59:53 2021 -0700

    Enabled Armv8_2 support for SHA384/512 in Hmac.

    Also updated the copyright year and fixed compilation errors for boot image.

    Change-Id: Ida0fac5d08f742e7345f34d603a09b8461a83b78

commit e0275f607276c9846b66fd7bd1a196ec64bf7323
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Apr 1 11:39:12 2021 -0700

    Released uclib version 0.43.0. This is an autogenerated commit. Please do not edit commit msg.


commit 39c2c219da71f38f1a1898770da38dfc1c2f236e
Merge: c076a81 fefc989
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Mar 29 10:45:02 2021 -0700

    Merge "Fix python3 issues with printbuf tool"


commit c076a81377c9d03a6c8dc92209c4f6bb17bd3c68
Merge: 1ef6656 22711de
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Mar 26 14:48:22 2021 -0700

    Merge "Add support for ARMv8 AES-CBC/ECB in the TZ kernel"


commit 22711de6d731613702db6cf30e999186f835d917
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Mar 22 20:18:13 2021 -0700

    Add support for ARMv8 AES-CBC/ECB in the TZ kernel

    Add push/pop of SIMD registers used for AES-CBC and AES-ECB when used
    within the TZ kernel.

    Change-Id: I29986a38f0f6c73e1aa779aa771a815d1787d001

commit fefc9891d9a83e4b7fc5f81440095f11ee00ba09
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Mar 23 18:30:15 2021 -0700

    Fix python3 issues with printbuf tool

    Change-Id: I29fee95e2b9ab49f5018d6e2e892cdd523effa57

commit 1ef665618307522e3ceefa1bc7aa7c885ab940f3
Author: nishant raj <nishraj@qti.qualcomm.com>
Date:   Tue Mar 23 16:22:17 2021 +0530

    Released uclib version 0.42.0. This is an autogenerated commit. Please do not edit commit msg.


commit 74b55d6a24eaadcdf10f5c2ae5213f1e96245195
Author: nishant raj <nishraj@qti.qualcomm.com>
Date:   Sat Feb 13 00:38:06 2021 +0530

    FR69414:RIPEMD-160 implementation and support in QTEE | uclib part

    Change-Id: Ifd2bf2121676ba54ce13ae2e04099ce50717f84d

commit d081c4034912482da00c6b20a655d20991ecee5d
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 11 15:28:12 2021 -0800

    Released uclib version 0.41.0. This is an autogenerated commit. Please do not edit commit msg.


commit 56e98ba5759634db08c1f35807a6cc3486aba639
Merge: a185a13 a35dd0a
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 11 15:09:18 2021 -0800

    Merge "Add back python3 change from UCLIB component"


commit a35dd0ab542bdb8ba2a2f24abbc5ddc6c23f88f5
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 11 15:04:47 2021 -0800

    Add back python3 change from UCLIB component

    Temporarily adding back the change present in the UCLIB component to
    address failures in running the deploy script

    Change-Id: I15fb743fba89ee9d93e281c1983352ad190e4914

commit a185a13d827a2b4727ee94c999342ee8fa5e6034
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Feb 10 16:42:53 2021 -0800

    Scripts for verifying rsa and salsa20 enc/dec
    Fix copyright date in deploy script

    Change-Id: Ic9941a4119d27a2c8d5cad0cdcf257f1dc94a068

commit f42d61ea6057ac626c83e6950df80a7fb2cf2f21
Merge: 0eb1182 5e23666
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 11 14:24:43 2021 -0800

    Merge "Validate internal contexts before using them"


commit 0eb1182fbafb4f647d368081980742971cf360a3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Aug 28 19:05:10 2020 -0700

    Add support for ARMv8 based CMAC in the kernel

    Add support for CMAC (AES-CBC encryption) operations in the TZ kernel using
    ARMv8 SIMD instructions, by saving/restoring the NEON registers on the
    stack and disabling/re-enabling interrupts.

    This change also includes scripts to initialize the FPU registers to
    known values so as to help detect which registers are used by any given
    function, and also to help ensure that the values are saved/restored
    correctly.

    Change-Id: I30a0468209fb18eda6eb547513d40b56c42927a8

commit 5e2366693b36bf3577268f7485ba486e8e54f419
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Mar 1 13:24:54 2021 -0800

    Validate internal contexts before using them

    Fix for KW issue in aes_cfb_cmn.c line 112 that internal ctx may be dereferenced after it was positively checked for NULL
    Remove redundant check for algo contexts in internal funtions

    Change-Id: I424bafe788deac48676f79e831c6dd310fd509ef

commit a00c71c6f564ac4532a59f8233da8bd3a472d404
Merge: 5287ca9 c8656fc
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 4 16:19:41 2021 -0800

    Merge "Port python3 changes from UCLIB component"


commit c8656fc1e0714a154857425c6eb9ddbd0e63fea9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Mar 3 15:23:04 2021 -0800

    Port python3 changes from UCLIB component

    This is a port of CL 29164850 which was checked into uclib.tz.1.0 by the
    SSG Integration team with the below message
    "Update all python2 code in the TZ build system to work with python3.
    Backwards compatibility is not maintained."

    Change-Id: I69ba5d8b73a5736bcbc61b9248def1f89a814f6d

commit 5287ca9d0c15000f0f3bfbd7fa9079713c749ddd
Merge: cff5a95 ed8b6f1
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Mar 4 11:17:16 2021 -0800

    Merge "Modified to use timesafe_memcmp for critical data."


commit ed8b6f19da4dd5e04bb74af34df26b13fd746897
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Thu Feb 25 11:53:25 2021 -0800

    Modified to use timesafe_memcmp for critical data.

    Change-Id: I1a69a16f881f5ebf1665e68fd65af6476cf04a95

commit cff5a95419f22db01b6240091ea15507f17612ec
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Mon Mar 1 13:34:07 2021 -0800

    Added SW WA for all PRNG HW versions.

    Change-Id: I086c4de16db176a83c17535b5f3a86e7a61bd137

commit 70cdae0e280f1496bc7d0286897324155e725978
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Feb 9 17:48:01 2021 -0800

    Added NOT_SUPPORTED return for ENV_install_hw_key.

    Change-Id: I6cbef92288ae7c29b6502abb5186ea527d8503ee

commit 84588c213f69fc16eb4d43997c1f364f06049d52
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Feb 5 11:18:43 2021 -0800

    Released uclib version 0.40.0. This is an autogenerated commit. Please do not edit commit msg.

    Change-Id: Ic2a294f3220a2b7cb0d25d8b14159d41689ab339

commit f66c2c29fc1b4e42b03864da98fc9708c7c04f66
Merge: 226b7cf b084cf2
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Feb 3 10:03:04 2021 -0800

    Merge "Modified for boot image uclib updates."


commit 226b7cf1aff3551da671836ca2b5749e85795e3e
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Sat Jul 11 01:05:28 2020 -0700

    Add AES CFB and OFB stream cipher modes.
    Support for SW and ARMV8 engines for both modes.
    Support for ctrl param to specify segment size for CFB.
    Default segment size set to 128-bit.
    Other segment sizes not required as of now.
    Add offtarget test case and test vectors
    Enable debug symbols when building uctest to use gdb.

    Change-Id: I151ed71f51bd0cb22c10e52fe55bbc099558eb70

commit b084cf2b7a215a78b31ae11a87596ffaaa7f79bc
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Thu Jan 28 13:08:11 2021 -0800

    Modified for boot image uclib updates.

    Modified config files and fixed LLVM12 compilation issue.

    Change-Id: I2472833a662ef26a1aad42d2d527310de244fe78

commit 9582c599e2f4fad74fca41d2ffef6c7ad4d02c8e
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Mon Jan 25 11:54:34 2021 -0800

    Released uclib version 0.39.0. This is an autogenerated commit. Please do not edit commit msg.

    Change-Id: I693ac25b8f9a199fd330c3e1fd496facf82e50e5

commit 4a51b37d570daac84203ec7d34d009a8c545ef44
Merge: 54ba8c0 a04accb
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jan 22 22:24:05 2021 -0800

    Merge "Adding compilation support for MBA image. Target supported is Kodiak and Qtang2. Hexagon compiler release version is 8.4.05"


commit 54ba8c04d57f570e7516c1f38a671f8bcf21d693
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Thu Dec 3 07:58:50 2020 -0800

    Security CR fix for UCLIB_IMPROPER_CLEAR - uclib_cipher does not clear key.

    Change-Id: I2baa907122a60237d0f23399b1de9812755c6802

commit 533644163961190625cf65cd536116827627d985
Merge: da27c9e 771ef32
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jan 12 13:42:01 2021 -0800

    Merge "Removed the SW probability workaround for PRHG HW Version 2.3.1 and later."


commit a04accb19b26623137f98f778d31e194aacb76b7
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Wed Nov 18 13:45:28 2020 +0530

    Adding compilation support for MBA image.
    Target supported is Kodiak and Qtang2.
    Hexagon compiler release version is 8.4.05


commit 771ef32cda73ec38787121035968743157979651
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Nov 20 19:00:51 2020 -0800

    Removed the SW probability workaround for PRHG HW Version 2.3.1 and later.

    Change-Id: Ia14b8d15d4dafdc893cd8a38923cf69179eb13bd

commit da27c9ec5acce42abb41bffcc998709a8b577210
Merge: 8b92e84 58fe03b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Dec 8 13:58:43 2020 -0800

    Merge "Fix context initialization for TMECOM pkey engine"


commit 8b92e848cf52184ec21b2d159826b3a180aa6aee
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Mon Sep 21 20:38:16 2020 +0530

    AES-CCM HWIO mode fixes. Also added HashCipher in HWIO mode.

    When the last block has more than 4 bytes of data,
    DOUT_RDY is not getting set after writing 4 bytes of input data.
    So, CE_HWIO_xfer_data is going into infinite loop,
    where its waiting for DOUT_RDY to be set.
    DOUT_RDY will be set writing all the available input data.
    So, after writing all the input bytes,
    DOUT_RDY is getting set and the issue is fixed.

    Updated the cipher size for the last block based on tag_sz.

    Added HashCipher in HWIO mode.

    Change-Id: If900becef6fa35c205ab81ba96504b19624655a5

commit 06d8d4d8ddf1b215d212e4fd97b8ee1995abe59f
Merge: 52096d0 3d6da75
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Nov 12 15:04:42 2020 -0800

    Merge "Modified for core.boot.6.0 and fixed compilation errors."


commit 3d6da75afc0fcd9c34eee6ee474aa58442228063
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Wed Oct 21 11:18:10 2020 -0700

    Modified for core.boot.6.0 and fixed compilation errors.

    Added PRNG lock for the multithread uefi.

    Change-Id: Ibb5288eb5f82658a7aa0c4ba162d1462bd03dd95

commit 58fe03bb46eaba92ffd972db36364208054da2c3
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Wed Nov 4 14:03:29 2020 -0800

    Fix context initialization for TMECOM pkey engine

    Update TMECOM engine to create context on first call.

    Change-Id: I0183eb1dd8e38eb0d6954b270172fd2a50366686

commit 52096d00ac709c7ffeb2afd99a1084395b8d4464
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Tue Oct 6 16:24:41 2020 +0530

    Fix the KW issues in uclib offtarget bam_emulation tests.
    Issue type : NULL is passed to function that can dereference it.
    Reported on project CRM_TZ_XF_5_11_SPF_LAHAINA.

    Change-Id: Icebbfe3a7c036a40ab332fe43b8424a82055b831

commit 62d04fd8afe23f45e396d15df98918d9eda980fb
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Wed Aug 5 18:04:35 2020 -0700

    Added EEn module supports in the prng driver.

    Also fixed the compilation errors for SecPkg UCLib in ssg.boot.2.0.

    Change-Id: I17a2bf4c0f6e5a166418ae26fa627bc2cfa89621

commit 99ee6bd67ab74a18ff99e29f5fa0782b46ffd068
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Feb 26 16:24:35 2020 -0800

    Add ARMv8 support for SHA384, SHA512

    Change-Id: I213c581235ddd8d76d9d9891225d329c898e767d

commit cf0c3c7d153f29f91c204cb490eb7cd8758333be
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Tue Sep 15 16:37:13 2020 -0700

    Released uclib version 0.37.0. This is an autogenerated commit. Please do not edit commit msg.


commit eae5584be94fa6e908558ed3fb5c44a97f0cea5b
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Wed Jul 15 09:23:08 2020 -0700

    Add support for remote engine usage

    Add support for remote engine for public key ECC
    signature verification.

    Change-Id: I9134f253f28f4ba9561f8b5f86a898d37bd6c500

commit 30ad6f7370a2cfc29f840016d9ccfd03aace40ef
Author: Jayanth Rajakumar <jrajakum@qti.qualcomm.com>
Date:   Sun Jul 12 16:25:19 2020 -0700

    Added support for SHA and AES (ECB/CBC/CTR) through BAM mode emulation

    Change-Id: I2b867aa208ecac3e2c4e8d3496a48e586e3529ea

commit a1d72718fb8a0c7f48da333cdf462ace1406df07
Merge: 148f684 441b308
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Sep 11 09:08:58 2020 -0700

    Merge "Added headers and stubs of APIs for BAM emulation"


commit 148f6848cb969b98dc26faf84878af8171eff44d
Merge: c2c804b 5d7a4de
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Aug 27 22:04:04 2020 -0700

    Merge "updated copyright header"


commit 5d7a4debadb6699ef4bbdfa3103fd5409250a1f3
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Fri Aug 28 07:07:12 2020 +0530

    updated copyright header


commit c2c804bc1eb709a35047cba951568d9a81d04344
Merge: 41cea96 eb69515
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Aug 27 10:20:16 2020 -0700

    Merge "Fixed CCM Mac Checking failure."


commit 41cea96123a840076a7ae36a37a0001258d2d78c
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Tue Aug 25 15:48:33 2020 +0530

    Address compiler warnings in uclib.
    All of them are of type ,- "expression result unused [-Wunused-value]"
    This is due to when DEBUG flag is not enabled, LOG_DBG will get replaced by nothing
    & leads to left behind no-ops/unused expression.
    Reported on agatti crm build : TZ.XF.5.1-00788-KAMORTAAAAAANAZT-1

    Change-Id: Ic566bc445ac0cf8125d5ac456d71ea9e03e6b515

commit 441b308d5a8c138d4baae7f08e4e9628a1a82cfb
Author: Jayanth Rajakumar <jrajakum@qti.qualcomm.com>
Date:   Tue Jul 7 11:58:05 2020 -0700

    Added headers and stubs of APIs for BAM emulation

    Modified uctest sconscript to source the new files and uctest config
    to support SHA2-256 in BAM mode offtarget.

    Change-Id: Iad235f47cb9d8e492ffc7a93b377f26f46eed318

commit eb69515112ecff05934fb6324f1dfb7bea3fb0b3
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Aug 25 10:57:43 2020 -0700

    Fixed CCM Mac Checking failure.

    Change-Id: Iaac28a46143aa216bab943c9115b4b09dd30e3e1

commit f39d4abd5b01ce5a08d4d778024edac0f6e47abb
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Aug 13 17:41:52 2020 -0700

    Add scripts helpful in generating test vectors

    Add scripts useful for pretty-printing a C array from a hex-string and
    for generating test vectors from Wycheproof ECDSA signature-verification
    test files

    Change-Id: If77fd8193fc7829efebf31d253469629c0e50a2d

commit 4036a138664a1bc69e31abccfd2dbb6521aedf14
Merge: 1455d5e 7f5a3ee
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Aug 11 09:19:44 2020 -0700

    Merge "Add copyright info to sm2 sources"


commit 7f5a3ee651c251ac919b8109a3117d4dc37bbacf
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Aug 7 14:51:36 2020 -0700

    Add copyright info to sm2 sources

    Change-Id: I046b0134b677ced8ad92d9c42416d790c03d5cd5

commit 1455d5e271056635296b073607854ace9e11700e
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Aug 3 10:15:06 2020 -0700

    Released uclib version 0.36.0. This is an autogenerated commit. Please do not edit commit msg.


commit 6d2c49676087673475450cc6725d4120130c8f12
Merge: b4a9561 8eea9b7
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Aug 3 09:20:31 2020 -0700

    Merge "Add support for PRNG 3.0"


commit b4a9561060443ccaff7496d830712f826e01c6f8
Merge: 48071c5 2a0967b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jul 30 16:19:37 2020 -0700

    Merge "fix top level scons params overridden by uclib scons"


commit 48071c5e8f1a85726ce18ad1a2b3c9b5cf437f1c
Merge: 776c136 2862a5c
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jul 30 16:18:48 2020 -0700

    Merge "Save CE context before unlocking, when possible"


commit 8eea9b71fe27132d288136ea5bd1c8d8730609ad
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 28 14:49:20 2020 -0700

    Add support for PRNG 3.0

    Change-Id: I6b085b95bfb14be6b6e99476ea6e02a1e11c9764

commit 2a0967bcdf260fb614da6d597e7adbad7be20b3c
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Jul 27 18:08:55 2020 -0700

    fix top level scons params overridden by uclib scons

    Change-Id: Ic34c6d5f9ec267ba11d7c7085eb95423ac0c2003

commit 2862a5c7891a6085370f635764bea8dc03cbd7a9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jul 9 18:29:43 2020 -0700

    Save CE context before unlocking, when possible

    When using the Crypto engine for VA operations the register context is
    saved after the engine is unlocked. Move this to before the engine is
    unlocked. Reading the _ENCR_CNTRn_IVn registers while the engine is
    locked is not permitted on HW older than v5.6, so these are the only
    registers that are now (conditionally) read after unlocking the engine.

    Change-Id: I062256945398e08aa45ca41d466f2dbb959cdc57

commit 776c13665b8cf318692f75ed0270c5af1ae91c8c
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jul 23 14:27:16 2020 -0700

    Released uclib version 0.35.0. This is an autogenerated commit. Please do not edit commit msg.


commit 8a934f0c10e2bd98b17b26ac99dc9f746f67924a
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jul 17 17:38:41 2020 -0700

    Fix error handling for pre 5.6 HW

    On Crypto HW versions before 5.6, CCM decryption would result in a
    MAC_FAILED error even when the data transfer was not the last one. This
    was not being handled correctly in the recent change which added support
    for recovering from HW errors. A MAC_FAILED error was resulting in execution
    breaking out before the engine was unlocked.

    Change-Id: I001ce9801abf35a94133dd2252ed986701a98992

commit d1977cb02ec554a0a4f04a204154255f44f40f68
Merge: 3f475b3 9d7c049
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jul 10 11:01:01 2020 -0700

    Merge "Add support for recovering from Crypto Engine errors"


commit 3f475b38b21c1b2fb8e021953745577bf8b1d917
Merge: 8cf65e0 eaf9ac2
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jul 10 08:56:12 2020 -0700

    Merge "Offtarget tests updates"


commit eaf9ac2a99a101fea6793eec1ed4b39e8af436f0
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Jun 26 17:27:14 2020 -0700

    Offtarget tests updates

    Added PRNG test,
    Fixed KW issues,
    Fixed tests not returning pass/fail count,
    Fixed line endings in all files

    Change-Id: Ia2eedb58d47a7a98ce0628a0907ddc5b5db64ecf

commit 8cf65e0b5d04dc1980b2f7ae3c804408204b871d
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Jun 23 09:22:21 2020 -0700

    Ignore error in case the directory for auto-gen files already exists

    Change-Id: I26c9701e9ac66878b9140cbba49be962feff6b59

commit 36c47a3006535c93a1f256869c715437e3a92453
Merge: c099514 7a7ea89
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Jul 8 09:48:35 2020 -0700

    Merge "Modified config json files for uefi and xbl boot image."


commit c0995141006a00f5d618a2794aaa5cd4ddd03080
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jun 30 18:45:32 2020 -0700

    Add support for building fuzzing off-target tests

    Add support to build the fuzzing test binary as a separate off-target
    test, separte from the UCLIB unit-tests. Also fix issues with the use of
    VariantDir to allow building the unit-test and fuzzing binaries for both
    32-bit and 64-bit.

    Change-Id: I25bac52a364d6970f1b82f094379e38c0c10ce5d

commit 7a7ea897360aacf8850ceed503634c0e0ee910c7
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Jun 26 12:31:25 2020 -0700

    Modified config json files for uefi and xbl boot image.

    Change-Id: I5e1efed611fdd9047c989c5b9344b33192044ce6

commit 9d7c049168f61b6dd8a89355b17541abd214ac35
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Apr 14 17:52:46 2020 -0700

    Add support for recovering from Crypto Engine errors

    Change-Id: I005c6b3971a778c52df1566a43285459efffd730

commit c6c3bfadf71e28d9b305a1248431414d99902144
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu May 21 21:50:37 2020 -0700

    Add test cases for a TLS1.3 example

    Add some tests cases for a specific TLS1.3 example (from
    https://tls13.ulfheim.net/) to illustrate the use of UCLIB APIs.

    Change-Id: Ibb8d42032ab56dd032ca11c0359f1a5c3cbc0ace

commit 0f176aed9ce4ac211f905134b6b773813f7f431d
Merge: 0955e98 24e8c04
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jun 23 09:37:20 2020 -0700

    Merge "Add support for TME-PBL UCLIB compilation"


commit 0955e987e48cba8af3e5f166e2474d3a4311d920
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Sat Jun 6 16:00:33 2020 -0700

    Remove context save/restore during parallel hash

    Optimize the non-blocking hash operations by avoiding saving and
    restoring the IV and byte-count values for intermediate data transfers.
    The IV and byte-count will be set only for the first transfer and will
    be saved only at the end of the last transfer. This is safe because
    during a non-blocking operation we do not unlock the pipe, and in an
    environment where commands are sent over HWIO we assume that there are
    no crypto operations interleaved with the non-blocking hash operation.

    Change-Id: I7a0ff19bc2bf69874503435a9900bdfd06f98108

commit 24e8c04a6d7ef32eb13e2910f0fa2e690a029d19
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Jun 22 10:48:08 2020 -0700

    Add support for TME-PBL UCLIB compilation

    Change-Id: Ie0f8a10193f4d83a4e4aebe3e1ebeecfa4c46ca1

commit 881652aa09b7ee78f29ca5a552565e873038da95
Merge: 58e36a5 ba351d5
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Jun 17 17:49:19 2020 -0700

    Merge "Enhancements to uctest offtarget"


commit ba351d5025685017ee735a505804b269fc7399be
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri May 29 20:06:04 2020 -0700

    Enhancements to uctest offtarget

    All tests modified to return number of pass/fail testcases.
    Streamlined calculating and returning verdict from each module.
    Made log printouts in console much cleaner and informative.
    Merged top level module functions as they had similar logic.
    Added test coverage for all supported hash algorithms
    and for cipher AES ecb/cbc/ctr modes.

    Change-Id: I95db4ffdd680bee1726233618ab595b7ce41bca8

commit 58e36a57a421b4b556fb2495cd619a7832e41412
Merge: f905ed5 96bb8f7
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Jun 17 15:13:44 2020 -0700

    Merge "Add fixes for parallel hash"


commit 96bb8f7e9e4e9b1a2d3a4c2e40636cec23b48118
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jun 5 17:26:10 2020 -0700

    Add fixes for parallel hash

    1. When polling for TX/RX transfers, we pass a 'blocking' flag that is
    based on whether the non-blocking flag was set by the caller and also
    on whether the transfer is coming from the internal block buffer. In
    addition to this we were previously making all polling under the
    cmds-over-hwio mode blocking, which is unnecessary and incorrect.

    2. This change also addresses the fact that once polling has been
    completed successfully on the TX/RX pipes, polling on these should not
    be repeated. When performing non-blocking hash for example, let us
    assume that data segment #1 is sent to the engine, and polling on the TX
    pipe succeeded, but CRYPTO_STATUS indicated busy. In such a case we
    would return success to the caller. The caller will then proceed to call
    update() on data segment #2 - this will first call ready-to-xfer which
    will check if the pending transfer completed or not by calling
    wait-for-xfer. This will end up causing the driver to poll on the TX
    pipe again, which will then get stuck indefinitely as there are no new
    events on the TX pipe.
    The solution in this change is to maintain two boolean flags (TX and RX)
    which get set when a TX/RX transfer is queued, and get unset once TX/RX
    polling returns successfully.

    Change-Id: I2718894ff61bef2238a544d10535e56741e2eec7

commit f905ed5ad41ca10d01ae0e60ede6f541a9d30329
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Tue Jun 2 16:11:00 2020 +0530

    Released uclib version 0.34.0. This is an autogenerated commit. Please do not edit commit msg.


commit b562ddae3d10b1e71677beca43d81f83827ee9a0
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue May 26 13:12:56 2020 -0700

    Modified for the compilation error fix in core.boot.5.0.

    Change-Id: I36d0d9f1a76d3d4896590672ff44c1cff02baddb

commit f238f981569141c5011e8eb576d603b82165cd3b
Merge: 840f2b2 095d7c8
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue May 26 15:00:12 2020 -0700

    Merge "Several updates to config_generator, deploy script and uctest/uclib Sconscripts."


commit 840f2b2b4330add08619eea5ef7d2e8300612682
Merge: b45ee03 462db69
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue May 19 09:12:16 2020 -0700

    Merge "added support for wrapped keys for KBKDF CMAC mode and HASH-CIPHER mode"


commit 462db69968b6cff82a10ca42d4a58862d9c66eb8
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Thu May 7 02:14:23 2020 +0530

    added support for wrapped keys for KBKDF CMAC mode and HASH-CIPHER mode

    Change-Id: Ia54b90cf459161f255425eb4958d778a6f13ccb2

commit 095d7c8bee7485dd406419b7fa3ef807c3e5cb5f
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Apr 16 19:41:09 2020 -0700

    Several updates to config_generator, deploy script and uctest/uclib Sconscripts.

    - Fixed gcc based uctest framework to get it running again.
    - Remove -fpIC flag for uclib to avoid symbols getting added to .got section.
    - Update config files for PBL, XBL. Remove the one for SBL.
    - Refactor handling json files in config generatory script.
    - Also made the config generator script executable from command line.
    - Made corresponding changes to other Sconscripts.
    - Perform full diff between git repo and p4 component in deploy script.

    Change-Id: I0aca985fd490cb950083923a08ff375dd1388ce4

commit b45ee0333acb1029063bed0175d06b1ebec6bf79
Merge: 09a9b86 08bd848
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri May 15 09:15:38 2020 -0700

    Merge "Fix AES-GCM zero length AAD and payload case"


commit 09a9b86628c04d8b322bbeef3ede45c245c4b4e3
Merge: f70ccf3 aaf9fd3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu May 14 15:25:41 2020 -0700

    Merge "removing unused variable from des structure"


commit 08bd848c0ebefdc6a714b13c7bfd2057022a36f5
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed May 13 10:22:27 2020 -0700

    Fix AES-GCM zero length AAD and payload case

    Initialize the internal AES-GCM context inside the final() call, if this
    has not been done in the update-aad() or update() calls. Also, add some
    basic off-target tests for AES-GCM.

    Change-Id: I218cb2729c401505c1d0d4c3ebb0b04b2e18a76a

commit f70ccf32dc6c22eb8857f98bcdb96d001afe2f95
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Apr 27 08:08:42 2020 -0700

    Use common clk callbacks for PRNG.
    PRNG could use the same clk callbacks in the env struct since the configurable
    params have been separated from function pointers in the struct

    Change-Id: I4c11b5a9f3fc29644d74a5632bd3bc7acbd5a588

commit 7ba248f08b758db0e59f2ebd20f712105736be39
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Apr 1 16:21:19 2020 -0700

    Fix modem image compiler warnings

    Fix compiler warnings and other build issues arising from the
    integration of the TLS 1.3 algorithms - HKDF, Chacha20, Poly1305,
    Chacha20-Poly1305 AEAD.

    Change-Id: I8f4d42fba423aeea42032db0bde108d7df3b28ce

commit fecb5a024d06ca545e9c0ab895711f74531ed4f3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Apr 1 15:11:13 2020 -0700

    Add support for Curve25519 operations

    Add support for Curve25519 sign and verify operations (EdDSA), and
    shared key derivation (X25519).

    Change-Id: I947b873a06ea16fbf55aa7abf841f14d79a389b6

commit aaf9fd3cf537e8330bf1f864ae625c809b021432
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Thu May 7 19:08:20 2020 +0530

    removing unused variable from des structure

    Change-Id: I1450ab4b8adb887a27edb96d6e60635e2d9d266f

commit 9c1d9be332f9aeecc08706f54460fe6a842a2592
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Sat Apr 25 10:00:26 2020 +0530

    Released uclib version 0.33.0. This is an autogenerated commit. Please do not edit commit msg.


commit 36a8b3c5f33aff944cbaf5cd69b56c0cb3b08d69
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Apr 24 19:07:10 2020 -0700

    Fallback to 'stub' chipset as default chipset for getting target capabilities.

    Building TZ images for stubs32/stubs64 CHIPSET seems to populate random number
    as CHIPSET each time.

    Change-Id: I5b9e902f05e08e4edf40b5eb82386a38fad206c2

commit ed607517d75b385120136c049129cd090e0f0ef8
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Mar 17 17:25:11 2020 -0700

    Add PKA and HRNG as new engines. Several other fixes.
    A file to store engines supported by different targets/images will be maintained outside
    uclib, which will be used to determine sources to compile for an target/image.
    Deploy Script: Updated package warehouse branch id for uclib component as well as remove
    support for deploying binary.
    Config generator: Fix for removing duplicate source files, changes to support new engines.
    Uctest: Moved config file and target info to uctest/config folder

    Change-Id: I412e55657a6ff1dc8b74effa38f7a973bde211e7

commit becb1c0c28c4c990cf45c40f82a10227d4eeb8ea
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Mar 20 17:03:31 2020 -0700

    Make HKDF generic to any engine type

    Make the HKDF source file generic such that the engine used when opening
    a HKDF handle is the engine used for the underlying HMAC operations.

    Change-Id: I919f9a9587f4e5d523e4d164ab0581a2503b4535

commit 30d48fa03ab1f1812122b466890bb1362e6e3869
Merge: 609404d 35a1edc
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Mar 27 10:31:00 2020 -0700

    Merge "Modified for the KW issue in Makena PBL.   - fix the KW issue: md32_common.h:142 QCOM64BIT.PRECISION.LOSS (4:P1Pipeline) Analyze Precision loss caused by 64 bit migration."


commit 609404d853a46d7bdba4eefb6241ae050f303847
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Mar 23 23:33:26 2020 -0700

    Add a few basic AES-CCM test vectors from RFC 3610

    Change-Id: Ic9436e343947c422e3828c63cc0049aa8e24b23a

commit d082e1ba9c3fd99fec38b4030d3bf19f6ec460ea
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Feb 10 12:47:36 2020 -0800

    Add support for Chacha20-Poly1305 AEAD

    Change-Id: I3efbf8ea9f2e8ce5078f63ee7cc991a8ec222e27

commit cf3937c5e4ae814a13b8de4049419dfef81554f5
Merge: 589ee2e 38dbbbd
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Mar 27 09:02:22 2020 -0700

    Merge "Add support for Poly1305 MAC"


commit 35a1edc5a5ebf0d82af802eeb897c8d896fb91a7
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Mar 17 17:21:43 2020 -0700

    Modified for the KW issue in Makena PBL.
      - fix the KW issue: md32_common.h:142 QCOM64BIT.PRECISION.LOSS (4:P1Pipeline) Analyze Precision loss caused by 64 bit migration.

    Change-Id: I699e491de155d9757da2e31d92f8f3fd0b4dacef

commit 38dbbbdb5ed454f910a965b9a97a18a6af8e8168
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Feb 5 12:03:10 2020 -0800

    Add support for Poly1305 MAC

    Change-Id: I5690b66fcbb441185de06b02bbe243a8347633db

commit 589ee2ee4c0b16c5e829830e945ab56378f634da
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Fri Mar 20 06:15:12 2020 +0530

    Updated PKA EE and removed hardcoded value.

    While reading STATUS_IRQ register in elppka_acknowledge_status API, the ee is hardcoded to zero.
    Updating it to read the current execution environment(ee) so that the right register will be read.

    Change-Id: I9ff388e7129e7eba0a45ba3dd16395c8656ca5c6

commit 1c9ab2dc65c801eb133d70248f449c5c47295262
Merge: 023b3cc 232c296
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Mar 18 18:17:50 2020 -0700

    Merge "Add support for Chacha20 stream cipher"


commit 232c296831b0bb0b4f17d43df3626ad992f579d0
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jan 30 10:31:49 2020 -0800

    Add support for Chacha20 stream cipher

    Change-Id: Icee882f68d5e26ccddf46614e76187d4fc973764

commit 023b3ccaa0a23b27cc89eae4082ff00d0497ea06
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Mar 9 15:44:41 2020 -0700

    Released uclib version 0.32.0. This is an autogenerated commit. Please do not edit commit msg.


commit bbc47e27e7d29b56e0972024a25c534f1391c407
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Tue Feb 25 16:20:45 2020 -0800

    Support HMAC and CMAC operations using wrapped keys

    Add support to uclib_mac APIs to set key as wrapped key

    Change-Id: I8c36995b2d1b89781bf0f19a507a8984ea931bef

commit c08da9f5c30fe77aeb558c44fa8ec5dfae42e656
Merge: 0c5ec28 948797e
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Mar 9 15:07:52 2020 -0700

    Merge "Changed util_bitbuf only for stream and removed rsa for Makena PBL."


commit 0c5ec28ed190291c0cac147d43922ab496bf67ea
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Tue Mar 3 19:30:52 2020 +0530

    Fix the misra mandatory issues in uclib.
    Most of them are about variables/buffers used prior to the initialization.

    Change-Id: I4b0285b08f862780f0ff83388f12180a87b43e8e

commit 2200a4dd2bfc64b29cab005397e53075e892b919
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Mar 5 18:14:31 2020 -0800

    Remove minimum data size needed to vote prng(hwkm) clk

    Change-Id: Ib052f2e8dd562a8c5db003d88eda6d3a6cd28f44

commit 948797ea6118df8a495895386e84c46a0dcc344a
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Mar 6 12:25:42 2020 -0800

    Changed util_bitbuf only for stream and removed rsa for Makena PBL.

    Change-Id: I577bd8bfcafe7cb74b6840984fccdead10880d25

commit e1562efeca099c3fc2f2c6df53c5d9f68d37925a
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Wed Mar 4 15:47:57 2020 -0800

    Modified for the Copyright years required by UEFI image.

    Change-Id: Ibfaf9f47b415ca8baec32c510b27793a47c624b9

commit a5021d768c5da8186cb253dcf6119e9f3bf3db4e
Merge: 498c02c 137226a
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Mar 4 12:09:04 2020 -0800

    Merge "Add support for HKDF"


commit 137226a256d0636c71dc11e2d8c00a50d60e05c3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jan 24 16:35:19 2020 -0800

    Add support for HKDF

    Add support for the HKDF HMAC based 'extract' and 'expand' key
    derivation operations used by TLS 1.3.
    Reference documentation: https://tools.ietf.org/html/rfc5869

    Change-Id: Icf1aa563d62287fa7d9fd089dc5ca8bc5fdf99ea

commit 498c02c3ad2b583767e12591323999c9bcc0ec23
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Wed Feb 19 21:02:12 2020 -0800

    Modified for Makena PBL and some KW issues fix.

    Change-Id: I327e4d8ff6fd346b67cd767770eb7b9fbcd645cc

commit 1a1488c71b4cae00d5e0aeda107d60a336ecd01f
Merge: 1628bb0 1cffe1d
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Feb 28 10:59:42 2020 -0800

    Merge "CleanPack support for mpss image"


commit 1cffe1d0b846d80588762764bbf4dd694a233ad8
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Feb 18 13:40:45 2020 -0800

    CleanPack support for mpss image

    Change-Id: Ic037cddc55d6b3ae7d560029a83cc56d87ba17a2

commit 1628bb0d72927d30d5201e108a05e4a5c51b3ae8
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Wed Feb 5 17:21:48 2020 +0530

    PKA clock enable / disable

    Changes are to enable PKA core clock before using the HW.
    And disable the clock when we are done using it.

    Change-Id: I0cd0308e75a9426c2e18d4eade14250f390e496a

commit 1c0f5646f9248ec3faaa2de0300c3efa81514f33
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Thu Jan 23 10:28:55 2020 -0800

    Add support for wrapped key operations with CCM and TDES

    Wrapped keys cannot be sanity checked by SW to ensure that they are
    valid for XTS and TDES operations.
    Add support for auth engine to use HW keys to support CCM, CMAC,
    and HMAC.

    Change-Id: Ibc108f9c37ded93cc07f4a63ffdf1b051bb6a469

commit f030b6527995ab6511f48a5a4dd5c8de8fd77118
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Jan 31 13:38:26 2020 -0800

    Changes for the uclib migration to Huracan UEFI.

    Fixed the issue in ce_bam.c for PBL.

    Change-Id: I6c48aa46d5aea4411dd2b9ac6045f060cc7fd00f

commit 8732f66f90060cf1f2b799a16aa3864e91174ab2
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Jan 13 16:25:45 2020 -0800

    Use generic SW key registers for VA operations

    Prior to this change, VA (virtual address) operations would set the
    provided key into the pipe key registers. This is unnecessary, and on
    targets with Hardware Key Manager (HWKM) the use of pipe key slots is
    impossible without first creating a wrapped key and a key policy,
    something which is currently beyond the scope of UCLIB.
    This change moves the behavior to using the generic SW key registers
    that are used in regular/non-VA operations.

    Change-Id: Id6b5e916c1640a9bc58a539e8bf7cddd5ab18d89

commit b5f0605b435128eeed747d33a262b8fe2d871bbf
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Jan 24 11:19:52 2020 -0800

    Released uclib version 0.31.0. This is an autogenerated commit. Please do not edit commit msg.


commit 9ea9ceeaddd18c8a44529b30e1eddb25e5ea483a
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Mon Jan 13 18:22:10 2020 +0530

    Fix newly reported Klocwork issues on Kamorta TZ & MODEM CRM.

    CRM ID : TZ.XF.5.1-00540-KAMORTAAAAAANAZT-2
    Issue is about suspicious dereference of pointer in function call before NULL check.
    Added check for valid context.

    Change-Id: Iafcbae8d3fefde3c9cb5d8645c8e2fece44c4696

commit d1b579902c18eb344411a5da5bb7e1baef98e310
Merge: d9f2ead a0acdb6
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jan 10 15:17:15 2020 -0800

    Merge "Remove need for adding the UCLIB_IMAGE Scons var in other images except MPSS"


commit d9f2ead2274c6b4be0a83b3192fc39cdb5a780b7
Merge: 5321b12 6c95fe4
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jan 10 15:16:43 2020 -0800

    Merge "Fix AES-CCM zero-length payload tests"


commit a0acdb6dc1a28f28f62eb765104f93758d87e89b
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Jan 10 15:03:34 2020 -0800

    Remove need for adding the UCLIB_IMAGE Scons var in other images except MPSS

    Change-Id: I3015bcf8dea6c3ac6c014bce8a9da874aff2dd1a

commit 5321b121348fe970f020af6ee3564d4927007556
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Sat Jan 4 01:14:49 2020 -0800

    Add unique error codes for Event handling,
    Fixed error due to non-ascii character in deploy script,
    Minor fix in uclib log api.

    Change-Id: Icafadce9223e6dafe4c3aef2d475033b0d871dcc

commit 2c0cc8089f0e6400d06e1b7df8c11d9fade37e8e
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Fri Nov 22 13:20:50 2019 +0530

    STREAM CIPHER SNOW3g/ZUC/KASUMi support

    Change-Id: I9500a3878c4f1a702d72929e304d461c6150be55

commit 3e1df9c58f724d4ffd8d4e85338cbc351b432dca
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Aug 29 14:06:24 2019 -0700

    UCLIB migration to MPSS

    Change-Id: I85e43e5556856d41d829f7e14ade5f9c54cc0706

commit 4ab925b2bf88109ab2e5f5a97592a1aed4b0e629
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Mon Oct 21 08:59:42 2019 -0700

    Restructured env struct and added supports for boot image.

    - added two sub structures under env structure: env_fp and env_cfg_ptr;
    - structure env_fp with all function pointers as const;
    - structure env_cfg_ptr with the rest of variables as configurable;

    Change-Id: Iaeb5338ff59024cb969a854599a366ddd2e0b442

commit 6c95fe4236409f2c9fa13e134ac441d18e90b5f9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Dec 11 16:39:15 2019 -0800

    Fix AES-CCM zero-length payload tests

    This change fixes the below two issues with AES-CCM zero-length payload
    tests:
    1. The nonce that is passed to the engine is the block-0 or b0 which is
    the "formatted AAD" consisting of some flags, the client's nonce, and
    the payload-size all encoded into an AES block size (16 bytes). The
    buffer for b0 is allocated on the stack, then filled in and passed to
    the CE-HAL layer to be used as the nonce for the CE HW. However this
    buffer was not being zero-initialized. So for payload-size of zero, the
    encoded payload-size contained whatever data happened to be on the stack
    at the memory location for buffer b0. As a result an incorrect nonce was
    sometimes sent to the CE HW.
    2. The final() API for HW CCM encryption contained a check to ensure that
    the output buffer is larger than or equal to the size of the tag plus
    the size of data remaining in the block buffer. However in the case of a
    zero-length payload the output buffer only needs to be as large as the
    tag length.

    Change-Id: I1ca1eb84d76fbaa098552bf4c9b3b8543ef1dc1e

commit 91a4dc5c0ae4cd07fadef6f53663d0c4a7037209
Author: Spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Mon Dec 9 11:18:42 2019 +0530

    Released uclib version 0.30.0. This is an autogenerated commit. Please do not edit commit msg.


commit e21dfd9d502eca4838a91f5349f017fe5aff4986
Merge: eac219e 22bc436
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Dec 6 10:48:42 2019 -0800

    Merge "updating the fix to address the exception caused bt  scrambled handle pointer"


commit eac219e58ae3567dd7155336c4cf689005082afc
Merge: a3e798d 9e913f0
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Dec 5 11:44:02 2019 -0800

    Merge "Add support for HW wrapped keys"


commit a3e798da76f2004acd75791b1caf09a47a4ab4f3
Merge: 92f52d7 1f1e338
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Dec 5 11:43:25 2019 -0800

    Merge "Reduce output data being queued for CCM decryption"


commit 22bc4361fbbdb9740d302173698b0fe3f0055629
Author: Spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Thu Dec 5 22:00:24 2019 +0530

    updating the fix to address the exception caused bt  scrambled handle pointer

    Change-Id: I56992c7f8de70b7f6ff84ada74032b8d21d9d2be

commit 9e913f0519dbc01368969c0c9bada1cfa095995c
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Oct 28 15:48:36 2019 -0700

    Add support for HW wrapped keys

    Add support in the HAL layer, for keys wrapped by the Hardware Key
    Manager. This support is being added in the HAL layer so it can be
    supported across all algorithms that use the CE engine, such as Cipher,
    HMAC, CMAC.

    Change-Id: I44f7fab212d2a8d50c477ba2183ea64f77113b3d

commit 92f52d7b610991c55fe2da1be273848bb6f4835b
Author: Spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Wed Dec 4 01:13:47 2019 +0530

    Released uclib version 0.29.0. This is an autogenerated commit. Please do not edit commit msg.


commit 1878dca4393063ca43c3a7a98806201beb90d3a6
Author: Spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Wed Dec 4 00:23:13 2019 +0530

    removing the bam static configurations in  Ucenv_uctest.c

    Change-Id: I82ed3ad29dd1af670f35635ace01c72014d8bfe6

commit 1f1e338de77ddf86d680f228ebd04e525f2b5f51
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Nov 25 13:13:14 2019 -0800

    Reduce output data being queued for CCM decryption

    During AES-CCM decryption, the amount of data being queued on the RX
    pipe for the last chunk of ciphertext was 2 * (x + 16) where x was the
    last bit of payload ciphertext. However the data being used by the CE
    engine was just (x + t) where t is the tag size. This extra data being
    queued on the RX pipe was resulting in two issues:
    1. When using BAM for commands to the engine, part of the result dump
    was being written into the excess RX buffer, rather than into the result
    dump buffer.
    2. When using HWIO for commands and BAM for data, the CE engine would
    end up leaving the excess RX descriptor(s) as unused/un-consumed,
    causing the BAM driver pointers of last-used-offset and
    last-acked-offset to go out of sync. As more CCM tests are run the
    pointers get further out of sync till eventually the BAM driver
    complains that it has run out of descriptors to use.

    A couple of interesting points to note are:
    1. This issue is not seen on the TX side because when transferring data
    'to' the engine, likely because the CE engine is using the SEG_SIZE and
    ENCR_SEG_SIZE registers to read in all the data that has been sent and
    then figures out how much to process.
    2. On the RX side even if we queue, say, 5 descriptors and set the EOT
    on the last one, if the engine needs only 3 descriptors it will consume
    them and set the EOT on the 3rd one. However this information is not
    conveyed back to the Crypto driver, so it has no way to know that the
    engine consumed fewer descriptors than the Crypto driver expected.

    Change-Id: I24331c868a62994856058573b2a142af085cc71e

commit 0770221ae10843fb4afd40348dc7c0a938bc7153
Author: Spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Thu Nov 28 02:18:36 2019 +0530

    Saipan const compiler warning fixes

    Change-Id: Ia6f76219731a9a2a78efe4661e4c0e7d967720dc

commit 8653faebd231fb85be91fd5d5f4b238f699debf4
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Nov 19 16:33:54 2019 -0800

    Modified comments on Copyrights and added lt_3 changes in pka.

    Change-Id: Ide0b10fdfa30f7161fa1c6d0f864e8069035a5f9

commit 8c5a9b5c9927819b226316125ed8edb678c2602c
Merge: 8400e4f ea329a2
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Nov 22 15:38:49 2019 -0800

    Merge "Create a basic off-target fuzzing framework"


commit ea329a29b350cbfbf6cf89ab181236f47ef91360
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Oct 15 15:19:58 2019 -0700

    Create a basic off-target fuzzing framework

    This change creates a basic framework to fuzz the cipher, hash, kdf and
    mac modules in UCLIB, by randomly selecting which module to fuzz,
    randomly selecting which API within that module to fuzz and then
    distributing the random data across the inputs to the chosen API.

    Change-Id: I58911e9fef9e4d9377f048825b1017a7c6b56531

commit 8400e4ff31113250d2453618c07b203fcd4a1a0b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Nov 8 16:21:15 2019 -0800

    Revert BAM command descriptor to be uncached

    In a previous change the BAM command descriptor memory was being
    allocated off the heap, which on TZ corresponds to cached PIMEM memory.
    Unfortunately at the moment cache-maintenance-operations on PIMEM take
    about 8-10 micro-seconds which causes marked performance degradation for
    small crypto operations.
    This change makes the command descriptor region uncached again, but
    moves the BAM_DRIVER_CTX_t to regular (cached) memory allocated off the
    heap.

    Change-Id: I8b0f5a61da90b14c275e38c610860da7255fea29

commit de468aed03d8347904feffca0c5f46a5d61ee768
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Nov 5 14:44:29 2019 -0800

    Deploy script v2.
    Reworked the script as per the new requirements to deploy sources
    to the uclib component rather than binaries to ssg comp.
    Updated instructions to deploy at "go/uclib101".

    Change-Id: I0b37010877f091e9fdb1ae9d6a23d51461caea58

commit 52ad0e083b57bde30519faa0fb07f9e61b3cdcd2
Merge: 74497e6 5a73b2e
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Sun Nov 3 12:20:45 2019 -0800

    Merge "formatting Warning fix"


commit 5a73b2e906b3cb155936afbcc36c3d5480199b69
Author: spandana Kethamreddy <skethamr@qti.qualcomm.com>
Date:   Thu Oct 17 21:10:07 2019 +0530

    formatting Warning fix

    Change-Id: If1ca3aab5adcff1b4269efa3d20e6d1f7ca99c81

commit 74497e6f584898626b50641c80dadbe37f0b6cb6
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Oct 1 16:34:19 2019 -0700

    Fix CRYPTO_CONFIG value during engine unlock

    This change is a follow up to the CE-BAM refactoring.
    This changes fixes the CRYPTO-CONFIG register value being used during
    the engine-unlock operation. Prior to this change the earlier value
    would lead to the endianness being set to big-endian. As a result when
    writing pipe keys for VA operations in HWIO mode the change in
    endianness was leading to an incorrect keys and an incorrect
    ciphertext/plaintext output.

    Change-Id: I00845e653948036b61a015d88c893bbc2ecbdcbe

commit 7c7e9a1dc9ad06312818eb0f936f13c5914d69eb
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Sep 9 11:51:23 2019 -0700

    Refactoring CE-BAM

    This change addresses the below points.

    1. Combine 'auth' and 'cipher' engine registers to avoid duplication and
    keep the setting of registers in one place.

    2. Merge HW version specific command registers with the auth+cipher
    registers so that we only ever need to queue a single command descriptor
    buffer.

    3. Allocate command descriptor memory dynamically so that we can adjust
    the size of the command buffer based on which HW features we support,
    and also so we can reduce the use of uncached memory.

    4. Add a mode to allow CE commands to be sent over HWIO but data over
    BAM, which will be used in the PBL image

    Change-Id: Ie62f51aefa4751233f482e19ea6e56e1de00bedb

commit 72a0799db8cb4ce14b0fffb268b482eac5c753d7
Author: Ashish P <c_apardk@qti.qualcomm.com>
Date:   Fri Sep 27 16:09:16 2019 +0530

    Fix Newly reported Klocwork issue in uctest.
    Issue is about double free heap memory in uctest_hash.c file.
    NULL all pointers after operation to avoid dangling pointer issue.

    Change-Id: I26363597833557fa1f99f5287165c6e1d12e64da

commit 39ac18f2d026868006710bce6b55d99952379be6
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Sep 25 16:03:11 2019 -0700

    Released uclib version 0.28.0. This is an autogenerated commit. Please do not edit commit msg.


commit 71d6c1e51c8cf72f0d9ffa5ee951544b0e1d4499
Merge: 699a461 bfd12ef
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Sep 25 14:24:59 2019 -0700

    Merge "Fix for setting aes ctr_sz by value for HW engines"


commit bfd12ef9433e83f916e26017c3a852ccc9f44bc5
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Sep 16 21:59:02 2019 -0700

    Fix for setting aes ctr_sz by value for HW engines

    Change-Id: I323533cdbef38be8ed7f3b71417262c2359cf656

commit 699a4611ae9afa22097600bb4c9cc2c6c318c661
Author: Ashish P <c_apardk@qti.qualcomm.com>
Date:   Thu Sep 26 00:54:48 2019 +0530

    Skipping Warnings by adding flags in scons

    Change-Id: I23f8d5ce149cff252d5251119a587f777b2ab83d

commit 50f36b42791603dcc14fe92f1606374790db8466
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Wed Sep 25 17:08:06 2019 +0530

    Fix Klocwork issue left in uctest.
    This issue is reported on TZ.XF.5.0-02282-SAIPANAAAAANAZT-1.
    NULL check added after get_algo_name() function in uctest_hash.c file.

    Change-Id: I9744310c294aae75ae371b6ea5040aa5bf83bbb3

commit 770bca300c7087e26bd5288e9b721534804cc718
Author: Ashish Paradkar <c_apardk@qti.qualcomm.com>
Date:   Tue Sep 24 17:12:53 2019 +0530

    Fix Klocwork issues in uctest.
    These issues are reported on TZ.XF.5.0-02282-SAIPANAAAAANAZT-1.
    Issues are based on NULL pointer dereference in uctest_hash.c file.


commit 066b5795a8636f9fc4e7e9035d49eb9efa7b1725
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Aug 1 23:31:28 2019 -0700

    Enable UCLIB component in TZ.
    Modified SConscripts to compile uclib sources with TZ, Commonlib, Uefitzt and OfftargetTZ images.
    Updated folder structure to match with the uclib tz component.
    Updated Deploy script to deploy sources to the component instead of binaries. Deploy script will build tz, commonlib, uefitzt and also run tz offtarget tests.
    Fixed Klocwork issues and errors during Offtarget TZ compilation

    Change-Id: I66927eb2e799712287f863a903a7ac58969799ae

commit 5bf3ef9e20a5978ef2e33fbf90ed5a82ffb37630
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Aug 15 11:13:40 2019 -0700

    Released uclib version 0.27.0. This is an autogenerated commit. Please do not edit commit msg.


commit cf3529c70c17ae9d91e06552d9fafd1f69fb66af
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Aug 14 16:21:22 2019 -0700

    Add fixes for SBL1 compilation

    Change-Id: Ic7b00daed5a60fb30835b367056bcf7caf794150

commit b5c2eb4fba9fccee5b6689817de149f9b6e33be4
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Aug 5 16:07:41 2019 -0700

    Fix Klocwork issues, address Wycheproof ECC tests

    This change addresses Klocwork issues reported from the Boot ROM image.
    It also adds changes to the PKA driver to address Wycheproof ECDSA p384
    tests which were failing on edge cases of the Shamir's trick.

    Change-Id: I2b7a8a3d2e9ec576d1cc2d4a5f0edb4f3f685f93

commit cd5255f13946538eaa665c313f1718e23e19b1ab
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Wed Aug 7 15:44:44 2019 +0530

    Released uclib version 0.26.0. This is an autogenerated commit. Please do not edit commit msg.


commit 2206d8836b0a9c858744a897be34665c42a06e71
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Tue Aug 6 18:24:01 2019 +0530

    Added CE Version check for aes-xts and 3des

    Added CE version check along with key checks for AES-XTS and 3DES algorithms.
    Also removed the key checks in SW to make it backward compatible.

    Change-Id: I5abef8671611f15238f48ee8a7058be20b0c9663

commit 8dcb8b596706992f3062be136cf43fdda278b70d
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Jul 31 13:13:51 2019 -0700

    Released uclib version 0.25.0. This is an autogenerated commit. Please do not edit commit msg.


commit 4cb936daff8f20f66e8aa3186c7f6dee29b33cf9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 23 21:54:40 2019 -0700

    Fix compiler warnings under PBL and SBL1 builds

    Change-Id: I6f5cf453de69db26bd28673b9894b2b62bd3e40c

commit f52bcd83e9c28e53cdab73f789c0fae826d9a980
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Jul 24 13:26:31 2019 -0700

    Fix issue with h/w pattern processing. Fix IV ctr size not being set in VA mode.

    Change-Id: Id0b02f21c5c5befc076c0595f745716db7e43e00

commit 5157fe5edf26db6aa42042986c22806c7f7f7a18
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Jul 19 14:17:53 2019 -0700

    Released uclib version 0.24.0. This is an autogenerated commit. Please do not edit commit msg.

    Change-Id: I5247b3913381e2246d0a52fd12ecc62e7c16fdef

commit 4cd4c2af69ab1ddcc913ed95d3972fc59ca611cd
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Jul 16 17:06:33 2019 -0700

    Fix for BAM pipe config for standalone case, Cmac bug fix for data size >16 bytes

    Change-Id: Ib65dd2775a2bbe1f501c43abd775398ea5346b74

commit a86745cc4926b5fe6511cc6487c4a4b94af92159
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 16 16:18:53 2019 -0700

    Add more 2DES test vectors for off-target tests

    Change-Id: I1d29ad6b534b1c9e4613757f0d99063bf4d36df8

commit ed7c0413f8db48496ee67f0e9d60fb423e547e65
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Jul 8 11:07:40 2019 -0700

    Add support to reload PKA FW and re-use PBL data

    This change adds an environment parameter to configure whether the PKA
    firmware needs to be reloaded every time the HW is unlocked. This is
    needed during boot up when secure-world PBL and non-secure-world
    XBLLoader might be sharing the same EE (execution environment) index for
    the PKA HW.
    Also, the environment parameters for FW buffer and size are being change
    to accessor functions so that TZ/XBL-sec can point these functions to the
    buffer/size from the PBL shared data.

    Change-Id: Ib0cf0e81e8cb98a09fdbc555c32fa3ac7bf32cfd

commit f8a3ab7fcaa921ae2209c31d6cb8ca0e292941e3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Jun 7 15:27:52 2019 -0700

    Add changes to support ARM RVCT compiler

    The 32-bit sbl1 image (currently) uses the compiler "ARMCT5.01 Build
    94", which does not appear to be c11 compliant and therefore throws
    several errors and warnings on UCLIB source files. Some of these can be
    worked around using the compiler flags "--c99 --gnu". This commit
    captures the remaining changes needed.

    Change-Id: I5a0b506b8b35524606eb7372e1b1f7b32fa69ea7

commit 1400b3372ec699fb36aa85db077ac9de23767289
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 2 17:00:56 2019 -0700

    Add support for 2-DES

    Separate support for 2DES from 3DES and add it as its own cipher
    algorithm.

    Change-Id: I021bd31ff823ea14000e145ee9f18b62c562af3a

commit 55bc1f63fc406ef0bacc12ecbbd05149fce1cc4c
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Jun 17 12:42:59 2019 -0700

    Fix for configuring BAM pipe parameters for VA case

    Change-Id: I51a655efb3a82283845cd8779c942a4f803c0c1a

commit aaac7597f55366a3da12595eb6eaa96e662f02ac
Merge: f6dcb45 641f958
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Jul 3 10:07:06 2019 -0700

    Merge "Add support for AES-CTR mode to the PBL image"


commit f6dcb4552b821e22adef870d0fde55c9044fe22b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 2 15:34:42 2019 -0700

    Add support for an off-target fuzzing test binary

    The test binary can be compiled and run using the below command:
    python trustzone_images/build/ms/build_all.py CHIPSET=sm8150 --branch
    TZ.XF.5.0 --cbt=uclib_unittest --cnb fuzz=1
    Note that this commit does not include any useful fuzzing tests. Those
    are yet to be added.

    Change-Id: If6ebbbfb9ea65df60902876a1b68f2d734333152

commit 641f9586f2514b83942b1c2ac770a613067f5b02
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 2 15:26:34 2019 -0700

    Add support for AES-CTR mode to the PBL image

    Change-Id: Id625060891e25efe6921eb74b45a0ffdff1b6b93

commit 72b1ecd50498f38bf7f92da64e21a87fa09e5050
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Jun 20 14:50:27 2019 -0700

    Add support for non-blocking hash updates

    This change allows the client to call a hash update operation as a
    non-blocking call. This is achieved by the following changes:
    1. When an update first comes in, first check if the CE HW is busy from
    an earlier update. This check should not block.
    2. If the is-HW-ready check returns success, that indicates that a
    previously queued transfer has completed, so we must now save a copy of
    the BAM context.
    3. When any hash update data is pushed out, the internal block buffer
    might first need to push out any internally buffered data. This transfer
    is blocking. However once this is done, the push for the caller provided
    data will be non-blocking.
    4. When we check for BAM result completion, if the status returns busy
    (either because the pipes are busy sending/receiving or because the HW
    engine itself is busy), then we set a 'transfer pending' flag and return
    success to the caller.
    5. The hash-final call is always blocking

    A few notes to keep in mind regarding these changes:
    1. They currently only add support for the non-blocking mode
    for hash operations.
    2. They assume that the non-blocking flag gets set by the caller for the
    first update, and that after the final() call this flag would need to be
    set again if required.
    3. They assume that there is only a single client performing BAM
    operations as the engine is not unlocked when a transfer is pending and
    we return back to the caller.
    4. They enforce that the size of the data for a single update does not
    exceed the maximum BAM transfer size. (This could be relaxed by breaking
    up the data and keeping all-but-the-last transfer as blocking, but this
    is currently not implemented)

    On the caller side, a sample implementation of a non-blocking-update and
    a non-blocking-final would be as follows:

    parallelHashUpdate(buf, len):
      enqueue({buf, len})
      do
        head = getQueueHead()
        ret = uclib_hash_update(handle, head->buf, head->len)
        if (UCLIB_SUCCESS == ret)
          dequeue()
      while (UCLIB_ERR_HAL_CE_BUSY_ERR == ret && queueIsFull())

      if (UCLIB_ERR_HAL_CE_BUSY_ERR == ret)
        ret = UCLIB_SUCCESS;
      return ret

    parallelHashFinal(dgst, dgst_len):
      while (!qIsEmpty())
        head = getQueueHead()
        ret = uclib_hash_update(h, head->buf, head->len)

        if (UCLIB_SUCCESS == ret)
          dequeue()
        else if (UCLIB_ERR_HAL_CE_BUSY_ERR == ret)
          continue
        else
          return ret

      return uclib_hash_final(handle, dgst, dgst_len)

    Change-Id: If9e314a95a14038cb9dc6e2a5a2740b4ea87fc07

commit 32a49dfb0ae08f2d279d9f9e3f2745315dd9afd8
Author: Srikanth Vaindam <svaindam@qti.qualcomm.com>
Date:   Tue Jun 18 01:40:35 2019 +0530

    Enhancements in new GPCE-v5.5.1

    In case of AES-XTS the XTS_Key and Base_Key Should not be equal.
    For 3DES, no two key should be equal
    Changes include:
    1. Checking for the above keys and assert if they are same.
    2. Software workaround for correcting the endianness for pattern processing(HW bug present in v5.5.1)

    Change-Id: I95e0c4c470b18cf2d3f6cc37c2fa5d1bde67dd06

commit 6697e095f4e8d31a5fc1d3148f022aad6906efa6
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Fri Jun 14 16:57:18 2019 -0700

    Add support for SM4 cipher

    Added support for SM4 in UCLIB
    - Supported in ARM usr library
    - Supported in x86 off-target test library

    Key size supported:
    - 128 bits

    Modes supported:
    - CBC
    - CTR
    - ECB

    Change-Id: Ie59d9d7b62cef2633ead4d826c3afd0dec6468f7

commit 3c682749adc97be56be67fa1832f6bf73121c1a0
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue May 28 16:34:22 2019 -0700

    Update copyright information

    Change-Id: I52f00ff297510a66c11c94d1610dbf87b826b9f7

commit 6b4b484b90284dff8a1863351522ed9f50e5b876
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu May 23 12:53:42 2019 -0700

    Released uclib version 0.23.0. This is an autogenerated commit. Please do not edit commit msg.


commit 7194667f006848f374fa71f41ea0a5382f38c353
Merge: 33a95d0 297b8eb
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Thu May 23 08:46:32 2019 -0700

    Merge "Move logging API into a separate source file"


commit 297b8eba0787d729880ec1f397990e3f71adb0f6
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue May 7 16:18:33 2019 -0700

    Move logging API into a separate source file

    Below is a list of changes being included.
    1. Move the environment logging API to a new source file which is
    included based on whether the debug flag is enabled in the image config
    file or not. This is being done because the PBL image does not support
    definitions for the va_list and associated functions for variable
    argument processing.

    2. Make the clock voting and reference counting callbacks optional as
    they are not used in some images (like the PBL for instance). This
    removes the need to provide stub implementations for the callbacks.

    3. Pass leftover memory from the BAM context to the BAM driver. This is
    needed in the PBL when the BAM driver executes in the context of XBL-sec
    and therefore cannot use globals or PBL RW memory.

    4. Add scripts to generate PKA firmware C source file and to parse CAVP ECDSA
    signature verification test files.

    5. Add more NULL pointer checks to quiet KW 'Critical' issues raised in
    the PBL environment.

    6. Make clearing of PKA operands optional

    Change-Id: I5bbad21c8e1d14372e0ac2802379cd640d39276a

commit 33a95d07231fadb718dc59afabb9671f03b77753
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri May 17 13:24:56 2019 -0700

    Update copyright info in some files

    Change-Id: I40e1593a628f9a7169568b0491cb129ea724146e

commit 976aab7e1b644ea13ec6c8e713a148514c00e1f1
Merge: d4838fb c11555a
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue May 14 10:17:08 2019 -0700

    Merge "Fix logic used to increment counter for AES-CTR"


commit c11555aa44625b7bc5f6d297d4d01ee8e856a204
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri May 10 16:59:05 2019 -0700

    Fix logic used to increment counter for AES-CTR

    The current implementation of the way the AES-CTR counter is incremented
    relies on creating a bitmask where the set bits represent the bits that
    could be affected when the counter is incremented. This bitmask was
    incorrect when the counter-size (in bits) was not a byte (8-bit)
    multiple.

    Change-Id: I841b55ec9881ac8a20213c6321c9f912c9ecfba2

commit d4838fbf48618659c277944d7fd79e8e087ceab9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Mar 29 12:49:22 2019 -0700

    Support for HW ECC and RSA signature verification

    This change adds initial support for the use of the PKA HW to verify ECC
    and RSA signatures. This commit does not support the 521-bit ECC curve as the
    currently available PKA firmware version does not support this.

    Change-Id: I8c25a99cc3fe77f9e958f2bb852cd10b52c7df7d

commit a8f516d950042340a8befc921244d764a4da84ce
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jan 8 17:19:09 2019 -0800

    Integrate UCLIB into the Boot ROM image

    Change-Id: Ia04872afc192b2e100c5634644fc44e7c94fd222

commit e63b33486aa1fb999cc2af83fb390fe390a09a3d
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Thu Mar 14 18:17:37 2019 -0700

    Released uclib version 0.22.0. This is an autogenerated commit. Please do not edit commit msg.


commit db9fc5722afbde7714937cba307b9e3251ea0aa1
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Thu Mar 14 16:22:05 2019 -0700

    Fix error code when using partial block offset with HW
    which does not support it.

    Change-Id: I503f2bc5a8db735067fe276a48597edb1dadaa45

commit 6cea16325b217a3e3230abc48c0fd113ac378d97
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Mar 12 09:23:37 2019 -0700

    Update copyright informations

    Change-Id: Ic7047d9d639b2e574b32b7f063fbb20a9bc32884

commit 5641baa6e2c8315a4254c97982a2dca452b72c93
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Mar 8 17:42:32 2019 -0800

    Fix for setting CTR SZ mask

    Change-Id: I0b245486e78e3f77c0db649432e3b1ed50244f4a

commit 36381e197308d27c414c01bc9dd6159a9cc39cf6
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Mar 1 13:50:18 2019 -0800

    Remove unused bigint code

    Change-Id: I1819e65e62dde16d350a019fc589a5acb3c78e59

commit 73b4ce97c7645d9e68cd30289f15c117b8556b36
Merge: b61eab8 cb7d0ee
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Thu Feb 28 16:08:41 2019 -0800

    Merge "Migrated Offtarget UCTEST tests to TZ UnitTest Framework. Features - Line coverage, Address sanitizer, Undefined Behavior sanitizer, googletest style unittests. Also fixed compile time warnings as well as errors reported by Address sanitizer."


commit b61eab8aa0b4d81edada4b5355e3e9e256ab8937
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Wed Feb 13 11:27:04 2019 -0800

    Add support for CE 5.5.0 HW in BAM driver

    New features:
    - AES pattern processing support
    - AES CTR partial block offset support
    - Pipe policy configuration and key provisioning
    - Cipher operations use pipe key and pipe policy

    Change-Id: Ide1445163e1d8df68b45fab46d3ee6978121beb4

commit 69878e67352813486427966a7172823a6443700d
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Feb 12 14:32:24 2019 -0800

    Released uclib version 0.21.0. This is an autogenerated commit. Please do not edit commit msg.


commit 92084126e9b09b2ae52657e7db7570ab5d589c48
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Feb 11 13:32:58 2019 -0800

    Fix for CR 2393020 - Perform bam polling after command to unlock CE.

    Change-Id: Ifc20d511a41d8475bcda4892733c554cfbc60bc9

commit cb7d0ee7f874e5a280108854f9e4804d14efe395
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Jan 31 12:37:35 2019 -0800

    Migrated Offtarget UCTEST tests to TZ UnitTest Framework.
    Features - Line coverage, Address sanitizer, Undefined Behavior sanitizer, googletest style unittests.
    Also fixed compile time warnings as well as errors reported by Address sanitizer.

    Command to build and run tests:
    (Requires uclib synced under trustzone_images)
    python build_all.py CHIPSET=sm8150 --branch TZ.XF.5.0 --cbt=uclib_unittest --cnb

    To run with sanitizers and linecoverage
    python build/ms/build_all.py CHIPSET=sm8150 --branch TZ.XF.5.0 --cbt=uclib_unittest --cnb OFFTARGET_ASAN=1 OFFTARGET_UBSAN=1 linecoverage=1

    To run this and all other available unittests in TZ:
    python build_all.py CHIPSET=sm8150 --branch TZ.XF.5.0 --unittest --cnb

    Change-Id: Id45f8044c02ed725d25896cbb01e1585d41a9a8c

commit b8d5eca784356aa7d3ecde653d4af340258222d2
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Jan 9 10:24:55 2019 -0800

    Released uclib version 0.20.0. This is an autogenerated commit. Please do not edit commit msg.


commit a784d1b50baebc3b18b6fcfa3e3f8ed41a9cf054
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Jan 8 13:36:12 2019 -0800

    Set default BAM pipe for non-VA cipher operation


commit d2db6cc753f8807e066d2e5beea60d8e14e5721f
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Nov 15 17:35:36 2018 -0800

    Added offtarget test app for offtarget testing of SW based algorithms in uclib.
    Added uctest_builder.py script to generate makefile to compile all dependencies
    i.e. uclib sources, and build the offtargt test.
    Syntax: From uctest folder, run - 'python uctest_builder.py'
    To run offtarget tests, run - './uctest32' or './uctest64'

    Change-Id: Ib6b6fd1ce87eb7bf8e5b107e650d971a124ff149

commit 38a9bc22c052c3266bd7a6ba02d4c301cbe5cf20
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Dec 3 16:03:44 2018 -0800

    Released uclib version 0.19.0. This is an autogenerated commit. Please do not edit commit msg.


commit 5a7727bfe3397dba295f7c7ab7a8de186f1bbc08
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Tue Nov 27 17:30:38 2018 -0800

    Make uclib env struct readonly in order to enhance security.
    Add crypto yield api in env.

    Change-Id: I3d9b208b884e952fe2d546a2053f34c648f37f20

commit 395c11cde225a158c2251d9497dd9a1d47c5a4f1
Merge: 49a95ba 0ed637a
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Nov 27 16:16:55 2018 -0800

    Merge "Enable uclib compilation for modem"


commit 49a95babf7fe731ecffe3e7c48aac33c8b36bfa5
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Nov 16 15:24:59 2018 -0800

    Released uclib version 0.18.0. This is an autogenerated commit. Please do not edit commit msg.


commit 9ee03bc0b06c1d42b7594427212c6b4ee0d6e27e
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Thu Nov 15 07:45:56 2018 -0800

    Added NULL label supports in kdf.

    Added NULL context supports in kdf.

    Change-Id: Ia4de19207941a5e34709c547d6010cecc4f9008e

commit 0ed637afe461fddc621aaae31aee17b4910fd3cf
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Oct 29 18:03:52 2018 -0700

    Enable uclib compilation for modem

    Change-Id: I780c2e513e67db0db2733143a27aa410ed18809e

commit d3bffc38d2a7c9691958ec5ef775f97190fbff7e
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Nov 12 14:33:38 2018 -0800

    Released uclib version 0.17.0. This is an autogenerated commit. Please do not edit commit msg.


commit 888622060f969a916f1a77286545e77cf6f80327
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Nov 9 17:59:40 2018 -0800

    Fix for CR2347838 - cipher_decrypt is not returing when output buffer is smaller than input buffer size.


commit 1b5997a9feea5a4cdcd8ccb80487c92a3560767a
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Nov 1 11:36:17 2018 -0700

    Updated uclib deploy script to -
    Use git clone instead of repo sync to download uclib sources.
    Added option for using existing ssg-tz branch for deploy.
    Changed the way version file is updated with commits.
    Fixed trailing space in commit comments.
    Added support to deploy on various ssg.tz components.
    Modified the autogenerated commit msg to indicate uclib release version.

    Change-Id: I076c5e632aef83e7c2ad59e49e244cd2b65cbecf

commit 81291c87f74fd6b49fb6e9088c8ab11e9c58b14a
Merge: da8924d 7634134
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Oct 29 11:33:09 2018 -0700

    Merge "Update uclib version. This is autogenerated commit. Please do not edit commit msg."


commit da8924d08f471f91106d4f722cc42e6dc28b24a6
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Oct 29 11:21:19 2018 -0700

    Add script to help verify ECC point multiplication

    Helper script to perform operations involved with ECC point arithmetic,
    such as modular addition, modular subtraction, extended-GCD for modular
    inverse, and point addition.

    Change-Id: Id12d143181398bc9c2cc1bf1554ac5f24b9f372b

commit 763413420f22533a9cfd1c5d6e43af9852bb3d49
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Oct 26 14:15:25 2018 -0700

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: Ice9d02f2a53ad611f6a77d97f97931310500f651

commit e993ee699301f04736a808a33dfdf01b31a8c5d2
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Oct 3 10:21:15 2018 -0700

    Add support for copying a UCLIB context handle

    The TEE_CopyOperation under the FIME GP Compliancy test has a requirement to be
    able to copy the handle for a crypto operation.
    Add support for a copy operation that performs a deep copy - i.e. copies all
    simple members of the context along with allocating new memory for all
    buffer/pointer members.

    Change-Id: I12bf4220e4350b1379ac0a17f3b494c6cd0b1903

commit cbcc988b4874f45c8322f0b636dd72e4e07cd019
Merge: b702ab7 4138a2c
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Thu Oct 25 14:42:36 2018 -0700

    Merge "For ECB and CBC modes, return error if input data len is not multiple of block size and padding not specified"


commit 4138a2c146408ced38afdeb499535819c7eee8a2
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Oct 24 12:08:02 2018 -0700

    For ECB and CBC modes, return error if input data len is not multiple of block size and padding not specified

    Change-Id: I261a5ff7c2b3fdb13379aa0bd95dfcd1ee487171

commit b702ab77c938b3c99731f9a0d9345f4a7103e4cb
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Thu Oct 25 00:19:22 2018 +0530

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: I4297eb6af8c612b56f74e049deb2428dcc08b036

commit 79fff9572a35173e64f23448dbba83142d90f456
Merge: 668a2f7 0d18f7e
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Oct 23 09:40:24 2018 -0700

    Merge "adding the check  if ccm mode returns mac failure"


commit 668a2f7ad3412d8f48bd5ca19a573d3cb2d60782
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Oct 16 11:42:04 2018 -0700

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: I5e8190a9e4a87e44f65962c0f2d2cb7451ee2cc5

commit 0d2e301a177d3b1ab2fccaf49cc909f5df355568
Merge: d7b25d6 e710dfc
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Oct 16 10:47:50 2018 -0700

    Merge "Changed prng_en_fp to prng_dis_fp for Env_disable_prng_access function."


commit e710dfc49b98a09cc5529d36f271dfc53539eaa7
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Oct 16 10:20:57 2018 -0700

    Changed prng_en_fp to prng_dis_fp for Env_disable_prng_access function.

    Change-Id: I274e19b4bbb32a0902551a1e80b56643bbd2250c

commit 0d18f7e7f15217ba329925d4e6a4a7b8de492f99
Author: swapnil shrotriya <sshrotri@qti.qualcomm.com>
Date:   Tue Oct 16 22:48:58 2018 +0530

    adding the check  if ccm mode returns mac failure

    Change-Id: I90f70c714ebc69d2d96161032c0092d22dae98f2

commit d7b25d618739711f41e867bc1460838537c827dd
Merge: 28e7ea0 7aa515f
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Oct 16 09:33:16 2018 -0700

    Merge "Added CMO for output buffer after HW CE operation is complete. Without CMO, CPU may read stale valid cache lines which have been speculatively pre-fetched while HW CE operation was in progress."


commit 7aa515f7164082488e6c89fe6e13235492e1ccc4
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Oct 16 08:57:18 2018 -0700

    Added CMO for output buffer after HW CE operation is complete.
    Without CMO, CPU may read stale valid cache lines which have been
    speculatively pre-fetched while HW CE operation was in progress.

    Change-Id: Ib3f8c402e68c446c227dfcdb0ba852479492a2fc

commit 28e7ea001ad0581ee4e3febcace2b0be86688450
Merge: 8320a0a 75737fa
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Oct 15 19:39:49 2018 -0700

    Merge "Added reset for VA operation."


commit 8320a0ac19ad69873c76e066e0fedc290c78f114
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Mon Oct 15 11:23:35 2018 -0700

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: I88e6a13578975e98ebad40b7c26285d0d591866f

commit 9854e3b9372cf801b570810e4e145de7cb074246
Merge: 00c863d 1bc2dde
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Oct 15 09:44:05 2018 -0700

    Merge "- Added memory barrier before clearing aux. buffer to make sure copying the   aux. buffer to output buffer is completed. - Crypto status must be read and saved in CE HAL context before the BAM pipe is unlocked.   Crypto status may change if HW CE pipe is locked by another EE right after UCLIB unlocks   the pipe."


commit 1bc2dde53d126e65f7486d77936e602c792531a2
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Sun Oct 14 15:33:26 2018 -0700

    - Added memory barrier before clearing aux. buffer to make sure copying the
      aux. buffer to output buffer is completed.
    - Crypto status must be read and saved in CE HAL context before the BAM pipe is unlocked.
      Crypto status may change if HW CE pipe is locked by another EE right after UCLIB unlocks
      the pipe.

    Change-Id: I16a164a92e4bba26ad5ecd6bfbca162fe09f5c20

commit 00c863d7d17c3a3ae4b313841bfe5c0c34a041e1
Merge: 96933e3 92ddd8b
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Fri Oct 12 12:16:24 2018 -0700

    Merge "Configuring Crypto Config register thru command descriptor in BAM mode. HWIO access to this register in UCLIB driver will result in NOC error if HW CE pipes are already locked by another EE."


commit 75737fafd7c98edc6dcec160a9bbd33bbce5bb8b
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Thu Oct 11 19:06:55 2018 -0700

    Added reset for VA operation.

    Modified for the review comments.

    Change-Id: I11b628767c307e2026f1123176a7090ab7cfef3e

commit 92ddd8babda92d0a591c3f3c4e813b64009ac033
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Fri Oct 12 08:45:57 2018 -0700

    Configuring Crypto Config register thru command descriptor in BAM mode.
    HWIO access to this register in UCLIB driver will result in NOC error if
    HW CE pipes are already locked by another EE.

    Change-Id: I0defb979d16befbcbf7f59c69ae0bee5e6de4c35

commit 96933e3ae84e2adfa5344c1050c2aa9fb77ee8b9
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Oct 11 15:45:30 2018 -0700

    Use the exact modulus for SM2 sign operations

    SM2 signature verification steps were running into failures for about 1
    in every 40 to 50 cases, depending on the value of the random number 'k'
    chosen during the sign() step. This was root-caused to be due to an
    approximate modulus being computed at different points in the signature
    verification process.

    Change-Id: I1debedeab21b43ef4cc9e4fa8e0bf71f1e04a37f

commit 299bf98f26e6045385ff647faaa1c734bded4a65
Merge: b5e87bc 54c4e09
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Oct 8 16:51:50 2018 -0700

    Merge "Return error when XTS keys match in FIPS mode."


commit 54c4e097c3b34505cc4e2481f2fa8024c1faa002
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Tue Oct 2 16:24:21 2018 -0700

    Return error when XTS keys match in FIPS mode.

    Change-Id: I5baa4e43a244410ad2b70f6455f143ad04a84eaf

commit b5e87bc8dc834f378b1c30bd5f9e107c0e98d3c4
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Oct 3 11:43:49 2018 -0700

    Update uclib version. (Manual deploy on 10/2)

    Change-Id: I6629b8e2acdf88c6e30162ef88953f7d821373fe

commit 761ec6dd41b1f5f6df6565bacb48890925ef1ce1
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Sep 28 12:12:25 2018 -0700

    Revert "Added check that XTS key != key"

    This reverts commit a421b2b537537eaa52813fbf85a1fd4751d4ce6c.

    Need internal discussion to determine correct behavior when keys are same.


commit 333fb37e9c238e2551b27a1626e1887aa0836b30
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Sep 26 14:52:30 2018 -0700

    Add clk voting for cipher VA operations

    Change-Id: I0113e945b0d348373eb21d94525b801a104b629f

commit 3cced984a343005a66649f41d6eec9ca540de750
Merge: a81a4d4 f7c7155
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Sep 25 11:35:56 2018 -0700

    Merge "Correct block buffer to not always buffer a block"


commit f7c715555b56f57d098b2017a5acf7e732d12e14
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Sep 24 18:07:18 2018 -0700

    Correct block buffer to not always buffer a block

    Previously the block buffer would always fill up a block worth of data
    before pushing out, even if the incoming data was more than a block and
    could have been pushed out directly. This was leading to performance
    degradation which is corrected in this change.

    This change also simplifies the block buffering logic when accounting
    for how much data needs to be held on to in the buffer. Most algorithms
    need a block worth of data, but some, like AES-CTS need the last two
    blocks.

    Change-Id: Ie41181322383ca615358c910a71be6105b582c8b

commit a81a4d4454771377512379cc910d23065e39e988
Merge: 9faa736 a421b2b
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Sep 25 11:06:36 2018 -0700

    Merge "Added check that XTS key != key"


commit 9faa736b0267920550874b896c35f17f6205d874
Merge: cc1a0c0 2dbc826
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Sep 24 15:40:18 2018 -0700

    Merge "Removed BAM NWD flag on the last BAM Rx Data Descriptor to address HW CE SG-VA issue Fixed SG-VA copy operation and large buffers Fixed BAM polling hang issue in hashcipher operation Updated as per comments"


commit 2dbc826d5abdf1ab24bec152f9f62ec5a0094ce6
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Thu Sep 13 09:36:03 2018 -0700

    Removed BAM NWD flag on the last BAM Rx Data Descriptor to address HW CE SG-VA issue
    Fixed SG-VA copy operation and large buffers
    Fixed BAM polling hang issue in hashcipher operation
    Updated as per comments

    Change-Id: I95236cf86047f0d139e501de72e4a3b7422fa484

commit a421b2b537537eaa52813fbf85a1fd4751d4ce6c
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Tue Sep 18 13:58:01 2018 -0700

    Added check that XTS key != key

    This check is required by FIPS 140-2 IG A.9.

    Change-Id: I9ebfe9a9b7f0bbb0c76f3536434ccd9eff7710b5

commit cc1a0c08f36b44d22185052bd5b412cfcc71a6a3
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Sep 12 13:11:47 2018 -0700

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: Iaff697624a6fe839080f39bdf918bafac1f8ea20

commit c9e4b1f77056ef7e59f23247d854f648f61872ae
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Fri Aug 31 15:52:50 2018 -0700

    Fixed the big size message issue for AES XTS and XTS SW IV endianness and removed UC_LOG from inint functions.

    Enabled BAM for HashCipher and modified for the review comments.

    Modified the comments according to the code review response.

    Added PRNG clock voting and fixed prng biased issue.

    Added the threshold for the prng data size for voting prng clock.

    Change-Id: I519adca1030670c6c1c6ac3809924890adb3030e

commit 8acf2a5a0af93a7eb9e55b70c6e239ece2f4fc71
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Thu Aug 23 11:35:52 2018 -0700

    Add software implementation of SM2

    Change-Id: I321502e8f82516cea98973705dfdc790ced30488

commit 8d589d07eb68853c6dffc4030f04a6dd9f6590ba
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Aug 17 17:53:10 2018 -0700

    Added support for GPCE AES-CCM mode

    Change-Id: Ie4a4ece511791f1937eac439b6b4e7be777ceedb

commit 9943d7087027b512872d98911cb333136c159794
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Wed Aug 15 17:25:08 2018 -0700

    Updated config generator script to print out filename and line number for syntax errors in JSON files.
    Updated deploy script to:
     - support adding CR number while syncing TZ branch
     - update minor version by defatult
     - fix issue with a regex that caused failure updating commits to version file

    Change-Id: I0746f2854ab41d35cd6b6d2321ec2e070ae5dc47

commit c2ab0d5cf38bf0f6008185010fadddead15bcabf
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Aug 14 16:37:31 2018 -0700

    Update uclib version. This is autogenerated commit. Please do not edit commit msg.

    Change-Id: I6075ab7a7afd2c68aa1c0466d2ea3cc7116b2960

commit ea9af4c27618066fd37a86b7321a6a19a31a85d2
Merge: 705c316 9e6ff3d
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Aug 14 14:36:05 2018 -0700

    Merge "Modified sha, cipher and cmac BAM mode to handle big size message."


commit 9e6ff3dfc3d9fae4d73e94b808ba8c83adfd2164
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Sun Aug 12 23:47:05 2018 -0700

    Modified sha, cipher and cmac BAM mode to handle big size message.

    Modified for the code review comments.

    Change-Id: I56e7ed83e6a3723727c1aa4a3f1cac5b6abc2eb0

commit 705c316367e87ae7fd9854bf0568b051fea0d8d6
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Fri Aug 3 16:39:08 2018 -0700

    Added script to deploy uclib and few bug fixes with config file generation.
    Deploy currently works only on linux systems due to usage of bash script to sync uclib repo and usage of linux path for vce tool.

    Sample command to deploy -
    	python deploy_uclib.py --sync_path=<path> --user=<username> -n

    Please run the script with -h option for more usage details.
    Also you may refer to the comments at the top of the script for further details.

    Updated version file to match that in ssg.

    Fixed treatment of VA mode for CBC and CTR. i.e. treat VA as different mode like CBC_VA instead of different engine like BAM_VA.
    Fixed compilation issue when disabling debug logging.

    Updated .gitignore file to ignore the generated config files

    Change-Id: I00d99851d78e7a787a94b17bb4898dddad36aea2

commit be71c57a805c264f6d25eed94f91c1e7bf5a09c6
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Sun Aug 5 22:06:33 2018 -0700

    Fix the apt test case 255 failure and added CTs mode for HC for usr build.

    Change-Id: Ia151be335bd69b91f10db8e8fc7347ad858a1a93

commit c796754e2c789f6c26c373c3c5b1cd9b56364fa0
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Fri Aug 3 13:01:46 2018 -0700

    Remove SW cipher engines from user-libraries.

    Change-Id: I67f968b0a94e25f240c2a486ff596678a89ea40d

commit e0abed15024a31bf95a8d591b711744712dcf51b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 31 17:14:33 2018 -0700

    UCLIB: Add support for SM3 SW engine

    Change-Id: Id9716dbeaa4586b20560e8cc2f848ba1f6bf598e

commit fc7c48ebd941f1e5d62c2582cf19cba69baa91f3
Author: Bikash <bsharma@qti.qualcomm.com>
Date:   Thu Jul 19 12:13:07 2018 -0700

    Added script for auto-generating config files based on json data files.
    Changed SConscripts to build uclib for different images including offtarget.
    Debug logging can be enabled or disabled via image specific json config files e.g. tz_config.json.
    When new source files are added and/or new mode/engine are enabled for
    any algorithm, please make sure you add the source file to
    all_dependencies.json at appropriate places, and add the new mode/engine
    to image specific json config files (only for affected images). You may need to add new engine entry
    to engine_entries.json too.
    Command to build uclib for all supported images (including offtarget) is:
    python build_all.py CHIPSET=sdm845 -b TZ.XF.5.0 --cbt=uclib --cnb
    Specifying uclib32 or uclib64 insead of uclib would build only that particular version.
    Command to build for specific target image is:
    python build_all.py CHIPSET=sdm845 -b TZ.XF.5.0 --cbt=uclib --scons-args='TARGET_DESTINATION=arm_tz' --cnb
    Supported values for TARGET_DESTINATION are arm_tz, arm_usr, x86_tz, x86_usr, all, arm, x86, offtarget.

    Change-Id: I83458486b562c7838da91866589e6305f62b287f

commit 7c79c670c8a9c2d261d10f3430fc61f93b8f025c
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Tue Jul 17 11:04:46 2018 -0700

    UCLIB: Use utility APIs in AES-GCM ARMV8

    Change-Id: I7db31123908398ed97e93ba829940a3499487a94

commit 8f4727ed002acd0af303715ca5e4d0fd32e7bb8e
Merge: ae31439 645cbc0
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Jul 17 09:58:11 2018 -0700

    Merge "Added CTS mode for HashCipher."


commit ae31439555a5e3196e8e0b90285a66e253dd9c69
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Mon Jul 16 14:54:15 2018 -0700

    UCLIB: Add support for AES GCM ARMV8 engine

    Change-Id: I4255a9f513163ba0055fc841da20ddfc4affafbc

commit 645cbc01187a81ed4d7e83985a95ef197daec6ea
Author: Jieping Guo <jiepingg@qti.qualcomm.com>
Date:   Tue Jul 17 09:37:10 2018 -0700

    Added CTS mode for HashCipher.

    Change-Id: I16f812325f560f6e56c4feb416d6b6b3651401e4

commit 47971f880afcaa4a62ea13a14e3b6af5be9f307a
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Jun 25 18:03:38 2018 -0700

    Added support for Scatter-Gather AES (CBC/CTR)
    Fixed scope of HW lock ownership in cipher_va_bam.c
    Code clean up as per review comments

    Change-Id: I6b6d590b1cedcaf73f9e5e353a355bfeb44000ba

commit ad32e330d6214c7c4a946e3326ca201e0da55935
Merge: cd69b72 81704da
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Jun 18 09:19:24 2018 -0700

    Merge "Fixed the bug for in-place AES-CTR SW algorithm"


commit 81704dae00cbbb441dee45c809f973772af7a770
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Fri Jun 15 17:13:06 2018 -0700

    Fixed the bug for in-place AES-CTR SW algorithm

    Change-Id: I9536f71fad051dc708719cac262f0401a5342715

commit cd69b72e4f7750da47401d5b6b1688dc9a234dc6
Author: Jonathan Childers <jchilder@qti.qualcomm.com>
Date:   Wed May 9 16:39:55 2018 -0700

    Added function pointer to env struct to check whether a crypto operation
    is allowed. This will be used for making sure the crypto operations are
    enabled in accordance with FIPS when running in a context with FIPS enabled.

    Change-Id: I15e78c04e6f401b8c57e30ed7d7ab7745cfbad08

commit 0b730b16201664617a88707c7030b1555a741c72
Author: Benjamin Vogel <bvogel@qti.qualcomm.com>
Date:   Wed Jun 6 14:48:08 2018 +0100

    uclib: modified build and configuration files for offtarget

    * modified build script to create relocatable objects
      instead of shared libraries
    * added usr mode configurations
      * 32 bit --> copy from cfg_usr_32.c
      * 64 bit --> routing ARMV8 to SW

    Change-Id: I908787b2043c1639e2eafc3cde656c21a856242d

commit a386a4cdb3a823b006867fbb3c22ffe0f29f168a
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Sat Jun 2 15:38:09 2018 -0700

    - Fixed CR 2250435
    - Refactored UCLIB Block Buffer Driver to improve performance
    - Updated the scripts in order to build UCLIB for off-target(x86-32/64) platforms
    - Command to build UCLIB for off-target platforms
      1. python build_all.py -b TZ.XF.5.0 CHIPSET=sdm845 TZ_EXEC_MODE=x86-64 --cbt=uclib --cnb
      2. python build_all.py -b TZ.XF.5.0 CHIPSET=sdx24 TZ_EXEC_MODE=x86-32 --cbt=uclib --cnb

    Change-Id: Ie201dca32c3e3f790f8c14214ad255d3d2ad8c81

commit f25f48460e9c84a713d13e855e5d267620fe67a4
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue May 29 12:19:18 2018 -0700

    - Added support to build for x86-32 and x86-64 platforms (offtarget development)
    - No export API by default
    - Fixed Max Nonce size in AES-CCM as per spec
    - Incorporated Code Review Comments for integration to TZ.XF.5.0
    - Added build configuration for UEFITZT
    - Added Macro for visibility attribute

    Change-Id: I3874052a0b613cc6e2bf69e2747d21337d0867b7

commit 758197e20153cd6211f75afb4430ce2887ae936b
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Mar 7 17:58:41 2018 -0800

    Stubed selftest
    Fixed KDF/CCM/HW Key issues contributing to boot up issues
    Fixed crypto test cases in UEFI TZT (TzTest and TzLoadApp)
    Added UCLIB Env. Logging Callback
    Fixed issues related to aptcryptotestapp
    Fixed issues related to Google KM and GateKeeper tests
    Tested on SDM845 and SDX24

    Change-Id: Ic14a5a8f5ca3cdfcf2a60804a9e564d2b7069db2

commit ba96d453942e2e7a6d3d3b5596dc671ae2533c59
Author: Priyanka Dosi <pdosi@qti.qualcomm.com>
Date:   Wed Feb 14 13:22:55 2018 -0800

        Changes made for adding the CTR and ECB DES CTS XTS engines.
        changes for ctr implementation and code review comments
        Changes made for consolidating all the HWIO/BAM for cipher modes.
        Changes made for consolidating all the SW AES init functions.
        Changes for disabling vfp in case of tz, in scons

    Change-Id: I05a36625e7e8d6ae30981ce57d616dbdaba0398c

commit c7b2414600ad787b2dad452bac40de914bfb1ca8
Author: shenghu liu <shenghul@qti.qualcomm.com>
Date:   Fri Feb 2 11:19:00 2018 -0800

    SG rebased version

    Change-Id: Idbc23ebf403cb7b8dde3da48006800fa89e71537

commit 8472f2893780725651e303f2fb32e26cf936b0db
Author: shenghu liu <shenghul@qti.qualcomm.com>
Date:   Tue Jan 23 15:48:44 2018 -0800

    UCLIB selftest code
    More review comment change

    Change-Id: If6232c7a5f3d751ede05db5f31f18bd16ff9f1e0

commit 21b6e84d3a793efb6490c8e7783bc5e84c5e372c
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Jan 17 14:46:24 2018 -0800

    - Adding reset interface to all crypto implementations and redefining
    functionality of top level reset interface
    - Fixed more boot up issues and using CCM SW engine in TZOS
    - Add more get control commands in cipher ctrl interface

    Change-Id: I3bdedffefe868f5abee335e0a25d2c7df91e42ec

commit 47955ce5e3926f6f203f31c5c6045bd6db8fedae
Author: Priyanka Dosi <pdosi@qti.qualcomm.com>
Date:   Tue Jan 16 14:57:41 2018 -0800

    changes for removing --gc-sections from link command while partial linking.

    Change-Id: I35edba14a023932e5e6283a4b2cace91eae0e43f

commit 1be088f8988682aeb1877d6ae01df6e414ba68b6
Author: Julian Rosenthal <jrosen@qti.qualcomm.com>
Date:   Wed Jan 10 15:59:28 2018 -0800

    [PATCH] need to now specify area='xxxx' for every RequirePublicApi call

    - the previous default was area='core' if no area was specified

    Change-Id: I5e2447b3f3dd781606541127f1c43fc32767a28d

commit bea1f1460b48ed87922b2d545b969ee1cb2b2929
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Thu Dec 28 09:00:25 2017 -0800

    - Updated the list of  TZOS 32bit source codes
    - Updated public header files


commit db8f62073d1820f1812933fb861d0009c98a3834
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Oct 3 18:15:38 2017 -0700

    - Added cipher get parameters (to support backward compatibility in TZ)
    - Added Magic number intialization for top level context
    - Added simple handle scrambling method
    - Updated CCM/GCM Tag and Header initialization to support backward compatibility for KM
    - CCM/GCM will be broken in this promotion, will fix it along with adoption of block buffer object
    - Added support for Block Buffer Object in Hash and Cipher algorithms
    - Fixed bugs
    - Tested in MSM8996 Platform (SHA1, SHA224, SHA256, AES-CBC, AES-CCM, HMAC, CMAC)
    - Known issues: AES-CCM HWIO and BAM modes are broken
    - Fixed issues related to integration to QTEE 5.0 in SDM845
    - Remove trailing white spaces


commit ae256162833eaefe626b70c055d9990917106180
Author: Sahaj Kumar Rangu <c_sahajk@qti.qualcomm.com>
Date:   Fri Oct 6 15:45:02 2017 +0530

    UCLIB: MD5 Support added

    Added MD5 support to UCLIB


commit 7e4c6a36a8fb4daa35cee3b66377e1a11e02a50f
Author: Priyanka Dosi <pdosi@qti.qualcomm.com>
Date:   Wed Sep 13 11:58:42 2017 -0700

    SHA2 256
    New Features:
    -- This is perforce CL 13504444 commited to git
    -- Rebased and merged with tip
    -- Added clean in scons
    -- Resolved Conflicts:
    -- Fixed code review comments
    -- Added macro's for getters and setters and new.
    -- Added cmmon function for SW hash allocation.

    Conflicts:
            uclib/crypto/hash/hash.h
            uclib/test/hash/sha2test.c

    Change-Id: I40e24ba839b83844822310b283b88f577e8e622f

commit f843fd405e25db74935dd020631beb0bb04fbe08
Merge: 7d9d661 be35f5f
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Oct 18 18:17:02 2017 -0700

    Merge "added kbkdf test, made some modifications based on review input"


commit be35f5f02a809893e558cf4d9d8c74bc2b0e92fa
Author: shenghu liu <shenghul@qti.qualcomm.com>
Date:   Fri Sep 29 18:07:36 2017 -0700

    added kbkdf test, made some modifications based on review input

    Change-Id: I74d3232d9b406c02c2167be3155bf7f41274139c

commit 7d9d6619cdca882108695f98cb28355967cf4001
Author: Sahaj Kumar Rangu <c_sahajk@qti.qualcomm.com>
Date:   Thu Oct 5 16:05:48 2017 +0530

    UCLIB: SHA 224 Support added

    Added SHA 224 Support to UCLIB


commit 711a7e49658d9a26511c28c5e3bd2bbe60ca030b
Author: Aseem Brahma <abrahma@qti.qualcomm.com>
Date:   Wed Sep 6 16:12:55 2017 -0700

    UCLIB: Add support for HMAC and CMAC algorithms.

    Change-Id: Idae9ebd944e65fe7b9be9189f026d80a39be6f9d

commit 0ecaf49ce82e935c1501cd0211f7b61ccc1b4e46
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Wed Sep 27 10:33:02 2017 -0700

    Fixed issues in integration of uclib in commonlib
    Addressed review comments
    Fixed more review comments


commit 81bf89a7a781a51c509db679f6fa8d6a7132f26d
Merge: c440225 2bde00b
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Sat Sep 23 19:18:10 2017 -0700

    Merge "Added SHA384 and SHA512 for SW, HWIO and BAM engines and test codes. This is ported from perforce CL13844175"


commit 2bde00b326dc53a65b54e2ac39a1be310f134dc8
Author: jiepingg <jiepingg@qti.qualcomm.com>
Date:   Wed Sep 13 17:18:31 2017 -0700

    Added SHA384 and SHA512 for SW, HWIO and BAM engines and test codes.
    This is ported from perforce CL13844175

    Change-Id: I81863787424bcf818d288fdda65a996429731341

commit c44022519d86d1a9e731bdb86ac914ad69032267
Author: Priyanka Dosi <pdosi@qti.qualcomm.com>
Date:   Thu Sep 14 12:49:51 2017 -0700

    Changes to fix the building error. Socns was not aware of dependency on copy,
    fixed it establishing correct dependency.

    Change-Id: Ib9094eba155600ab0a925d9a36687c5d39cacebb

commit e03edb844339f76cab33679e439db0d0318bfb7c
Author: Priyanka Dosi <pdosi@qti.qualcomm.com>
Date:   Wed Sep 13 13:21:10 2017 -0700

    Changes done to fix spelling mistakes in comments.

    Change-Id: I8e959f24b1f1abdcce3e5ebed5e358c3933821be

commit 52e4f200e81784e120c13bcc83d676cf4684ba59
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Tue Sep 5 11:22:24 2017 -0700

    Added CFG_get_pkey_init_entry() to cfg.c. In building TZ image, Linker was complaining about undefined reference to this API.


commit ced501c08ffb30b8771bc43d0df830905e313520
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Fri Sep 1 16:35:31 2017 -0700

    Adding .gitignore to filter object files


commit e1f1aeaf21546f3e19ea04e90c082f650333d071
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Fri Sep 1 15:26:37 2017 -0700

    Added missing configuration files for 64 and 32 bit versions


commit 91dfcbd94d3919c7bf65ddfa97cbf4133b289142
Author: Afshin Hosseinipour <ahossein@qti.qualcomm.com>
Date:   Mon Aug 28 10:21:39 2017 -0700

    Changes made for building of uclib.o. This is the top level scons script.
    Added files building the uclib component. This is the top level scons.
    uclib.api : should expose all the public api's for ths componenet.
    uclib.scons : Just loads the sofware units.
    Link descriptor for uclib
    Scons script to build sources for uclib

    Change-Id: Ie84c38f8df0c7889ed3c3376185513b4050f34cb

commit c05b9a1396c84838114541e05fa383958d5c104a
Author: Sivakumar Vaddi <c_svadd@qti.qualcomm.com>
Date:   Mon Jul 10 09:19:49 2017 -0700

    Initial empty repository

*/
