#/*
#
#  Qualcomm SDK package declaration file.
#
#  Copyright (c) 2018,2021 Qualcomm Technologies, Inc.  All Rights Reserved.
#  Portions Copyright (c) 2006 - 2010 Intel Corporation. All rights reserved.<BR>
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#*/


[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = QcomSdkPkg
  PACKAGE_GUID                   = 347453EB-36E8-458B-95F6-F922EDA05316
  PACKAGE_VERSION                = 0.1

################################################################################
#
# Include Section - list of Include Paths that are provided by this package.
#                   Comments are used for Keywords and Module Types.
#
# Supported Module Types:
#  BASE SEC PEI_CORE PEIM DXE_CORE DXE_DRIVER DXE_RUNTIME_DRIVER DXE_SMM_DRIVER DXE_SAL_DRIVER UEFI_DRIVER UEFI_APPLICATION
#
################################################################################
[Includes.common]
  Include
  Include/Protocol/prot_inc

[Includes.ARM]
  Include/Protocol/prot_inc/ARM
  
[Includes.AARCH64]
  Include/Protocol/prot_inc/AARCH64

### SdkSection 1 - New header inclusion folder ###

### SdkSection 1###

[Guids.common]
  gQcomTokenSpaceGuid =                 { 0x882f8c2b, 0x9646, 0x435f, { 0x8d, 0xe5, 0xf2, 0x08, 0xff, 0x80, 0xc1, 0xbd } }
  gQcomSdkTokenSpaceGuid =              { 0x548162ea, 0xf589, 0x41bb, { 0xa1, 0x0a, 0x86, 0x4c, 0x74, 0x9b, 0xea, 0xc8 } }
  gEfiPartitionTypeGuid =               { 0x6848de61, 0xeb61, 0x4def, { 0x9a, 0x8e, 0x38, 0x17, 0xcb, 0xeb, 0x8f, 0x1c } }
  gEfiEmmcUserPartitionGuid =           { 0xb615f1f5, 0x5088, 0x43cd, { 0x80, 0x9c, 0xa1, 0x6e, 0x52, 0x48, 0x7d, 0x00 } }
  gEfiEmmcBootPartition1Guid =          { 0x12c55b20, 0x25d3, 0x41c9, { 0x8e, 0x06, 0x28, 0x2d, 0x94, 0xc6, 0x76, 0xad } }
  gEfiEmmcBootPartition2Guid =          { 0x6b76a6db, 0x0257, 0x48a9, { 0xaa, 0x99, 0xf6, 0xb1, 0x65, 0x5f, 0x7b, 0x00 } }
  gEfiEmmcRpmbPartitionGuid =           { 0xc49551ea, 0xd6bc, 0x4966, { 0x94, 0x99, 0x87, 0x1e, 0x39, 0x31, 0x33, 0xcd } }
  gEfiEmmcGppPartition1Guid =           { 0xb9251ea5, 0x3462, 0x4807, { 0x86, 0xc6, 0x89, 0x48, 0xb1, 0xb3, 0x61, 0x63 } }
  gEfiEmmcGppPartition2Guid =           { 0x24f906cd, 0xee11, 0x43e1, { 0x84, 0x27, 0xdc, 0x7a, 0x36, 0xf4, 0xc0, 0x59 } }
  gEfiEmmcGppPartition3Guid =           { 0x5a5709a9, 0xac40, 0x4f72, { 0x88, 0x62, 0x5b, 0x01, 0x04, 0x16, 0x6e, 0x76 } }
  gEfiEmmcGppPartition4Guid =           { 0xa44e27c9, 0x258e, 0x406e, { 0xbf, 0x33, 0x77, 0xf5, 0xf2, 0x44, 0xc4, 0x87 } }
  gEfiSdRemovableGuid =                 { 0xd1531d41, 0x3f80, 0x4091, { 0x8d, 0x0a, 0x54, 0x1f, 0x59, 0x23, 0x6d, 0x66 } }
  gEfiUfsLU0Guid =                      { 0x860845c1, 0xbe09, 0x4355, { 0x8b, 0xc1, 0x30, 0xd6, 0x4f, 0xf8, 0xe6, 0x3a } }
  gEfiUfsLU1Guid =                      { 0x8d90d477, 0x39a3, 0x4a38, { 0xab, 0x9e, 0x58, 0x6f, 0xf6, 0x9e, 0xd0, 0x51 } }
  gEfiUfsLU2Guid =                      { 0xedf85868, 0x87ec, 0x4f77, { 0x9c, 0xda, 0x5f, 0x10, 0xdf, 0x2f, 0xe6, 0x01 } }
  gEfiUfsLU3Guid =                      { 0x1ae69024, 0x8aeb, 0x4df8, { 0xbc, 0x98, 0x00, 0x32, 0xdb, 0xdf, 0x50, 0x24 } }
  gEfiUfsLU4Guid =                      { 0xd33f1985, 0xf107, 0x4a85, { 0xbe, 0x38, 0x68, 0xdc, 0x7a, 0xd3, 0x2c, 0xea } }
  gEfiUfsLU5Guid =                      { 0x4ba1d05f, 0x088e, 0x483f, { 0xa9, 0x7e, 0xb1, 0x9b, 0x9c, 0xcf, 0x59, 0xb0 } }
  gEfiUfsLU6Guid =                      { 0x4acf98f6, 0x26fa, 0x44d2, { 0x81, 0x32, 0x28, 0x2f, 0x2d, 0x19, 0xa4, 0xc5 } }
  gEfiUfsLU7Guid =                      { 0x8598155f, 0x34de, 0x415c, { 0x8b, 0x55, 0x84, 0x3e, 0x33, 0x22, 0xd3, 0x6f } }
  gEfiUfsRPMBGuid =                     { 0x5397474e, 0xf75d, 0x44b3, { 0x8e, 0x57, 0xd9, 0x32, 0x4f, 0xcf, 0x6f, 0xe1 } }
  gEfiNandUserPartitionGuid =           { 0x03ef84a9, 0x60ce, 0x4371, { 0x97, 0xcf, 0x04, 0x84, 0x5a, 0x86, 0x5b, 0x79 } }
  gEfiPlatPartitionTypeGuid =           { 0x543c031a, 0x4cb6, 0x4897, { 0xbf, 0xfe, 0x4b, 0x48, 0x57, 0x68, 0xa8, 0xad } }
  gEfiBackupPlatPartitionTypeGuid =     { 0x6ecf80a9, 0x6722, 0x4f5f, { 0xb2, 0x91, 0xea, 0x0d, 0x77, 0x30, 0xd5, 0x4b } }
  # QCOM Keypad Device Guid 
  gQcomKeypadDeviceGuid =               { 0xd7f58a0e, 0xbed2, 0x4b5a, { 0xbb, 0x43, 0x8a, 0xb2, 0x3d, 0xd0, 0xe2, 0xb0 } }
  # Raw Rng Algorithm Guid
  gEfiRNGAlgRawGuid =                   { 0xe43176d7, 0xb6e8, 0x4827, { 0xb7, 0x84, 0x7f, 0xfd, 0xc4, 0xb6, 0x85, 0x61 } }
  gEfiPlatformInfoGuid =                { 0x3351baf7, 0x0820, 0x40df, { 0xb3, 0xfd, 0x4b, 0x7a, 0x3d, 0x43, 0x81, 0x88 } }
  gEfiLogFSPartitionGuid =              { 0xBC0330EB, 0x3410, 0x4951, { 0xA6, 0x17, 0x03, 0x89, 0x8D, 0xBE, 0x33, 0x72 } }
  gEfiMiscPartitionGuid =               { 0x82ACC91F, 0x357C, 0x4A68, { 0x9C, 0x8F, 0x68, 0x9E, 0x1B, 0x1A, 0x23, 0xA1 } }
  gBlockIoRefreshGuid =                 { 0xb1eb3d10, 0x9d67, 0x40ca, { 0x95, 0x59, 0xf1, 0x48, 0x8b, 0x1b, 0x2d, 0xdb } }
  ## Guid for Cipher protocol in EFICipher.h
  gEfiCipherAlgorithmAES128Guid = { 0x68c540e3, 0xe5d0, 0x4cfb, {0x9b, 0x92, 0xf2, 0x7e, 0xc4, 0x48, 0x5b, 0xef }}

  gEfiCipherAlgorithmAES256Guid = { 0x9ec6431c, 0x7a2b, 0x4d75, {0xb5, 0x8e, 0x20, 0x7b, 0x0c, 0x8b, 0x14, 0x0a }}

  gEfiCipherModeECBGuid = { 0xdaa0df64, 0x87ff, 0x4349, {0x82, 0x17, 0xb9, 0x36, 0x4d, 0x39, 0x2e, 0x8a }}

  gEfiCipherModeCBCGuid = { 0xd4efcf6f, 0x7ecc, 0x4a3f, {0x89, 0x9c, 0x28, 0xc9, 0xbd, 0x15, 0xb3, 0x68 }}

  gEfiCipherModeCTRGuid = { 0xf21ec7da, 0x5406, 0x46b5, {0x90, 0x81, 0x2e, 0xaa, 0x18, 0xa8, 0xb2, 0xec }}

  gEfiCipherModeCTSGuid = { 0x2ed2abbf, 0x7c80, 0x4de6, {0x92, 0x7a, 0x51, 0x32, 0x7c, 0x02, 0xfb, 0x63 }}

  gEfiCipherModeGCMGuid = { 0x7d517cd5, 0x3398, 0x4a93, {0x80, 0xd4, 0x76, 0x3e, 0x30, 0x64, 0xbb, 0xdc }}

  gEfiCipherEngineArmv8Guid = { 0x56dfb26c, 0xf557, 0x47aa, {0x9d, 0x2d, 0xda, 0x4c, 0x00, 0xcf, 0xf5, 0x75 }}

  gEfiCipherEngineCeHwGuid = { 0x51aa59de, 0x9dd9, 0x4fc4, {0x92, 0x4c, 0xbe, 0x6b, 0x48, 0x7a, 0x6e, 0x6b }}

  gEfiCipherDirEncryptGuid = { 0x75bf1ab5, 0xfa11, 0x4170, {0x9c, 0x54, 0x9f, 0x75, 0x7b, 0x5b, 0x48, 0x26 }}

  gEfiCipherDirDecryptGuid = { 0x4b3a8f0e, 0x84a1, 0x4c57, {0x91, 0xf1, 0xc8, 0xa2, 0x15, 0x56, 0x4f, 0x48 }}

  gEfiCipherSetParamDirGuid = { 0x3275fc27, 0x4890, 0x4042, {0x92, 0xa7, 0x6e, 0x1d, 0x5b, 0xe5, 0x1b, 0xd2 }}

  gEfiCipherSetParamKeyGuid = { 0xbf5950be, 0xb478, 0x4282, {0x9d, 0x9c, 0xcb, 0x89, 0xc0, 0x45, 0x6e, 0x77 }}

  gEfiCipherSetParamIVGuid = { 0x45f6d870, 0xf7b2, 0x4b0a, {0xb9, 0x20, 0x8f, 0x7e, 0x9a, 0xcc, 0xe4, 0x96 }}

  gEfiCipherSetParamModeGuid = { 0x668451a8, 0x23b4, 0x4a47, {0x9b, 0x9e, 0x48, 0xde, 0x84, 0x78, 0x57, 0xc9 }}
  
  gQcomDDRLpmGuid            = { 0x4d8f39ce, 0x4e12, 0x4fca, {0x9a, 0x4f, 0xc4, 0xa7, 0x7e, 0xb5, 0x32, 0x71 }}

  gEfiCipherSetParamNonceGuid = { 0xb1eddbd5, 0x1b1c, 0x42c4, {0xb0, 0x14, 0x00, 0xbc, 0x82, 0xdd, 0x11, 0x38 }} 

  gEfiCipherSetXcmTagGuid = { 0x565f121c, 0x8964, 0x4ebe, {0xa2, 0xe9, 0x5e, 0x3e, 0x12, 0xc5, 0x91, 0x7f }}

  gEfiCipherGetXcmTagGuid = { 0x4af2e7d3, 0x37c6, 0x48c6, {0x91, 0x0b, 0xbe, 0xd0, 0x0a, 0x72, 0x94, 0x4b }}

  ## Guid for Mac protocol in EFIMac.h

  gEfiMacAlgorithmHMACGuid = { 0x3b67e9f0, 0x4220, 0x4a1b, {0x9f, 0xc0, 0x40, 0x7d, 0x3b, 0x81, 0xd9, 0xca }}

  gEfiMacAlgorithmCMACGuid = { 0x406a077a, 0xa9ad, 0x492e, {0x9d, 0x83, 0x9b, 0x40, 0xfe, 0x9e, 0x77, 0x4e }}

  gEfiMacEngineArmv8Guid = { 0x64e8487d, 0xfa74, 0x49e2, {0x87, 0x02, 0xab, 0x2c, 0x85, 0xbf, 0x17, 0x19 }}

  gEfiMacEngineCeHwGuid = { 0x7ffeeb55, 0x1b79, 0x4ed2, {0xa9, 0x8d, 0x76, 0x1f, 0x46, 0x84, 0xc2, 0xe1 }}

  gEfiMacSetParamHashAlgoGuid = { 0x573142a1, 0x4eb3, 0x45a9, {0x81, 0xa2, 0xd3, 0x76, 0x5e, 0xfe, 0xb8, 0xff }}

  gEfiMacGetDigestSizeGuid = { 0xd0c40b06, 0x325e, 0x4344, {0x91, 0xcb, 0xe1, 0xcc, 0x97, 0x82, 0xb8, 0x9d }}

  gEfiMacSetParamKeyGuid = { 0x84723e17, 0xbf34, 0x404b, {0x99, 0x5f, 0x68, 0xe0, 0xfe, 0x22, 0x0e, 0xbd }}

  gEfiEventICBPostInitGuid = { 0x8e0d9dfd, 0x0974, 0x400c, { 0xa7, 0xb7, 0xb8, 0x0c, 0x7a, 0x8e, 0xf3, 0x7e } }

  #Guid for start USB hardware configuration
  gInitUsbControllerGuid              = { 0x1c0cffce, 0xfc8d, 0x4e44, { 0x8c, 0x78, 0x9c, 0x9e, 0x5b, 0x53, 0xd,  0x36 } }
  gInitUsbStopControllerGuid              = { 0xd799e5ea, 0x4a47, 0x4613, { 0xa8, 0xe6, 0xe0, 0x2c, 0x4b, 0x98, 0x50,  0xf4 } }
  #Guid for toggling USB Mode
  gEfiEventToggleUsbModeGuid          = { 0x18174cf5, 0x6fba, 0x4098, { 0xbb, 0x6e, 0x36, 0xf0, 0xd0, 0x6a, 0x4,  0x4c } }
  gInitUsbLoopbackControllerGuid      = { 0xcf25adf8, 0x29d4, 0x4331, { 0xa4, 0xe3, 0x96, 0xc5, 0x30, 0x71, 0xf7,  0xb4 } }
  gInitUsbDisableUsbControllerGuid     = { 0x15233b0b, 0xb850, 0x4e17, { 0x81, 0xfd, 0xc8, 0x38, 0x0A, 0xAA, 0x24,  0x82 } }
  gInitUsbEnableUsbControllerGuid      = { 0x801b4c95, 0x256a, 0x4fc3, { 0xaf, 0xfa, 0x2b, 0x41, 0x11, 0x87, 0x04,  0x01 } }
  
  gEfiUfsDeviceWlunGuid =               { 0xcbdca571, 0x5d36, 0x47a0, { 0x93, 0x18, 0x01, 0xb6, 0xf0, 0xca, 0xc8, 0xed } }
  

[Protocols]
  # HALIOMMU Protocol GUID
  gEfiHalIommuProtocolGuid =            { 0x54b6d3b4, 0x5d33, 0x4f91, { 0x86, 0x00, 0x6c, 0x41, 0xd5, 0xde, 0xb1, 0x9a } }
  # Variable Services
  gEfiVariableServicesProtocolGuid =    { 0xf9085b9d, 0x9304, 0x40fb, { 0x8f, 0xe0, 0x4a, 0xee, 0x3b, 0x1a, 0x78, 0x4b } }
  # Clock
  gEfiClockProtocolGuid =               { 0x241afae6, 0x885f, 0x4f6c, { 0xa7, 0xea, 0xc2, 0x8e, 0xab, 0x79, 0xc3, 0xe5 } }
  # TEST Clock
  gEfiTestClockProtocolGuid =           { 0xA37B4FA2, 0xE2A4, 0x495C, { 0x80, 0x4D, 0xDE, 0x40, 0xB8, 0x3A, 0x42, 0x63 } }
  # Clock RT
  gEfiClockRTProtocolGuid =             { 0x1e587fef, 0x45a4, 0x4fa8, { 0xff, 0xff, 0xff, 0xff, 0x1a, 0xc8, 0xff, 0xb7 } }
  # SCM
  gQcomScmProtocolGuid     =            { 0x77ed108d, 0x8524, 0x4b8b, { 0x9d, 0x2e, 0x34, 0x98, 0x7a, 0xec, 0xb9, 0xc1 } }
  # HWIO
  gEfiHwioProtocolGuid =                { 0x9e61de7c, 0x9927, 0x4f28, { 0x9f, 0x3d, 0x32, 0x07, 0x05, 0xd8, 0x18, 0x01 } }
  # GPIO
  gEfiGPIOProtocolGuid =                { 0x1A7405FC, 0x0285, 0x41F0, { 0xA5, 0x35, 0x01, 0x81, 0x41, 0xF8, 0x39, 0xE7 } }
  # I2C
  gQcomI2CProtocolGuid =                { 0xb27ae8b1, 0x3e10, 0x4d07, { 0xab, 0x5c, 0xeb, 0x9a, 0x6d, 0xc6, 0xfa, 0x8f } }
  # SPI
  gQcomSPIProtocolGuid      =           { 0x4c7ffd28, 0x6a06, 0x4425, { 0x9e, 0xe2, 0x67, 0x6e, 0xbc, 0x08, 0x96, 0x83 } }
  # PlatformInfo
  gEfiPlatformInfoProtocolGuid =        { 0x157a5c45, 0x21b2, 0x43c5, { 0xba, 0x7c, 0x82, 0x2f, 0xee, 0x5f, 0xe5, 0x99 } }
  # PMIC VREG
  gQcomPmicVregProtocolGuid =           { 0x22d38d3d, 0xe8b6, 0x4f8f, { 0x9c, 0x26, 0xbc, 0xeb, 0x07, 0xd6, 0xcb, 0x68 } }
  # PMIC RGB LED
  gQcomPmicRgbLedProtocolGuid =         { 0x3ccead8e, 0xb24c, 0x403b, { 0xa0, 0xb2, 0xfd, 0x4c, 0x56, 0xb4, 0x6c, 0x9f } } 
  # CHARGER Extended
  gChargerExProtocolGuid =              { 0x6edc8a6d, 0x2663, 0x43cd, { 0x90, 0xff, 0x46, 0x21, 0xff, 0xd1, 0x0d, 0xf5 } } 
  # Sdcc Card Info
  gEfiMemCardInfoProtocolGuid =        { 0x85c1f7d2, 0xbce6, 0x4f31, { 0x8f, 0x4d, 0xd3, 0x7e, 0x03, 0xd0, 0x5e, 0xaa } }
  # Shared Memory
  gEfiSMEMProtocolGuid =                { 0xf4e5c7d0, 0xd239, 0x47cb, { 0xaa, 0xcd, 0x7f, 0x66, 0xef, 0x76, 0x32, 0x38 } }
  # USB Function
  gEfiUsbfnIoProtocolGuid =             { 0x32d2963a, 0xfe5d, 0x4f30, { 0xb6, 0x33, 0x6e, 0x5d, 0xc5, 0x58,  0x3, 0xcc } }
  # ChipInfo
  gEfiChipInfoProtocolGuid =            { 0xb0760469, 0x970c, 0x487a, { 0xa4, 0xb5, 0x28, 0xdb, 0x7b, 0x45, 0xce, 0xf1 } }
  # RNG
  gQcomRngProtocolGuid =                { 0x3152bca5, 0xeade, 0x433d, { 0x86, 0x2e, 0xc0, 0x1c, 0xdc, 0x29, 0x1f, 0x44 } }
  # Pon Reason Protocol
  gQcomPmicPonProtocolGuid =            { 0x97044b58, 0xfea4, 0x4ad0, { 0x9d, 0xb, 0xe4, 0x17, 0xd6, 0xf, 0x11, 0xa1 }}
  gEfiPartitionRecordGuid =             { 0xfe2555be, 0xd716, 0x4686, { 0xb9, 0xd0, 0x79, 0xdb, 0x59, 0x21, 0xb7, 0x0d } }
  # TSENS
  gEfiTsensProtocolGuid =               { 0xe8d644e6, 0x47ae, 0xda4e, { 0x9d, 0x3c, 0xda, 0xb8, 0x24, 0x30, 0xeb, 0xf8 } }
  # QSEECOM 
  gQcomQseecomProtocolGuid     =        { 0xa74862ce, 0x680f, 0x4fe1, { 0xa3, 0x11, 0xdf, 0x41, 0xf4, 0x3, 0x3, 0x91 } }
  # ASN1X509

  gEfiQcomASN1X509ProtocolGuid  =       { 0x408ec123, 0x134e, 0x4b80, { 0x91, 0x42, 0xb8, 0x9a, 0xe, 0x08, 0xf8, 0xb3 } }
  # VerifiedBoot 
  gEfiQcomVerifiedBootProtocolGuid =       { 0x8e5eff91, 0x21b6, 0x47d3, { 0xaf, 0x2b, 0xc1, 0x5a, 0x1, 0xe0, 0x20, 0xec } }
  # Display Power Control  
  gQcomDisplayPwrCtrlProtocolGuid =     { 0x7bfa4293, 0x7aa4, 0x4375, { 0xb6, 0x3c, 0xb6, 0xaa, 0xb7, 0x86, 0xc4, 0x3c } }
  # NPA
  gEfiNpaProtocolGuid             =     { 0x79d6c870, 0x725e, 0x489e, { 0xa0, 0xa1, 0x27, 0xe7, 0xa5, 0xd0, 0xcb, 0x35 } }
  # RPMH API: low-level API for interfacing with RPMH
  gEfiRpmhProtocolGuid     =             { 0xe1d0b573, 0xf29f, 0x495d, { 0x93, 0x52, 0xca, 0x0d, 0xd4, 0x2a, 0x0a, 0x74 } }
  # PSLEEP API: To expose callback functionality for sleep
  gEfiPsleepProtocolGuid     =             { 0x7b0eeebf, 0x6b6d, 0x4ce3, { 0xa5, 0xdd, 0xc9, 0xa7, 0x4b, 0x2f, 0x8c, 0x79 } }
  # PMIC VERSION
  gQcomPmicVersionProtocolGuid =        { 0x4684800a, 0x2755, 0x4edc, { 0xb4, 0x43, 0x7f, 0x8c, 0xeb, 0x32, 0x39, 0xd3 } }
  # USB device 
  # CATE
  gEfiCateProtocolGuid =                { 0x0f9b9e33, 0xb8e4, 0x4e6d, { 0xa8, 0x3e, 0x2b, 0x67, 0x10, 0xa1, 0xcc, 0x24 } }
  gEfiQuantumProtocolGuid =             { 0x0f9b9e33, 0xb8e4, 0x4e6d, { 0xa8, 0x3e, 0x2b, 0x67, 0x10, 0xa1, 0xcc, 0x24 } }
  gEfiUsbDeviceProtocolGuid =           { 0xd9d9ce48, 0x44b8, 0x4f49, { 0x8e, 0x3e, 0x2a, 0x3b, 0x92, 0x7d, 0xc6, 0xc1 } }
  # USB Config
  gQcomUsbConfigProtocolGuid =          { 0xe722b03f, 0xb250, 0x42ce, { 0x8e, 0xbd, 0x5b, 0xd5, 0x18, 0x12, 0xd0, 0x37 } }
  # USB Port Test
  gQcomUsbPortTestProtocolGuid =        { 0xe98e3c05, 0xfce8, 0x459e, { 0xa9, 0x6f, 0xe3, 0x50, 0x75, 0x0e, 0xf3, 0x29 } }
  # USB Port Test Helper
  gQcomUsbPortTestHelperProtocolGuid =  { 0xf45b0e23, 0x5d39, 0x48b9, { 0x91, 0x07, 0x33, 0x05, 0x54, 0x07, 0x17, 0x54 } }
  # USB Init
  gEfiUsbInitProtocolGuid =             { 0x2da15ac7, 0x4909, 0x4c4c, { 0xb8, 0xc3, 0xa7, 0x42, 0x19, 0x5e, 0xa4, 0x6e } }
  # RAM Partitions Protocol
  gEfiRamPartitionProtocolGuid =        { 0x5172FFB5, 0x4253, 0x7D51, { 0xC6, 0x41, 0xA7, 0x01, 0xF9, 0x73, 0x10, 0x3C } }
  #Reset reason Protocol
  gEfiResetReasonProtocolGuid =         { 0xA022155A, 0x4828, 0x4535, { 0xA4, 0x99, 0x11, 0xF1, 0x52, 0x40, 0xB9, 0x1B } }
  # Erase Block Protocol
  gEfiEraseBlockProtocolGuid   =        { 0x95A9A93E, 0xA86E, 0x4926, { 0xaa, 0xef, 0x99, 0x18, 0xe7, 0x72, 0xd9, 0x87 } }
  # Throttle limit Protocol
  # Limits
  gEfiLimitsProtocolGuid =              { 0x79d6c879, 0x725e, 0x489e, { 0xa0, 0xa9, 0x27, 0xef, 0xa5, 0xdf, 0xcb, 0x35 } }
  # CmdDb
  gEfiCmdDbProtocolGuid =               { 0x1C34F691, 0xD33D, 0x4E14, { 0xB8, 0xF8, 0x32, 0xC6, 0xC0, 0x29, 0xE9, 0x5B } }
  # Storage Write Protect
  gEfiStorageWpProtocolGuid =           { 0xae1cdd2b, 0xb59a, 0x413a, { 0x8d, 0xff, 0x56, 0xd2, 0xfc, 0x63, 0xb7, 0xe0 } }
  # Storage Device Management 
  gEfiStorageDevMgmtProtocolGuid =      { 0x5bf0e02f, 0xb362, 0x4ea9, { 0x8b, 0x2f, 0xe6, 0x8d, 0xf2, 0x50, 0x0f, 0x40 } } 
  # Scm mode switch Protocol
  gQcomScmModeSwithProtocolGuid =       { 0xf57f73ed, 0x0afc, 0x4723, { 0x93, 0x74, 0x2c, 0xeb, 0xc0, 0x19, 0x8e, 0xf9 } }
  # Sha256 Protocol
  ## Include/Protocol/EFICipher.h
  gEfiCipherProtocolGuid =              { 0xa4ed10e0, 0x3010, 0x4998, {0xbc, 0xf6, 0x0c, 0xc6, 0xd2, 0x10, 0xb4, 0xd9 }}
  ## Include/Protocol/EFICipherServiceBinding.h
  gEfiCipherServiceBindingProtocolGuid =  { 0x62ee97f1, 0xb4b6, 0x42f2, {0xb4, 0xed, 0x31, 0xfa, 0x02, 0x8a, 0x82, 0xcc } }

  ## Include/Protocol/EFIMac.h
  gEfiMacProtocolGuid =              { 0x919a4ecf, 0xe0ae, 0x44dd, {0xa3, 0x9a, 0xbc, 0x3d, 0xd5, 0x24, 0xa6, 0x0d } }

  ## Include/Protocol/EFIMacServiceBinding.h
  gEfiMacServiceBindingProtocolGuid =  { 0x126e463b, 0x5ad4, 0x4e07, {0xa3, 0x0c, 0xc3, 0x1c, 0xab, 0xb7, 0xac, 0x8d } }
  
  gEfiHashAlgorithmSha256Guid =         { 0x51aa59de, 0xfdf2, 0x4ea3, {0xbc, 0x63, 0x87, 0x5f, 0xb7, 0x84, 0x2e, 0xe9 } }
  # Nand Partition GUID Protocol
  gEfiNandPartiGuidProtocolGuid =       { 0xd68edce2, 0xa314, 0x457b, { 0x96, 0x2a, 0x1d, 0x99, 0xbb, 0xfc, 0xbb, 0xfb } }

  #DDR Get Info Protocol
  gEfiDDRGetInfoProtocolGuid =          { 0x1a7c0eb8, 0x5646, 0x45f7, { 0xab, 0x20, 0xea, 0xe5, 0xda, 0x46, 0x40, 0xa2 } }
  #PASR Protocol    
  gEfiPasrProtocolGuid =                { 0x10c0a4a2, 0xfee6, 0x49be, { 0x92, 0xaf, 0xa7, 0xbb, 0x8e, 0xe6, 0x97, 0xc3 } }
  # Multithreading Kernel protocol for UEFI
  gEfiKernelProtocolGuid =           { 0xB5062BE7, 0x170B, 0x4A32, { 0xBE, 0x21, 0x68, 0x92, 0x62, 0xFF, 0x43, 0x99 } }
  #Qcom Parser Protocol
  gEfiParserProtocolGuid =              { 0x612fabcb, 0x480c, 0x4d49, { 0xbc, 0x89, 0x71, 0x79, 0x4c, 0x99, 0x02, 0xf8 } }
  #Qcom Serial port protocol
  gEfiSerialPortProtocolGuid =          { 0x10365745, 0x2b76, 0x41f9, { 0xbf, 0xda, 0x5c, 0x48, 0x21, 0x9b, 0x45, 0x32 } } 
  # Raw File System Protocol
  gEfiRawFileSystemProtocolGuid =       { 0xc3b885f3, 0xa0e4, 0x4314,{ 0x91, 0x83, 0x8a, 0x1a, 0x93, 0x80, 0x85, 0x2f } }

  gEfiQcomWDogProtocolGuid =            { 0x6f8b0fa0, 0x034f, 0x47a4, { 0x8c, 0x7a, 0xbc, 0xec, 0x55, 0xb4, 0x1c, 0x64 } }
  #Qcom Env Protocol
  gEfiQcomEnvProtocolGuid =             { 0xDC241E53, 0x498B, 0x3B59, { 0xAD, 0x17, 0xC8, 0xB2, 0x9E, 0x6B, 0x36, 0xA8 } }  
  # WatchDog protocol for UEFI
  #FV Protocol
  gEfiFVUtilsProtocolGuid = {0xbc9b4091, 0x6f29, 0x48b6,{ 0xbf, 0x34, 0x3e, 0xdd, 0x20, 0x8f, 0xa0, 0x0a } }
  # SystemCache Protocol
  gEfiSystemCacheProtocolGuid =         { 0x92cccff7, 0xb65a, 0x4f59, { 0x86, 0x13, 0x71, 0x19, 0x2d, 0x72, 0xcd, 0x28 } }
  #Adc Protocol
  gEfiAdcProtocolGuid =                 { 0x61740cc4, 0x916f, 0x4471, { 0xb0, 0xdc, 0x00, 0xc6, 0xf4, 0x3a, 0x7f, 0xc6 } }
  # GLink Driver
  gEfiGLINKProtocolGuid =               { 0x3bfcf64d, 0x00cd, 0x41cb, { 0xbe, 0xa5, 0xa7, 0x6c, 0x3a, 0x24, 0x3d, 0xed } }
  # SSR Driver
  gEfiSSRProtocolGuid =                 { 0x3966ae2d, 0x2972, 0x4560, { 0xba, 0xfb, 0x1a, 0x9d, 0x5e, 0xe7, 0xe6, 0xe0 } }
  # test SSR driver
  gEfiTestSSRProtocolGuid =             { 0xd2119ae7, 0xf9d7, 0x4d33, { 0xa5, 0x18, 0xf8, 0x06, 0xb6, 0xb8, 0x92, 0x95 } }
  # HS-UART
  gQcomHSUartProtocolGuid =             { 0x8c102bba, 0x15a9, 0x4c40, { 0x85, 0x99, 0x6d, 0x0f, 0x56, 0x89, 0xda, 0x5b } }
  # USB mass storage peripheral mode
  gEfiUsbMsdPeripheralProtocolGuid =    { 0xc8591faf, 0xdbcc, 0x479e, { 0x9e, 0xf2, 0xfd, 0x08, 0x5b, 0xc3, 0x7b, 0xc7 } }
  # Storage Eye Monitor 
  gEfiStorageEyemonProtocolGuid =       { 0xe4c9c6e9, 0x3d6b, 0x4450, { 0x88, 0x36, 0x3a, 0xd8, 0xe7, 0x84, 0x39, 0x97 } }
  
   # Pmic
  gQcomPmicGpioProtocolGuid = { 0x4BC5C6D7, 0x4CA4, 0x8835, { 0xD1, 0xBC, 0xD2, 0x9C, 0xC2, 0x02, 0x5D, 0x4A } }
  gQcomPmicDriverTestProtocolGuid = { 0xec3aad30, 0x1036, 0x4767, { 0xac, 0x14, 0xe6, 0xf7, 0xa6, 0x9b, 0xbe, 0x1e } }
  gQcomPmicPonProtocolGuid = { 0x97044b58, 0xfea4, 0x4ad0, { 0x9d, 0xb, 0xe4, 0x17, 0xd6, 0xf, 0x11, 0xa1 } }
  gQcomPmicPwrOnProtocolGuid = { 0x9ba45b66, 0xefa4, 0x441c, { 0xa3, 0xe4, 0xed, 0x22, 0x24, 0x78, 0x6b, 0xe2 } }
  gQcomPmicClkBuffProtocolGuid = { 0xD7BE2FB1, 0x4027, 0xB47A, { 0xBE, 0xB5, 0xD4, 0x92, 0x38, 0x56, 0xFA, 0x04 } }
  gQcomPmicPwmProtocolGuid = { 0xe08051ae, 0xac38, 0x46db, { 0xa6, 0x96, 0xc5, 0x69, 0x52, 0xb0, 0x56, 0x16 } }
  gQcomPmicRgbLedProtocolGuid = { 0x3ccead8e, 0xb24c, 0x403b, { 0xa0, 0xb2, 0xfd, 0x4c, 0x56, 0xb4, 0x6c, 0x9f } }
  gQcomPmicDriverTestProtocolGuid = { 0xec3aad30, 0x1036, 0x4767, { 0xac, 0x14, 0xe6, 0xf7, 0xa6, 0x9b, 0xbe, 0x1e } }
  gQcomPmicHapticsProtocolGuid = { 0x0133062c, 0xc2a3, 0x4c1a, { 0x85, 0x52, 0xe7, 0xcb, 0x0e, 0x5f, 0xde, 0xa9 } }
  gQcomPmicIbbProtocolGuid = { 0xc1bff82d, 0x6c92, 0x48fb, { 0x83, 0x55, 0xc7, 0xfb, 0x42, 0x18, 0xa4, 0xea } }
  gQcomPmicRtcProtocolGuid = { 0x1B596D0D, 0x481F, 0xCB9B, { 0xA3, 0x05, 0x34, 0x82, 0x6D, 0x76, 0xC1, 0x53 } }
  gQcomPmicVersionProtocolGuid = { 0x4684800a, 0x2755, 0x4edc, { 0xb4, 0x43, 0x7f, 0x8c, 0xeb, 0x32, 0x39, 0xd3 } }
  gEfiEmmcWpProtocolGuid = { 0xd35dc019, 0x3eab, 0x4655, { 0xba, 0x9a, 0x73, 0x4a, 0x8d, 0x8b, 0x98, 0x47 } }
  #DAL
  gEfiDalSysProtocolGuid = { 0xae37b942, 0x457f, 0x4c91, { 0xa1, 0x96, 0xd9, 0x66, 0x9f, 0xd3, 0x47, 0xa3 } }
[PcdsFixedAtBuild.common]
  gQcomSdkTokenSpaceGuid.PcdFdBaseAddress|0x0|UINT64|0x1
  gQcomSdkTokenSpaceGuid.PcdFdSize|0x0|UINT32|0x2
  gQcomSdkTokenSpaceGuid.PcdFvBaseAddress|0x0|UINT64|0x3
  gQcomSdkTokenSpaceGuid.PcdFvSize|0x0|UINT32|0x4
  gQcomTokenSpaceGuid.PcdQTimerEnabled|0|UINT32|0x00000117
  gQcomTokenSpaceGuid.EEPROMI2CCore|12|UINT32|0x00000500
  gQcomTokenSpaceGuid.EEPROMI2CByteTransferWaitTime|20000|UINT32|0x00000501
  gQcomTokenSpaceGuid.EEPROMSlaveAddress|0x50|UINT32|0x00000502
  gQcomTokenSpaceGuid.EEPROMWriteCycleTime|5000|UINT32|0x00000503
  gQcomTokenSpaceGuid.EEPROMPageSize|64|UINT32|0x00000504
  gQcomTokenSpaceGuid.EEPROMNumPages|256|UINT32|0x00000505
  # SPI Loopback
  gQcomTokenSpaceGuid.SPILoopbackCore|1|UINT32|0x00000520
  
### SdkSection 2 - New PCD inclusion ###

### SdkSection 2###

#QCOM_EDK2_PATCH
  gQcomSdkTokenSpaceGuid.PcdArmFreeUncachedMemorySizeThreshold|0x20000000|UINT64|0x00000005
#QCOM_EDK2_PATCH

