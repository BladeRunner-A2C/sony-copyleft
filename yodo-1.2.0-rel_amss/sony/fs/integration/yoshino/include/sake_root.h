#ifndef SAKE_ROOT_H
#define SAKE_ROOT_H
/*
 * Copyright (C) 2015 Sony Mobile Communications AB.
 * All rights, including trade secret rights, reserved.
 */
struct  sake_setup {
	uint8_t pub_hash[4];
	uint8_t rsa_pub_key[270];
	uint8_t crl[14];
};

const struct sake_setup sake_data_test = /* test */ {
	{ 0x02, 0x02, 0xd8, 0xd2 },   /*
				       * one container length 2 bytes of
				       * pub hash TEST!!!
				       */
	{
		0x30, 0x82, 0x01, 0x0a, /*super container length(270-4=0x10A)*/
		0x02, 0x82, 0x01, 0x01, /*sub container with public modulus*/
		0x00, 0xB8, 0xA4, 0xC1, 0x80, 0x40, 0x61, 0xBC,
		0x73, 0xEF, 0x28, 0x24, 0xD7, 0xF3, 0x69, 0x59,
		0x33, 0xEA, 0xFE, 0xFD, 0x7D, 0xC6, 0xC0, 0x12,
		0x94, 0xF2, 0x6A, 0xCF, 0x48, 0x33, 0x57, 0x6C,
		0xDF, 0x84, 0x3C, 0xE9, 0x34, 0xC8, 0x24, 0x9F,
		0x48, 0x6D, 0x25, 0xB4, 0x56, 0xED, 0x4A, 0x69,
		0xAF, 0xB9, 0xFD, 0xD8, 0x2C, 0x02, 0x28, 0x73,
		0x58, 0xE8, 0x71, 0xCB, 0xA0, 0xF1, 0xDE, 0x67,
		0x2D, 0xF0, 0x88, 0x39, 0xED, 0x86, 0x98, 0x1D,
		0x68, 0x0A, 0x52, 0x40, 0x87, 0x37, 0x10, 0x43,
		0x3A, 0x5C, 0xEE, 0x36, 0xDB, 0x9D, 0xD0, 0x1B,
		0x97, 0xD4, 0x35, 0x73, 0x5B, 0x8D, 0xEE, 0x54,
		0x27, 0x17, 0xAE, 0x86, 0x33, 0xF1, 0x13, 0x56,
		0x25, 0x14, 0x3B, 0x2B, 0x45, 0xDA, 0x63, 0x19,
		0xF1, 0x00, 0xF3, 0x30, 0xA9, 0x80, 0xF8, 0x17,
		0x06, 0xF8, 0x67, 0xCE, 0x98, 0xD3, 0x0C, 0xAA,
		0x43, 0x28, 0xF6, 0x3D, 0xC4, 0xE3, 0x5C, 0xE1,
		0x0A, 0x0E, 0x4C, 0x45, 0x58, 0x86, 0x52, 0x11,
		0xCA, 0x0B, 0x93, 0xF3, 0xEF, 0xD8, 0x5E, 0xFA,
		0x07, 0xAE, 0x97, 0x84, 0x9A, 0x31, 0x7F, 0xFC,
		0xBB, 0x80, 0x94, 0x1F, 0x5B, 0x01, 0x47, 0xB7,
		0x67, 0xCC, 0xC0, 0x69, 0xD0, 0xA2, 0x76, 0x44,
		0x1B, 0xFF, 0x14, 0x5A, 0xBD, 0xF1, 0x46, 0x92,
		0xF8, 0x3F, 0x54, 0x6D, 0x7D, 0xA2, 0x7B, 0x36,
		0x8E, 0xF5, 0xAF, 0x59, 0x5A, 0x14, 0x84, 0xA1,
		0x87, 0x2E, 0xF1, 0x63, 0xE1, 0x1E, 0xA2, 0x45,
		0x60, 0xA3, 0x12, 0x1F, 0x6E, 0x99, 0x2D, 0x71,
		0x7C, 0x2D, 0xFF, 0x84, 0x6C, 0xDE, 0x13, 0x97,
		0x07, 0x83, 0x58, 0xC2, 0xE6, 0xF7, 0x83, 0x3B,
		0xDD, 0xEC, 0xD2, 0x25, 0x6E, 0xA9, 0x02, 0x88,
		0x9E, 0x4F, 0xA7, 0x4F, 0x36, 0xFA, 0xF0, 0xA8,
		0xF1, 0x2D, 0x5C, 0xED, 0x4F, 0xE5, 0x1C, 0x8A,
		0x75, 0x02, 0x03, 0x01, 0x00, 0x01 }, /* Public exponent */
	/* container with cert revocation list */
	{ 0x30, 0x82, 0x00, 0x0a, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00,
		0x02, 0x82, 0x00, 0x00 }
};

const struct sake_setup sake_data_live = {
	{ 0x02, 0x02, 0xd1, 0x59 },  /*
				      * one container length 2 bytes of
				      * pub hash MSM8998 d159
				      */
	{ 0x30, 0x82, 0x01, 0x0a,    /* super container length (270-4=0x10A) */
		0x02, 0x82, 0x01, 0x01, /* sub container with public modulus */
		0x00, 0xa2, 0x60, 0x2f, 0xa7, 0x1f, 0xba, 0x17,
		0x2d, 0x0c, 0xc6, 0x80, 0xbd, 0x6c, 0x5c, 0x67,
		0x81, 0x6c, 0x79, 0xdc, 0x68, 0x17, 0xc8, 0x60,
		0xee, 0xe7, 0xb2, 0xc5, 0xe6, 0x78, 0xdc, 0x7e,
		0xe3, 0xb3, 0xe0, 0x37, 0x2b, 0x12, 0xb3, 0x55,
		0xc7, 0xd6, 0xac, 0x5f, 0xcc, 0x3e, 0x97, 0xd8,
		0x6c, 0xaa, 0x44, 0x3c, 0xd4, 0xe9, 0x69, 0x2b,
		0xfb, 0xca, 0xfb, 0xc3, 0x57, 0x6b, 0x8a, 0xb2,
		0xd5, 0xf9, 0x84, 0xa2, 0x3b, 0x89, 0xd9, 0x30,
		0xb2, 0x4d, 0xcc, 0x3a, 0xef, 0x0e, 0x29, 0x79,
		0x7e, 0xfd, 0x87, 0x1c, 0xd8, 0x72, 0x82, 0x2d,
		0x5d, 0x14, 0x2c, 0x5c, 0x7c, 0xd8, 0xee, 0x4b,
		0x2c, 0x1d, 0xe7, 0x29, 0x7d, 0x4d, 0x62, 0xca,
		0x36, 0xa4, 0x3f, 0xac, 0x64, 0x12, 0xe4, 0x35,
		0xf2, 0x43, 0x53, 0x2d, 0x46, 0x29, 0xb1, 0x65,
		0xc4, 0xac, 0xc7, 0x46, 0x82, 0x3b, 0xac, 0x05,
		0x37, 0x4f, 0x36, 0xc8, 0x25, 0xd8, 0xf5, 0xf4,
		0x10, 0x20, 0xfd, 0xd7, 0x94, 0x7e, 0xa7, 0xf4,
		0x10, 0x12, 0xe5, 0x1b, 0x8a, 0x43, 0xc0, 0xde,
		0x60, 0x6c, 0x21, 0x1b, 0x67, 0xc0, 0x41, 0xac,
		0xdd, 0x0f, 0x8a, 0xef, 0xd2, 0x55, 0x6c, 0xf7,
		0x45, 0x75, 0xf7, 0x39, 0x05, 0xaa, 0x92, 0x81,
		0x97, 0x03, 0xb1, 0x13, 0x5f, 0x11, 0x34, 0xdc,
		0x92, 0x6d, 0xbc, 0x32, 0x80, 0xf3, 0xdc, 0x49,
		0x3b, 0xb6, 0x78, 0xb8, 0x23, 0xc3, 0xc9, 0x42,
		0x5c, 0x24, 0x97, 0x9b, 0xd7, 0x09, 0x1d, 0x27,
		0xe0, 0x29, 0x49, 0x2c, 0x27, 0x26, 0x3c, 0x81,
		0x79, 0xc7, 0xb4, 0x15, 0xc7, 0xae, 0x75, 0x1a,
		0xb7, 0x61, 0x25, 0x9c, 0x6f, 0xa4, 0x3d, 0x1f,
		0xe6, 0x20, 0x46, 0xae, 0xae, 0x84, 0x42, 0xce,
		0x30, 0x54, 0xbd, 0x2f, 0x08, 0xaf, 0x5d, 0x18,
		0x87, 0x6b, 0x58, 0xd3, 0x63, 0x87, 0x22, 0x5a,
		0x95, 0x02, 0x03, 0x01, 0x00, 0x01 }, /* Public exponent */
	/* container with cert revocation list */
	{ 0x30, 0x82, 0x00, 0x0a, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00,
		0x02, 0x82, 0x00, 0x00 }
};
#endif /* SAKE_ROOT_H */
