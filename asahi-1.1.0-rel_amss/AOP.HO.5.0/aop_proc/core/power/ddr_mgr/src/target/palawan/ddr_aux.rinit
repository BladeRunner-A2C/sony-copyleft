# DDR_AUX Global config

module : { name = RPMH_DDRAUX_DDR_AUX_SEQ_MEM, group = DDRAUX }
vars:
  # Sequece information to be placed in:
  # aop_proc/core/power/ddr_mgr/src/target/lanai/ddr_aux.rinit
  # DDR_AUX Sequence generated Mon July 10 21:23 2023
  # This info must match ddr_mgmt_target.h
  # Please use .../ddr_mgr/Scripts/generate_seq.pl to generate data.
  ddr_aux_seq0 = [ ###16 bit sequencer

  0x403b2469 ,  #0x000: 0x2469   	DEBUG_PDC_RESTORE:           BEQ    sw1_or_is_curr_cp_zero=0 SKIP_DBGPDC_DDRSS_RESTORE PC00
                #0x002: 0x403b   	                             SET0   gcc_perf_state_override_for_collapse PC01
  0x501e1c0e ,  #0x004: 0x1c0e   	                             CALL   SHRM_CLK_ON         PC02
                #0x006: 0x501e   	                             SET1   gcc_shub_change_req PC03
  0x401e701e ,  #0x008: 0x701e   	                             WAIT1  gcc_shub_change_ack PC04
                #0x00a: 0x401e   	                             SET0   gcc_shub_change_req PC05
  0x60244021 ,  #0x00c: 0x4021   	                             SET0   gcc_shub_disable_req PC06
                #0x00e: 0x6024   	                             WAIT0  gcc_shub_disable_ack PC07
  0x500f000e ,  #0x010: 0x000e   	                             DELI   5000032ns           PC08
                #0x012: 0x500f   	                             SET1   tcs15_debug_pdc_req PC09
  0x60274024 ,  #0x014: 0x4024   	                             SET0   gcc_shub_power_collapse_req PC10
                #0x016: 0x6027   	                             WAIT0  gcc_shub_power_collapse_ack PC11
  0x70315031 ,  #0x018: 0x5031   	                             SET1   mi_pmu_qactive_shub_req PC12
                #0x01a: 0x7031   	                             WAIT1  mi_pmu_qactive_shub_ack PC13
  0x400f700f ,  #0x01c: 0x700f   	                             WAIT1  tcs15_debug_pdc_ack PC14
                #0x01e: 0x400f   	                             SET0   tcs15_debug_pdc_req PC15
  0x1c252d6a ,  #0x020: 0x2d6a   	SKIP_DBGPDC_DDRSS_RESTORE:   BEQ    sw5_or_curr_path_state=1 SKIP_DBGPDC_PATH_SWITCH PC16
                #0x022: 0x1c25   	                             CALL   CALL_PATH_SEQ       PC17
  0x503c1c00 ,  #0x024: 0x1c00   	SKIP_DBGPDC_PATH_SWITCH:     CALL   SHUB_QACTIVE_LOCK   PC18
                #0x026: 0x503c   	                             SET1   debug_pdc_seq_done  PC19
  0x1000703c ,  #0x028: 0x703c   	                             WAIT1  wait_ev_tied_0      PC20
                #0x02a: 0x1000   	                             RETURN PC21
  0x78315031 ,  #0x02c: 0x5031   	SHUB_QACTIVE_LOCK:           SET1   mi_pmu_qactive_shub_req PC22
                #0x02e: 0x7831   	                             WAIT1  5200000ns           mi_pmu_qactive_shub_ack PC23
  0x10007231 ,  #0x030: 0x7231   	                             WAIT1  1040000ns           mi_pmu_qactive_shub_ack PC24
                #0x032: 0x1000   	                             RETURN PC25
  0x10004031 ,  #0x034: 0x4031   	SHUB_QACTIVE_UNLOCK:         SET0   mi_pmu_qactive_shub_req PC26
                #0x036: 0x1000   	                             RETURN PC27
  0x781f501d ,  #0x038: 0x501d   	GCC_SHRM_FREQUENCY_SWITCH_NONOTIF: SET1   gcc_shrm_change_req PC28
                #0x03a: 0x781f   	                             WAIT1  5200000ns           gcc_shrm_change_ack PC29
  0x401d721f ,  #0x03c: 0x721f   	                             WAIT1  1040000ns           gcc_shrm_change_ack PC30
                #0x03e: 0x401d   	                             SET0   gcc_shrm_change_req PC31
  0x40285028 ,  #0x040: 0x5028   	                             SET1   seq_shrm_cp_done    PC32
                #0x042: 0x4028   	                             SET0   seq_shrm_cp_done    PC33
  0x501d1000 ,  #0x044: 0x1000   	                             RETURN PC34
                #0x046: 0x501d   	GCC_SHRM_FREQUENCY_SWITCH:   SET1   gcc_shrm_change_req PC35
  0x721f781f ,  #0x048: 0x781f   	                             WAIT1  5200000ns           gcc_shrm_change_ack PC36
                #0x04a: 0x721f   	                             WAIT1  1040000ns           gcc_shrm_change_ack PC37
  0x5005401d ,  #0x04c: 0x401d   	                             SET0   gcc_shrm_change_req PC38
                #0x04e: 0x5005   	                             SET1   tcs5_shrm_freq_req  PC39
  0x72057805 ,  #0x050: 0x7805   	                             WAIT1  5200000ns           tcs5_shrm_freq_ack  PC40
                #0x052: 0x7205   	                             WAIT1  1040000ns           tcs5_shrm_freq_ack  PC41
  0x50284005 ,  #0x054: 0x4005   	                             SET0   tcs5_shrm_freq_req  PC42
                #0x056: 0x5028   	                             SET1   seq_shrm_cp_done    PC43
  0x10004028 ,  #0x058: 0x4028   	                             SET0   seq_shrm_cp_done    PC44
                #0x05a: 0x1000   	                             RETURN PC45
  0x780d500d ,  #0x05c: 0x500d   	SHRM_PRE_VOLTAGE_NOTIFICATION: SET1   tcs13_pre_vtg_notification_req PC46
                #0x05e: 0x780d   	                             WAIT1  5200000ns           tcs13_pre_vtg_notification_ack PC47
  0x400d720d ,  #0x060: 0x720d   	                             WAIT1  1040000ns           tcs13_pre_vtg_notification_ack PC48
                #0x062: 0x400d   	                             SET0   tcs13_pre_vtg_notification_req PC49
  0x502f1000 ,  #0x064: 0x1000   	                             RETURN PC50
                #0x066: 0x502f   	AOP_WORKAROUND:              SET1   aop_int             PC51
  0x723d783d ,  #0x068: 0x783d   	                             WAIT1  5200000ns           seq_wait_event_a    PC52
                #0x06a: 0x723d   	                             WAIT1  1040000ns           seq_wait_event_a    PC53
  0x1000402f ,  #0x06c: 0x402f   	                             SET0   aop_int             PC54
                #0x06e: 0x1000   	                             RETURN PC55
  0x1c068001 ,  #0x070: 0x8001   	VOLTAGE_WORKAROUND:          MV     swwa_status         voltage_wa          PC56
                #0x072: 0x1c06   	                             CALL   AOP_WORKAROUND      PC57
  0x80021000 ,  #0x074: 0x1000   	                             RETURN PC58
                #0x076: 0x8002   	FREQUENCY_PRE_WORKAROUND:    MV     swwa_status         pre_freq_wa         PC59
  0x10001c06 ,  #0x078: 0x1c06   	                             CALL   AOP_WORKAROUND      PC60
                #0x07a: 0x1000   	                             RETURN PC61
  0x1c068003 ,  #0x07c: 0x8003   	FREQUENCY_POST_WORKAROUND:   MV     swwa_status         post_freq_wa        PC62
                #0x07e: 0x1c06   	                             CALL   AOP_WORKAROUND      PC63
  0x3e071000 ,  #0x080: 0x1000   	                             RETURN PC64
                #0x082: 0x3e07   	VOTE_PRE_VOLTAGES:           BEQR   sw8_need_voltage_workaround=1 VOLTAGE_WORKAROUND  PC65
  0x50143f84 ,  #0x084: 0x3f84   	                             BEQR   sw14=1              SHRM_PRE_VOLTAGE_NOTIFICATION PC66
                #0x086: 0x5014   	                             SET1   voltage_tcs_a1_req  PC67
  0x72367836 ,  #0x088: 0x7836   	                             WAIT1  5200000ns           voltage_tcs_a1_sent PC68
                #0x08a: 0x7236   	                             WAIT1  1040000ns           voltage_tcs_a1_sent PC69
  0x214b5015 ,  #0x08c: 0x5015   	                             SET1   voltage_tcs_a2_req  PC70
                #0x08e: 0x214b   	                             BEQ    restore=0           SKIP_VTG_TCS_C_IN_PRE PC71
  0x72377837 ,  #0x090: 0x7837   	                             WAIT1  5200000ns           voltage_tcs_a2_sent PC72
                #0x092: 0x7237   	                             WAIT1  1040000ns           voltage_tcs_a2_sent PC73
  0x7818502b ,  #0x094: 0x502b   	                             SET1   voltage_tcs_c1_req  PC74
                #0x096: 0x7818   	                             WAIT1  5200000ns           voltage_tcs_c1_ack  PC75
  0x402b7218 ,  #0x098: 0x7218   	                             WAIT1  1040000ns           voltage_tcs_c1_ack  PC76
                #0x09a: 0x402b   	                             SET0   voltage_tcs_c1_req  PC77
  0x78195036 ,  #0x09c: 0x5036   	                             SET1   voltage_tcs_c2_req  PC78
                #0x09e: 0x7819   	                             WAIT1  5200000ns           voltage_tcs_c2_ack  PC79
  0x40367219 ,  #0x0a0: 0x7219   	                             WAIT1  1040000ns           voltage_tcs_c2_ack  PC80
                #0x0a2: 0x4036   	                             SET0   voltage_tcs_c2_req  PC81
  0x72147814 ,  #0x0a4: 0x7814   	SKIP_VTG_TCS_C_IN_PRE:       WAIT1  5200000ns           voltage_tcs_a1_ack  PC82
                #0x0a6: 0x7214   	                             WAIT1  1040000ns           voltage_tcs_a1_ack  PC83
  0x72157815 ,  #0x0a8: 0x7815   	                             WAIT1  5200000ns           voltage_tcs_a2_ack  PC84
                #0x0aa: 0x7215   	                             WAIT1  1040000ns           voltage_tcs_a2_ack  PC85
  0x40154014 ,  #0x0ac: 0x4014   	                             SET0   voltage_tcs_a1_req  PC86
                #0x0ae: 0x4015   	                             SET0   voltage_tcs_a2_req  PC87
  0x402c502c ,  #0x0b0: 0x502c   	                             SET1   stats_timer_midpoint_a PC88
                #0x0b2: 0x402c   	                             SET0   stats_timer_midpoint_a PC89
  0x10003fc5 ,  #0x0b4: 0x3fc5   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC90
                #0x0b6: 0x1000   	                             RETURN PC91
  0x3f843e07 ,  #0x0b8: 0x3e07   	VOTE_POST_VOLTAGES:          BEQR   sw8_need_voltage_workaround=1 VOLTAGE_WORKAROUND  PC92
                #0x0ba: 0x3f84   	                             BEQR   sw14=1              SHRM_PRE_VOLTAGE_NOTIFICATION PC93
  0x502b21cd ,  #0x0bc: 0x21cd   	                             BEQ    collapse=0          SKIP_VTG_TCS_C_IN_POST PC94
                #0x0be: 0x502b   	                             SET1   voltage_tcs_c1_req  PC95
  0x72187818 ,  #0x0c0: 0x7818   	                             WAIT1  5200000ns           voltage_tcs_c1_ack  PC96
                #0x0c2: 0x7218   	                             WAIT1  1040000ns           voltage_tcs_c1_ack  PC97
  0x5036402b ,  #0x0c4: 0x402b   	                             SET0   voltage_tcs_c1_req  PC98
                #0x0c6: 0x5036   	                             SET1   voltage_tcs_c2_req  PC99
  0x72197819 ,  #0x0c8: 0x7819   	                             WAIT1  5200000ns           voltage_tcs_c2_ack  PC100
                #0x0ca: 0x7219   	                             WAIT1  1040000ns           voltage_tcs_c2_ack  PC101
  0x502a4036 ,  #0x0cc: 0x4036   	                             SET0   voltage_tcs_c2_req  PC102
                #0x0ce: 0x502a   	SKIP_VTG_TCS_C_IN_POST:      SET1   voltage_tcs_b2_req  PC103
  0x72177817 ,  #0x0d0: 0x7817   	                             WAIT1  5200000ns           voltage_tcs_b2_ack  PC104
                #0x0d2: 0x7217   	                             WAIT1  1040000ns           voltage_tcs_b2_ack  PC105
  0x5029402a ,  #0x0d4: 0x402a   	                             SET0   voltage_tcs_b2_req  PC106
                #0x0d6: 0x5029   	                             SET1   voltage_tcs_b1_req  PC107
  0x72167816 ,  #0x0d8: 0x7816   	                             WAIT1  5200000ns           voltage_tcs_b1_ack  PC108
                #0x0da: 0x7216   	                             WAIT1  1040000ns           voltage_tcs_b1_ack  PC109
  0x10004029 ,  #0x0dc: 0x4029   	                             SET0   voltage_tcs_b1_req  PC110
                #0x0de: 0x1000   	                             RETURN PC111
  0x68334033 ,  #0x0e0: 0x4033   	SHRM_CLK_ON:                 SET0   ddraux_gcc_mipmu_clk_gate_req PC112
                #0x0e2: 0x6833   	                             WAIT0  5200000ns           gcc_ddraux_mipmu_clk_gate_ack PC113
  0x50326233 ,  #0x0e4: 0x6233   	                             WAIT0  1040000ns           gcc_ddraux_mipmu_clk_gate_ack PC114
                #0x0e6: 0x5032   	                             SET1   ddraux_gcc_mipmu_clk_change_req PC115
  0x72327832 ,  #0x0e8: 0x7832   	                             WAIT1  5200000ns           gcc_ddraux_mipmu_clk_change_ack PC116
                #0x0ea: 0x7232   	                             WAIT1  1040000ns           gcc_ddraux_mipmu_clk_change_ack PC117
  0x1c034032 ,  #0x0ec: 0x4032   	                             SET0   ddraux_gcc_mipmu_clk_change_req PC118
                #0x0ee: 0x1c03   	                             CALL   GCC_SHRM_FREQUENCY_SWITCH_NONOTIF PC119
  0x68254020 ,  #0x0f0: 0x4020   	                             SET0   gcc_shrm_disable_req PC120
                #0x0f2: 0x6825   	                             WAIT0  5200000ns           gcc_shrm_disable_ack PC121
  0x402e6225 ,  #0x0f4: 0x6225   	                             WAIT0  1040000ns           gcc_shrm_disable_ack PC122
                #0x0f6: 0x402e   	                             SET0   gcc_dpcc_disable_req PC123
  0x62296829 ,  #0x0f8: 0x6829   	                             WAIT0  5200000ns           gcc_dpcc_disable_ack PC124
                #0x0fa: 0x6229   	                             WAIT0  1040000ns           gcc_dpcc_disable_ack PC125
  0x68284023 ,  #0x0fc: 0x4023   	                             SET0   gcc_shrm_power_collapse_req PC126
                #0x0fe: 0x6828   	                             WAIT0  5200000ns           gcc_shrm_power_collapse_ack PC127
  0x10006228 ,  #0x100: 0x6228   	                             WAIT0  1040000ns           gcc_shrm_power_collapse_ack PC128
                #0x102: 0x1000   	                             RETURN PC129
  0x78285023 ,  #0x104: 0x5023   	SHRM_CLK_OFF:                SET1   gcc_shrm_power_collapse_req PC130
                #0x106: 0x7828   	                             WAIT1  5200000ns           gcc_shrm_power_collapse_ack PC131
  0x502e7228 ,  #0x108: 0x7228   	                             WAIT1  1040000ns           gcc_shrm_power_collapse_ack PC132
                #0x10a: 0x502e   	                             SET1   gcc_dpcc_disable_req PC133
  0x72297829 ,  #0x10c: 0x7829   	                             WAIT1  5200000ns           gcc_dpcc_disable_ack PC134
                #0x10e: 0x7229   	                             WAIT1  1040000ns           gcc_dpcc_disable_ack PC135
  0x78255020 ,  #0x110: 0x5020   	                             SET1   gcc_shrm_disable_req PC136
                #0x112: 0x7825   	                             WAIT1  5200000ns           gcc_shrm_disable_ack PC137
  0x1c037225 ,  #0x114: 0x7225   	                             WAIT1  1040000ns           gcc_shrm_disable_ack PC138
                #0x116: 0x1c03   	                             CALL   GCC_SHRM_FREQUENCY_SWITCH_NONOTIF PC139
  0x78325032 ,  #0x118: 0x5032   	                             SET1   ddraux_gcc_mipmu_clk_change_req PC140
                #0x11a: 0x7832   	                             WAIT1  5200000ns           gcc_ddraux_mipmu_clk_change_ack PC141
  0x40327232 ,  #0x11c: 0x7232   	                             WAIT1  1040000ns           gcc_ddraux_mipmu_clk_change_ack PC142
                #0x11e: 0x4032   	                             SET0   ddraux_gcc_mipmu_clk_change_req PC143
  0x78335033 ,  #0x120: 0x5033   	                             SET1   ddraux_gcc_mipmu_clk_gate_req PC144
                #0x122: 0x7833   	                             WAIT1  5200000ns           gcc_ddraux_mipmu_clk_gate_ack PC145
  0x10007233 ,  #0x124: 0x7233   	                             WAIT1  1040000ns           gcc_ddraux_mipmu_clk_gate_ack PC146
                #0x126: 0x1000   	                             RETURN PC147
  0x403e503e ,  #0x128: 0x503e   	ACA_TRIGGER:                 SET1   aca_disable_req     PC148
                #0x12a: 0x403e   	                             SET0   aca_disable_req     PC149
  0x501a1000 ,  #0x12c: 0x1000   	                             RETURN PC150
                #0x12e: 0x501a   	COLLAPSE:                    SET1   collapse_status     PC151
  0x602a5025 ,  #0x130: 0x5025   	                             SET1   ddraux2bcm_adcvs_dis PC152
                #0x132: 0x602a   	                             WAIT0  curr_path_state_or_tie0 PC153
  0x1c005030 ,  #0x134: 0x5030   	                             SET1   mi_pmu_qactive_mc_req PC154
                #0x136: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC155
  0x72307830 ,  #0x138: 0x7830   	                             WAIT1  5200000ns           mi_pmu_qactive_mc_ack PC156
                #0x13a: 0x7230   	                             WAIT1  1040000ns           mi_pmu_qactive_mc_ack PC157
  0x503e503b ,  #0x13c: 0x503b   	                             SET1   gcc_perf_state_override_for_collapse PC158
                #0x13e: 0x503e   	                             SET1   aca_disable_req     PC159
  0x623f683f ,  #0x140: 0x683f   	                             WAIT0  5200000ns           aca_fsm_state       PC160
                #0x142: 0x623f   	                             WAIT0  1040000ns           aca_fsm_state       PC161
  0x78035003 ,  #0x144: 0x5003   	                             SET1   tcs3_llc_powerstate_req PC162
                #0x146: 0x7803   	                             WAIT1  5200000ns           tcs3_llc_powerstate_ack PC163
  0x40037203 ,  #0x148: 0x7203   	                             WAIT1  1040000ns           tcs3_llc_powerstate_ack PC164
                #0x14a: 0x4003   	                             SET0   tcs3_llc_powerstate_req PC165
  0x78045004 ,  #0x14c: 0x5004   	                             SET1   tcs4_pasr_req       PC166
                #0x14e: 0x7804   	                             WAIT1  5200000ns           tcs4_pasr_ack       PC167
  0x40047204 ,  #0x150: 0x7204   	                             WAIT1  1040000ns           tcs4_pasr_ack       PC168
                #0x152: 0x4004   	                             SET0   tcs4_pasr_req       PC169
  0x50245002 ,  #0x154: 0x5002   	                             SET1   tcs2_ddr_powerstate_req PC170
                #0x156: 0x5024   	                             SET1   gcc_shub_power_collapse_req PC171
  0x78271c01 ,  #0x158: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC172
                #0x15a: 0x7827   	                             WAIT1  5200000ns           gcc_shub_power_collapse_ack PC173
  0x78027227 ,  #0x15c: 0x7227   	                             WAIT1  1040000ns           gcc_shub_power_collapse_ack PC174
                #0x15e: 0x7802   	                             WAIT1  5200000ns           tcs2_ddr_powerstate_ack PC175
  0x40027202 ,  #0x160: 0x7202   	                             WAIT1  1040000ns           tcs2_ddr_powerstate_ack PC176
                #0x162: 0x4002   	                             SET0   tcs2_ddr_powerstate_req PC177
  0x781e501e ,  #0x164: 0x501e   	                             SET1   gcc_shub_change_req PC178
                #0x166: 0x781e   	                             WAIT1  5200000ns           gcc_shub_change_ack PC179
  0x401e721e ,  #0x168: 0x721e   	                             WAIT1  1040000ns           gcc_shub_change_ack PC180
                #0x16a: 0x401e   	                             SET0   gcc_shub_change_req PC181
  0x78245021 ,  #0x16c: 0x5021   	                             SET1   gcc_shub_disable_req PC182
                #0x16e: 0x7824   	                             WAIT1  5200000ns           gcc_shub_disable_ack PC183
  0x1c0f7224 ,  #0x170: 0x7224   	                             WAIT1  1040000ns           gcc_shub_disable_ack PC184
                #0x172: 0x1c0f   	                             CALL   SHRM_CLK_OFF        PC185
  0x1c068005 ,  #0x174: 0x8005   	                             MV     swwa_status         collapse_wa         PC186
                #0x176: 0x1c06   	                             CALL   AOP_WORKAROUND      PC187
  0x50261c0c ,  #0x178: 0x1c0c   	                             CALL   VOTE_POST_VOLTAGES  PC188
                #0x17a: 0x5026   	                             SET1   seq_mc_cp_done      PC189
  0x50274026 ,  #0x17c: 0x4026   	                             SET0   seq_mc_cp_done      PC190
                #0x17e: 0x5027   	                             SET1   seq_shub_cp_done    PC191
  0x401a4027 ,  #0x180: 0x4027   	                             SET0   seq_shub_cp_done    PC192
                #0x182: 0x401a   	                             SET0   collapse_status     PC193
  0x50191000 ,  #0x184: 0x1000   	                             RETURN PC194
                #0x186: 0x5019   	NORMAL_RESTORE:              SET1   normal_restore_status PC195
  0x1c0a403b ,  #0x188: 0x403b   	                             SET0   gcc_perf_state_override_for_collapse PC196
                #0x18a: 0x1c0a   	                             CALL   VOTE_PRE_VOLTAGES   PC197
  0x3e881c0e ,  #0x18c: 0x1c0e   	                             CALL   SHRM_CLK_ON         PC198
                #0x18e: 0x3e88   	                             BEQR   sw10_need_pre_frequency_workaround=1 FREQUENCY_PRE_WORKAROUND PC199
  0x781e501e ,  #0x190: 0x501e   	                             SET1   gcc_shub_change_req PC200
                #0x192: 0x781e   	                             WAIT1  5200000ns           gcc_shub_change_ack PC201
  0x401e721e ,  #0x194: 0x721e   	                             WAIT1  1040000ns           gcc_shub_change_ack PC202
                #0x196: 0x401e   	                             SET0   gcc_shub_change_req PC203
  0x68244021 ,  #0x198: 0x4021   	                             SET0   gcc_shub_disable_req PC204
                #0x19a: 0x6824   	                             WAIT0  5200000ns           gcc_shub_disable_ack PC205
  0x50026224 ,  #0x19c: 0x6224   	                             WAIT0  1040000ns           gcc_shub_disable_ack PC206
                #0x19e: 0x5002   	                             SET1   tcs2_ddr_powerstate_req PC207
  0x68274024 ,  #0x1a0: 0x4024   	                             SET0   gcc_shub_power_collapse_req PC208
                #0x1a2: 0x6827   	                             WAIT0  5200000ns           gcc_shub_power_collapse_ack PC209
  0x50316227 ,  #0x1a4: 0x6227   	                             WAIT0  1040000ns           gcc_shub_power_collapse_ack PC210
                #0x1a6: 0x5031   	                             SET1   mi_pmu_qactive_shub_req PC211
  0x72317831 ,  #0x1a8: 0x7831   	                             WAIT1  5200000ns           mi_pmu_qactive_shub_ack PC212
                #0x1aa: 0x7231   	                             WAIT1  1040000ns           mi_pmu_qactive_shub_ack PC213
  0x78024030 ,  #0x1ac: 0x4030   	                             SET0   mi_pmu_qactive_mc_req PC214
                #0x1ae: 0x7802   	                             WAIT1  5200000ns           tcs2_ddr_powerstate_ack PC215
  0x40027202 ,  #0x1b0: 0x7202   	                             WAIT1  1040000ns           tcs2_ddr_powerstate_ack PC216
                #0x1b2: 0x4002   	                             SET0   tcs2_ddr_powerstate_req PC217
  0x78035003 ,  #0x1b4: 0x5003   	                             SET1   tcs3_llc_powerstate_req PC218
                #0x1b6: 0x7803   	                             WAIT1  5200000ns           tcs3_llc_powerstate_ack PC219
  0x40037203 ,  #0x1b8: 0x7203   	                             WAIT1  1040000ns           tcs3_llc_powerstate_ack PC220
                #0x1ba: 0x4003   	                             SET0   tcs3_llc_powerstate_req PC221
  0x402d502d ,  #0x1bc: 0x502d   	                             SET1   stats_timer_midpoint_b PC222
                #0x1be: 0x402d   	                             SET0   stats_timer_midpoint_b PC223
  0x1c10403e ,  #0x1c0: 0x403e   	                             SET0   aca_disable_req     PC224
                #0x1c2: 0x1c10   	                             CALL   ACA_TRIGGER         PC225
  0x1c013ec9 ,  #0x1c4: 0x3ec9   	                             BEQR   sw11_need_post_frequency_workaround=1 FREQUENCY_POST_WORKAROUND PC226
                #0x1c6: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC227
  0x50273fc5 ,  #0x1c8: 0x3fc5   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC228
                #0x1ca: 0x5027   	                             SET1   seq_shub_cp_done    PC229
  0x50264027 ,  #0x1cc: 0x4027   	                             SET0   seq_shub_cp_done    PC230
                #0x1ce: 0x5026   	                             SET1   seq_mc_cp_done      PC231
  0x78354026 ,  #0x1d0: 0x4026   	                             SET0   seq_mc_cp_done      PC232
                #0x1d2: 0x7835   	                             WAIT1  5200000ns           path_state_requested PC233
  0x40257235 ,  #0x1d4: 0x7235   	                             WAIT1  1040000ns           path_state_requested PC234
                #0x1d6: 0x4025   	                             SET0   ddraux2bcm_adcvs_dis PC235
  0x1c068006 ,  #0x1d8: 0x8006   	                             MV     swwa_status         restore_wa          PC236
                #0x1da: 0x1c06   	                             CALL   AOP_WORKAROUND      PC237
  0x10004019 ,  #0x1dc: 0x4019   	                             SET0   normal_restore_status PC238
                #0x1de: 0x1000   	                             RETURN PC239
  0x1c255037 ,  #0x1e0: 0x5037   	GCC_INIT:                    SET1   init_path_seq       PC240
                #0x1e2: 0x1c25   	                             CALL   CALL_PATH_SEQ       PC241
  0x1c0a4037 ,  #0x1e4: 0x4037   	                             SET0   init_path_seq       PC242
                #0x1e6: 0x1c0a   	                             CALL   VOTE_PRE_VOLTAGES   PC243
  0x1c021c0c ,  #0x1e8: 0x1c0c   	                             CALL   VOTE_POST_VOLTAGES  PC244
                #0x1ea: 0x1c02   	                             CALL   GCC_SHRM_FREQUENCY_SWITCH PC245
  0x501e1c00 ,  #0x1ec: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC246
                #0x1ee: 0x501e   	                             SET1   gcc_shub_change_req PC247
  0x721e781e ,  #0x1f0: 0x781e   	                             WAIT1  5200000ns           gcc_shub_change_ack PC248
                #0x1f2: 0x721e   	                             WAIT1  1040000ns           gcc_shub_change_ack PC249
  0x1c01401e ,  #0x1f4: 0x401e   	                             SET0   gcc_shub_change_req PC250
                #0x1f6: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC251
  0x40275027 ,  #0x1f8: 0x5027   	                             SET1   seq_shub_cp_done    PC252
                #0x1fa: 0x4027   	                             SET0   seq_shub_cp_done    PC253
  0x40265026 ,  #0x1fc: 0x5026   	                             SET1   seq_mc_cp_done      PC254
                #0x1fe: 0x4026   	                             SET0   seq_mc_cp_done      PC255
  0x68334033 ,  #0x200: 0x4033   	                             SET0   ddraux_gcc_mipmu_clk_gate_req PC256
                #0x202: 0x6833   	                             WAIT0  5200000ns           gcc_ddraux_mipmu_clk_gate_ack PC257
  0x50326233 ,  #0x204: 0x6233   	                             WAIT0  1040000ns           gcc_ddraux_mipmu_clk_gate_ack PC258
                #0x206: 0x5032   	                             SET1   ddraux_gcc_mipmu_clk_change_req PC259
  0x72327832 ,  #0x208: 0x7832   	                             WAIT1  5200000ns           gcc_ddraux_mipmu_clk_change_ack PC260
                #0x20a: 0x7232   	                             WAIT1  1040000ns           gcc_ddraux_mipmu_clk_change_ack PC261
  0x10004032 ,  #0x20c: 0x4032   	                             SET0   ddraux_gcc_mipmu_clk_change_req PC262
                #0x20e: 0x1000   	                             RETURN PC263
  0x1c005016 ,  #0x210: 0x5016   	SHUB_FREQ_CHANGE:            SET1   shub_freq_change_status PC264
                #0x212: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC265
  0x1c0a2d14 ,  #0x214: 0x2d14   	                             BEQ    sw4_or_mc_dn_shub_change=1 SHUB_FREQ_START     PC266
                #0x216: 0x1c0a   	                             CALL   VOTE_PRE_VOLTAGES   PC267
  0x50063e88 ,  #0x218: 0x3e88   	                             BEQR   sw10_need_pre_frequency_workaround=1 FREQUENCY_PRE_WORKAROUND PC268
                #0x21a: 0x5006   	SHUB_FREQ_START:             SET1   tcs6_shub_prework_req PC269
  0x72067806 ,  #0x21c: 0x7806   	                             WAIT1  5200000ns           tcs6_shub_prework_ack PC270
                #0x21e: 0x7206   	                             WAIT1  1040000ns           tcs6_shub_prework_ack PC271
  0x501e4006 ,  #0x220: 0x4006   	                             SET0   tcs6_shub_prework_req PC272
                #0x222: 0x501e   	                             SET1   gcc_shub_change_req PC273
  0x721e781e ,  #0x224: 0x781e   	                             WAIT1  5200000ns           gcc_shub_change_ack PC274
                #0x226: 0x721e   	                             WAIT1  1040000ns           gcc_shub_change_ack PC275
  0x5007401e ,  #0x228: 0x401e   	                             SET0   gcc_shub_change_req PC276
                #0x22a: 0x5007   	                             SET1   tcs7_shub_postwork_req PC277
  0x72077807 ,  #0x22c: 0x7807   	                             WAIT1  5200000ns           tcs7_shub_postwork_ack PC278
                #0x22e: 0x7207   	                             WAIT1  1040000ns           tcs7_shub_postwork_ack PC279
  0x502d4007 ,  #0x230: 0x4007   	                             SET0   tcs7_shub_postwork_req PC280
                #0x232: 0x502d   	                             SET1   stats_timer_midpoint_b PC281
  0x3ec9402d ,  #0x234: 0x402d   	                             SET0   stats_timer_midpoint_b PC282
                #0x236: 0x3ec9   	                             BEQR   sw11_need_post_frequency_workaround=1 FREQUENCY_POST_WORKAROUND PC283
  0x1c0c1c01 ,  #0x238: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC284
                #0x23a: 0x1c0c   	                             CALL   VOTE_POST_VOLTAGES  PC285
  0x50273fc5 ,  #0x23c: 0x3fc5   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC286
                #0x23e: 0x5027   	                             SET1   seq_shub_cp_done    PC287
  0x40164027 ,  #0x240: 0x4027   	                             SET0   seq_shub_cp_done    PC288
                #0x242: 0x4016   	                             SET0   shub_freq_change_status PC289
  0x501f1000 ,  #0x244: 0x1000   	                             RETURN PC290
                #0x246: 0x501f   	SET_MC_SHUB_BIT:             SET1   mc_dn_shub_change_bit PC291
  0x50171000 ,  #0x248: 0x1000   	                             RETURN PC292
                #0x24a: 0x5017   	MC_FREQ_CHANGE:              SET1   mc_freq_change_status PC293
  0x1c003895 ,  #0x24c: 0x3895   	                             BEQR   shub_change=1       SET_MC_SHUB_BIT     PC294
                #0x24e: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC295
  0x1c0a5008 ,  #0x250: 0x5008   	                             SET1   tcs8_prep_prework_req PC296
                #0x252: 0x1c0a   	                             CALL   VOTE_PRE_VOLTAGES   PC297
  0x78083e88 ,  #0x254: 0x3e88   	                             BEQR   sw10_need_pre_frequency_workaround=1 FREQUENCY_PRE_WORKAROUND PC298
                #0x256: 0x7808   	                             WAIT1  5200000ns           tcs8_prep_prework_ack PC299
  0x40087208 ,  #0x258: 0x7208   	                             WAIT1  1040000ns           tcs8_prep_prework_ack PC300
                #0x25a: 0x4008   	                             SET0   tcs8_prep_prework_req PC301
  0x500938c2 ,  #0x25c: 0x38c2   	                             BEQR   shrm_up=1           GCC_SHRM_FREQUENCY_SWITCH PC302
                #0x25e: 0x5009   	                             SET1   tcs9_mc_prework_req PC303
  0x72097809 ,  #0x260: 0x7809   	                             WAIT1  5200000ns           tcs9_mc_prework_ack PC304
                #0x262: 0x7209   	                             WAIT1  1040000ns           tcs9_mc_prework_ack PC305
  0x500a4009 ,  #0x264: 0x4009   	                             SET0   tcs9_mc_prework_req PC306
                #0x266: 0x500a   	                             SET1   tcs10_mc_change_req PC307
  0x720a780a ,  #0x268: 0x780a   	                             WAIT1  5200000ns           tcs10_mc_change_ack PC308
                #0x26a: 0x720a   	                             WAIT1  1040000ns           tcs10_mc_change_ack PC309
  0x502d400a ,  #0x26c: 0x400a   	                             SET0   tcs10_mc_change_req PC310
                #0x26e: 0x502d   	                             SET1   stats_timer_midpoint_b PC311
  0x1c01402d ,  #0x270: 0x402d   	                             SET0   stats_timer_midpoint_b PC312
                #0x272: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC313
  0x2d173902 ,  #0x274: 0x3902   	                             BEQR   shrm_dn=1           GCC_SHRM_FREQUENCY_SWITCH PC314
                #0x276: 0x2d17   	                             BEQ    sw4_or_mc_dn_shub_change=1 MC_FREQ_DONE        PC315
  0x1c0c3ec9 ,  #0x278: 0x3ec9   	                             BEQR   sw11_need_post_frequency_workaround=1 FREQUENCY_POST_WORKAROUND PC316
                #0x27a: 0x1c0c   	                             CALL   VOTE_POST_VOLTAGES  PC317
  0x50263fc5 ,  #0x27c: 0x3fc5   	MC_FREQ_DONE:                BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC318
                #0x27e: 0x5026   	                             SET1   seq_mc_cp_done      PC319
  0x40174026 ,  #0x280: 0x4026   	                             SET0   seq_mc_cp_done      PC320
                #0x282: 0x4017   	                             SET0   mc_freq_change_status PC321
  0x50181000 ,  #0x284: 0x1000   	                             RETURN PC322
                #0x286: 0x5018   	P_FREQ_CHANGE_UP:            SET1   p_freq_change_up_status PC323
  0x50081c00 ,  #0x288: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC324
                #0x28a: 0x5008   	                             SET1   tcs8_prep_prework_req PC325
  0x3e881c0a ,  #0x28c: 0x1c0a   	                             CALL   VOTE_PRE_VOLTAGES   PC326
                #0x28e: 0x3e88   	                             BEQR   sw10_need_pre_frequency_workaround=1 FREQUENCY_PRE_WORKAROUND PC327
  0x72087808 ,  #0x290: 0x7808   	                             WAIT1  5200000ns           tcs8_prep_prework_ack PC328
                #0x292: 0x7208   	                             WAIT1  1040000ns           tcs8_prep_prework_ack PC329
  0x38c24008 ,  #0x294: 0x4008   	                             SET0   tcs8_prep_prework_req PC330
                #0x296: 0x38c2   	                             BEQR   shrm_up=1           GCC_SHRM_FREQUENCY_SWITCH PC331
  0x78065006 ,  #0x298: 0x5006   	                             SET1   tcs6_shub_prework_req PC332
                #0x29a: 0x7806   	                             WAIT1  5200000ns           tcs6_shub_prework_ack PC333
  0x40067206 ,  #0x29c: 0x7206   	                             WAIT1  1040000ns           tcs6_shub_prework_ack PC334
                #0x29e: 0x4006   	                             SET0   tcs6_shub_prework_req PC335
  0x781e501e ,  #0x2a0: 0x501e   	                             SET1   gcc_shub_change_req PC336
                #0x2a2: 0x781e   	                             WAIT1  5200000ns           gcc_shub_change_ack PC337
  0x401e721e ,  #0x2a4: 0x721e   	                             WAIT1  1040000ns           gcc_shub_change_ack PC338
                #0x2a6: 0x401e   	                             SET0   gcc_shub_change_req PC339
  0x78075007 ,  #0x2a8: 0x5007   	                             SET1   tcs7_shub_postwork_req PC340
                #0x2aa: 0x7807   	                             WAIT1  5200000ns           tcs7_shub_postwork_ack PC341
  0x40077207 ,  #0x2ac: 0x7207   	                             WAIT1  1040000ns           tcs7_shub_postwork_ack PC342
                #0x2ae: 0x4007   	                             SET0   tcs7_shub_postwork_req PC343
  0x40275027 ,  #0x2b0: 0x5027   	                             SET1   seq_shub_cp_done    PC344
                #0x2b2: 0x4027   	                             SET0   seq_shub_cp_done    PC345
  0x78095009 ,  #0x2b4: 0x5009   	                             SET1   tcs9_mc_prework_req PC346
                #0x2b6: 0x7809   	                             WAIT1  5200000ns           tcs9_mc_prework_ack PC347
  0x40097209 ,  #0x2b8: 0x7209   	                             WAIT1  1040000ns           tcs9_mc_prework_ack PC348
                #0x2ba: 0x4009   	                             SET0   tcs9_mc_prework_req PC349
  0x780a500a ,  #0x2bc: 0x500a   	                             SET1   tcs10_mc_change_req PC350
                #0x2be: 0x780a   	                             WAIT1  5200000ns           tcs10_mc_change_ack PC351
  0x400a720a ,  #0x2c0: 0x720a   	                             WAIT1  1040000ns           tcs10_mc_change_ack PC352
                #0x2c2: 0x400a   	                             SET0   tcs10_mc_change_req PC353
  0x502d1c01 ,  #0x2c4: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC354
                #0x2c6: 0x502d   	                             SET1   stats_timer_midpoint_b PC355
  0x3ec9402d ,  #0x2c8: 0x402d   	                             SET0   stats_timer_midpoint_b PC356
                #0x2ca: 0x3ec9   	                             BEQR   sw11_need_post_frequency_workaround=1 FREQUENCY_POST_WORKAROUND PC357
  0x1c0c3902 ,  #0x2cc: 0x3902   	                             BEQR   shrm_dn=1           GCC_SHRM_FREQUENCY_SWITCH PC358
                #0x2ce: 0x1c0c   	                             CALL   VOTE_POST_VOLTAGES  PC359
  0x50263fc5 ,  #0x2d0: 0x3fc5   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC360
                #0x2d2: 0x5026   	                             SET1   seq_mc_cp_done      PC361
  0x40184026 ,  #0x2d4: 0x4026   	                             SET0   seq_mc_cp_done      PC362
                #0x2d6: 0x4018   	                             SET0   p_freq_change_up_status PC363
  0x501b1000 ,  #0x2d8: 0x1000   	                             RETURN PC364
                #0x2da: 0x501b   	LLC_FLUSH:                   SET1   llc_flush_status    PC365
  0x1c00501f ,  #0x2dc: 0x501f   	                             SET1   flush_executed_bit  PC366
                #0x2de: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC367
  0x502c2a9a ,  #0x2e0: 0x2a9a   	                             BEQ    ddr_bw_requested=1  SKIP_FLUSH          PC368
                #0x2e2: 0x502c   	                             SET1   stats_timer_midpoint_a PC369
  0x5000402c ,  #0x2e4: 0x402c   	                             SET0   stats_timer_midpoint_a PC370
                #0x2e6: 0x5000   	                             SET1   tcs0_flush_req      PC371
  0x722f782f ,  #0x2e8: 0x782f   	                             WAIT1  5200000ns           tcs0_flush_ack_or_ddr_bw_requested PC372
                #0x2ea: 0x722f   	                             WAIT1  1040000ns           tcs0_flush_ack_or_ddr_bw_requested PC373
  0x40003a9b ,  #0x2ec: 0x3a9b   	                             BEQR   ddr_bw_requested=1  FLUSH_ABORT         PC374
                #0x2ee: 0x4000   	                             SET0   tcs0_flush_req      PC375
  0x401b1c01 ,  #0x2f0: 0x1c01   	SKIP_FLUSH:                  CALL   SHUB_QACTIVE_UNLOCK PC376
                #0x2f2: 0x401b   	                             SET0   llc_flush_status    PC377
  0x1000401c ,  #0x2f4: 0x401c   	                             SET0   flush_abort_status  PC378
                #0x2f6: 0x1000   	                             RETURN PC379
  0x501c401b ,  #0x2f8: 0x401b   	FLUSH_ABORT:                 SET0   llc_flush_status    PC380
                #0x2fa: 0x501c   	                             SET1   flush_abort_status  PC381
  0x78015001 ,  #0x2fc: 0x5001   	                             SET1   tcs1_flush_abort_req PC382
                #0x2fe: 0x7801   	                             WAIT1  5200000ns           tcs1_flush_abort_ack PC383
  0x40017201 ,  #0x300: 0x7201   	                             WAIT1  1040000ns           tcs1_flush_abort_ack PC384
                #0x302: 0x4001   	                             SET0   tcs1_flush_abort_req PC385
  0x402d502d ,  #0x304: 0x502d   	                             SET1   stats_timer_midpoint_b PC386
                #0x306: 0x402d   	                             SET0   stats_timer_midpoint_b PC387
  0x72007800 ,  #0x308: 0x7800   	                             WAIT1  5200000ns           tcs0_flush_ack      PC388
                #0x30a: 0x7200   	                             WAIT1  1040000ns           tcs0_flush_ack      PC389
  0x000b1000 ,  #0x30c: 0x1000   	                             RETURN PC390
                #0x30e: 0x000b   	ERROR_SEQUENCE:              DELI   31200ns             PC391
  0x10002fc5 ,  #0x310: 0x2fc5   	                             BEQ    goto_error_sequence=1 ERROR_SEQUENCE      PC392
                #0x312: 0x1000   	                             RETURN PC393
  0x23dd1c1f ,  #0x314: 0x1c1f   	DDR_AUX_FSM:                 CALL   CALCULATE_STATE     PC394
                #0x316: 0x23dd   	                             BEQ    need_change=0       FSM_IDLE            PC395
  0x181c1c21 ,  #0x318: 0x1c21   	                             CALL   SEQ_START           PC396
                #0x31a: 0x181c   	                             JMP    DDR_AUX_FSM         PC397
  0x80003de5 ,  #0x31c: 0x3de5   	FSM_IDLE:                    BEQR   sw7_or_need_normal_path=1 CALL_PATH_SEQ       PC398
                #0x31e: 0x8000   	                             MV     swwa_status         wa_done             PC399
  0x502f265e ,  #0x320: 0x265e   	                             BEQ    sw9_or_is_curr_cp_pc_freq_and_ddr_bw_removed_live=0 FSM_END             PC400
                #0x322: 0x502f   	                             SET1   aop_int             PC401
  0x1000402f ,  #0x324: 0x402f   	                             SET0   aop_int             PC402
                #0x326: 0x1000   	FSM_END:                     RETURN PC403
  0x18272820 ,  #0x328: 0x2820   	CALCULATE_STATE:             BEQ    cplock_req_pend=1   BCM_CPLOCK          PC404
                #0x32a: 0x1827   	                             JMP    CALCULATE           PC405
  0x783b5038 ,  #0x32c: 0x5038   	BCM_CPLOCK:                  SET1   o_ddraux_bcm_cplock_req PC406
                #0x32e: 0x783b   	                             WAIT1  5200000ns           i_bcm_ddraux_cplock_ack PC407
  0x5039723b ,  #0x330: 0x723b   	                             WAIT1  1040000ns           i_bcm_ddraux_cplock_ack PC408
                #0x332: 0x5039   	CALCULATE:                   SET1   seq_cal_start       PC409
  0x40384039 ,  #0x334: 0x4039   	                             SET0   seq_cal_start       PC410
                #0x336: 0x4038   	                             SET0   o_ddraux_bcm_cplock_req PC411
  0x401f2528 ,  #0x338: 0x2528   	                             BEQ    flush_was_executed=0 CALCULATE_DONE      PC412
                #0x33a: 0x401f   	                             SET0   flush_executed_bit  PC413
  0x000522a8 ,  #0x33c: 0x22a8   	                             BEQ    ddr_bw_requested=0  CALCULATE_DONE      PC414
                #0x33e: 0x0005   	                             DELI   1040ns              PC415
  0x1000181f ,  #0x340: 0x181f   	                             JMP    CALCULATE_STATE     PC416
                #0x342: 0x1000   	CALCULATE_DONE:              RETURN PC417
  0x2a592862 ,  #0x344: 0x2862   	SEQ_START:                   BEQ    sw_seq_req=1        SW_SEQ              PC418
                #0x346: 0x2a59   	                             BEQ    need_flush=1        LLC_FLUSH           PC419
  0x29d13da5 ,  #0x348: 0x3da5   	                             BEQR   sw6_or_need_special_path=1 CALL_PATH_SEQ       PC420
                #0x34a: 0x29d1   	                             BEQ    collapse=1          COLLAPSE            PC421
  0x2b982952 ,  #0x34c: 0x2952   	                             BEQ    restore=1           NORMAL_RESTORE      PC422
                #0x34e: 0x2b98   	                             BEQ    p_change_up=1       P_FREQ_CHANGE_UP    PC423
  0x3ad6401f ,  #0x350: 0x401f   	                             SET0   mc_dn_shub_change_bit PC424
                #0x352: 0x3ad6   	                             BEQR   mc_change=1         MC_FREQ_CHANGE      PC425
  0x38933da5 ,  #0x354: 0x3da5   	                             BEQR   sw6_or_need_special_path=1 CALL_PATH_SEQ       PC426
                #0x356: 0x3893   	                             BEQR   shub_change=1       SHUB_FREQ_CHANGE    PC427
  0x1000401f ,  #0x358: 0x401f   	                             SET0   mc_dn_shub_change_bit PC428
                #0x35a: 0x1000   	                             RETURN PC429
  0x503f503a ,  #0x35c: 0x503a   	SW_SEQ:                      SET1   sw_seq_status       PC430
                #0x35e: 0x503f   	                             SET1   sw_seq_req_clear    PC431
  0x1c00403f ,  #0x360: 0x403f   	                             SET0   sw_seq_req_clear    PC432
                #0x362: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC433
  0x50102723 ,  #0x364: 0x2723   	                             BEQ    sw12_send_tcs16=0   NO_TCS16            PC434
                #0x366: 0x5010   	                             SET1   tcs16_sw_tcs_req    PC435
  0x72107810 ,  #0x368: 0x7810   	                             WAIT1  5200000ns           tcs16_sw_tcs_ack    PC436
                #0x36a: 0x7210   	                             WAIT1  1040000ns           tcs16_sw_tcs_ack    PC437
  0x50112764 ,  #0x36c: 0x2764   	NO_TCS16:                    BEQ    sw13_send_tcs17=0   NO_TCS17            PC438
                #0x36e: 0x5011   	                             SET1   tcs17_sw_tcs_req    PC439
  0x72117811 ,  #0x370: 0x7811   	                             WAIT1  5200000ns           tcs17_sw_tcs_ack    PC440
                #0x372: 0x7211   	                             WAIT1  1040000ns           tcs17_sw_tcs_ack    PC441
  0x1c018004 ,  #0x374: 0x8004   	NO_TCS17:                    MV     swwa_status         sw_seq_wa           PC442
                #0x376: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC443
  0x40101c06 ,  #0x378: 0x1c06   	                             CALL   AOP_WORKAROUND      PC444
                #0x37a: 0x4010   	                             SET0   tcs16_sw_tcs_req    PC445
  0x403a4011 ,  #0x37c: 0x4011   	                             SET0   tcs17_sw_tcs_req    PC446
                #0x37e: 0x403a   	                             SET0   sw_seq_status       PC447
  0x50351000 ,  #0x380: 0x1000   	                             RETURN PC448
                #0x382: 0x5035   	CALL_PATH_SEQ:               SET1   call_path_seq_status PC449
  0x50341c00 ,  #0x384: 0x1c00   	                             CALL   SHUB_QACTIVE_LOCK   PC450
                #0x386: 0x5034   	                             SET1   path_sequencer_req  PC451
  0x72347834 ,  #0x388: 0x7834   	                             WAIT1  5200000ns           path_sequencer_done PC452
                #0x38a: 0x7234   	                             WAIT1  1040000ns           path_sequencer_done PC453
  0x1c014034 ,  #0x38c: 0x4034   	                             SET0   path_sequencer_req  PC454
                #0x38e: 0x1c01   	                             CALL   SHUB_QACTIVE_UNLOCK PC455
  0x40352fc5 ,  #0x390: 0x2fc5   	                             BEQ    goto_error_sequence=1 ERROR_SEQUENCE      PC456
                #0x392: 0x4035   	                             SET0   call_path_seq_status PC457
  0x81031000 ,  #0x394: 0x1000   	                             RETURN PC458
                #0x396: 0x8103   	DMA_TRIG:                    MV     ddraux2dma_br_ev    tie_3               PC459
  0x701b8081 ,  #0x398: 0x8081   	                             MV     ddraux2dma_trig     tie_1               PC460
                #0x39a: 0x701b   	                             WAIT1  dma2ddraux_done     PC461
  0x50228080 ,  #0x39c: 0x8080   	                             MV     ddraux2dma_trig     tie_0               PC462
                #0x39e: 0x5022   	                             SET1   dbg_tcs_req         PC463
  0x4022701a ,  #0x3a0: 0x701a   	                             WAIT1  dbg_tcs_done        PC464
                #0x3a2: 0x4022   	                             SET0   dbg_tcs_req         PC465
  0x00001000    #0x3a4: 0x1000   	                             RETURN PC466
                #0x3a6: 0x0000   	                                    PC467
]

# branch offsets within sequence memory 
SKIP_DBGPDC_DDRSS_RESTORE      =  0x20
SKIP_DBGPDC_PATH_SWITCH        =  0x24
SHUB_QACTIVE_LOCK              = 	0x2c
SHUB_QACTIVE_UNLOCK            = 	0x34
GCC_SHRM_FREQUENCY_SWITCH      = 	0x46
GCC_SHRM_FREQUENCY_SWITCH_NONOTIF = 	0x38
SHRM_PRE_VOLTAGE_NOTIFICATION  = 	0x5c
ERROR_SEQUENCE                 = 	0x30e
AOP_WORKAROUND                 = 	0x66
VOLTAGE_WORKAROUND             = 	0x70
FREQUENCY_PRE_WORKAROUND       = 	0x76
FREQUENCY_POST_WORKAROUND      = 	0x7c
VOTE_PRE_VOLTAGES              = 	0x82
SKIP_VTG_TCS_C_IN_PRE          = 	0xa4
VOTE_POST_VOLTAGES             = 	0xb8
SKIP_VTG_TCS_C_IN_POST         = 	0xce
SHRM_CLK_ON                    = 	0xe0
SHRM_CLK_OFF                   = 	0x104
ACA_TRIGGER                    = 	0x128
COLLAPSE                       = 	0x12e
NORMAL_RESTORE                 = 	0x186
SHUB_FREQ_CHANGE               = 	0x210
SHUB_FREQ_START                = 	0x21a
SET_MC_SHUB_BIT                = 	0x246
MC_FREQ_CHANGE                 = 	0x24a
MC_FREQ_DONE                   = 	0x27c
P_FREQ_CHANGE_UP               = 	0x286
LLC_FLUSH                      = 	0x2da
SKIP_FLUSH                     = 	0x2f0
FLUSH_ABORT                    = 	0x2f8
DDR_AUX_FSM                    = 	0x314
FSM_IDLE                       = 	0x31c
FSM_END                        = 	0x326
CALCULATE_STATE                = 	0x328
BCM_CPLOCK                     = 	0x32c
SEQ_START                      = 	0x344
SW_SEQ                         = 	0x35c
NO_TCS16                       = 	0x36c
NO_TCS17                       = 	0x374
CALL_PATH_SEQ                  = 	0x382
DMA_TRIG                       = 	0x396
CALCULATE                      = 	0x332
CALCULATE_DONE                 = 	0x342


seq0_br_address = [
    SHUB_QACTIVE_LOCK,
    SHUB_QACTIVE_UNLOCK,
    GCC_SHRM_FREQUENCY_SWITCH,
    GCC_SHRM_FREQUENCY_SWITCH_NONOTIF,
    SHRM_PRE_VOLTAGE_NOTIFICATION,
    ERROR_SEQUENCE,
    AOP_WORKAROUND,
    VOLTAGE_WORKAROUND,
    FREQUENCY_PRE_WORKAROUND,
    FREQUENCY_POST_WORKAROUND,
    VOTE_PRE_VOLTAGES,
    SKIP_VTG_TCS_C_IN_PRE,
    VOTE_POST_VOLTAGES,
    SKIP_VTG_TCS_C_IN_POST,
    SHRM_CLK_ON,
    SHRM_CLK_OFF,
    ACA_TRIGGER,
    COLLAPSE,
    NORMAL_RESTORE,
    SHUB_FREQ_CHANGE,
    SHUB_FREQ_START,
    SET_MC_SHUB_BIT,
    MC_FREQ_CHANGE,
    MC_FREQ_DONE,
    P_FREQ_CHANGE_UP,
    LLC_FLUSH,
    SKIP_FLUSH,
    FLUSH_ABORT,
    DDR_AUX_FSM,
    FSM_IDLE,
    FSM_END,
    CALCULATE_STATE,
    BCM_CPLOCK,
    SEQ_START,
    SW_SEQ,
    NO_TCS16,
    NO_TCS17,
    CALL_PATH_SEQ,
    DMA_TRIG,
    CALCULATE,
    CALCULATE_DONE,
    SKIP_DBGPDC_DDRSS_RESTORE,
    SKIP_DBGPDC_PATH_SWITCH,
]

ddr_aux_seq1 = [ ###16 bit sequencer

  0x214f2a50 ,  #0x000: 0x2a50   	PATH_SWITCH:                 BEQ    init_path_seq=1     INIT_SEQ            PC00
                #0x002: 0x214f   	                             BEQ    island_llc_en=0     SKIP_ALL            PC01
  0x28822a01 ,  #0x004: 0x2a01   	                             BEQ    debugpdc_ddraux_seq_ovrd=1 SWITCH_NORMAL       PC02
                #0x006: 0x2882   	                             BEQ    bcm_lpinoc_pend=1   SWITCH_LPINOC       PC03
  0x290128c0 ,  #0x008: 0x28c0   	                             BEQ    need_special_path=1 SWITCH_SPECIAL      PC04
                #0x00a: 0x2901   	                             BEQ    need_normal_path=1  SWITCH_NORMAL       PC05
  0x60245023 ,  #0x00c: 0x5023   	SKIP_ALL:                    SET1   path_switch_seq_done PC06
                #0x00e: 0x6024   	                             WAIT0  path_sequencer_req  PC07
  0x3c154023 ,  #0x010: 0x4023   	                             SET0   path_switch_seq_done PC08
                #0x012: 0x3c15   	                             BEQR   br_ev_sw_0=1        AOP_WORKAROUND      PC09
  0x80011000 ,  #0x014: 0x1000   	                             RETURN PC10
                #0x016: 0x8001   	SWITCH_SPECIAL:              MV     seq1_mv_status      special_seq_status  PC11
  0x318b7822 ,  #0x018: 0x7822   	                             WAIT1  5200000ns           lpinoc_cp_stable    PC12
                #0x01a: 0x318b   	                             BEQR   lpinoc_curr_cp_zero=0 LPINOC_STALL        PC13
  0x40265026 ,  #0x01c: 0x5026   	                             SET1   stats_timer_midpoint_a PC14
                #0x01e: 0x4026   	                             SET0   stats_timer_midpoint_a PC15
  0x500e318d ,  #0x020: 0x318d   	                             BEQR   lpinoc_curr_cp_zero=0 LPINOC_SWITCH_SPECIAL PC16
                #0x022: 0x500e   	                             SET1   tcs14_lb_powerstate_req PC17
  0x400e7823 ,  #0x024: 0x7823   	                             WAIT1  5200000ns           tcs14_lb_powerstate_ack PC18
                #0x026: 0x400e   	                             SET0   tcs14_lb_powerstate_req PC19
  0x50071c05 ,  #0x028: 0x1c05   	                             CALL   LB_GDSC_ON          PC20
                #0x02a: 0x5007   	                             SET1   lb_gdsc_override_sel PC21
  0x500b3986 ,  #0x02c: 0x3986   	                             BEQR   lpinoc_curr_cp_zero=1 LB_GDSC_OFF         PC22
                #0x02e: 0x500b   	                             SET1   cx_lb_clk_dis_req   PC23
  0x500d780b ,  #0x030: 0x780b   	                             WAIT1  5200000ns           cx_lb_clk_dis_ack   PC24
                #0x032: 0x500d   	                             SET1   cx_lb_clamp         PC25
  0x5010500f ,  #0x034: 0x500f   	                             SET1   lb_cpr_bypass       PC26
                #0x036: 0x5010   	                             SET1   lb_path_sel         PC27
  0x39893188 ,  #0x038: 0x3188   	                             BEQR   lpinoc_curr_cp_zero=0 LLCC_APM_TO_LPI     PC28
                #0x03a: 0x3989   	                             BEQR   lpinoc_curr_cp_zero=1 LLCC_APM_TO_OFF     PC29
  0x40275027 ,  #0x03c: 0x5027   	                             SET1   stats_timer_midpoint_b PC30
                #0x03e: 0x4027   	                             SET0   stats_timer_midpoint_b PC31
  0x318c3193 ,  #0x040: 0x3193   	                             BEQR   lpinoc_curr_cp_zero=0 LPICX_UNCLAMP_CLK_EN PC32
                #0x042: 0x318c   	                             BEQR   lpinoc_curr_cp_zero=0 LPINOC_UNSTALL      PC33
  0x50223fd4 ,  #0x044: 0x3fd4   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC34
                #0x046: 0x5022   	                             SET1   special_path_switch_done PC35
  0x50234022 ,  #0x048: 0x4022   	                             SET0   special_path_switch_done PC36
                #0x04a: 0x5023   	                             SET1   path_switch_seq_done PC37
  0x40236024 ,  #0x04c: 0x6024   	                             WAIT0  path_sequencer_req  PC38
                #0x04e: 0x4023   	                             SET0   path_switch_seq_done PC39
  0x10008000 ,  #0x050: 0x8000   	                             MV     seq1_mv_status      seq_done            PC40
                #0x052: 0x1000   	                             RETURN PC41
  0x78228002 ,  #0x054: 0x8002   	SWITCH_NORMAL:               MV     seq1_mv_status      normal_seq_status   PC42
                #0x056: 0x7822   	                             WAIT1  5200000ns           lpinoc_cp_stable    PC43
  0x5026318b ,  #0x058: 0x318b   	                             BEQR   lpinoc_curr_cp_zero=0 LPINOC_STALL        PC44
                #0x05a: 0x5026   	                             SET1   stats_timer_midpoint_a PC45
  0x318e4026 ,  #0x05c: 0x4026   	                             SET0   stats_timer_midpoint_a PC46
                #0x05e: 0x318e   	                             BEQR   lpinoc_curr_cp_zero=0 LPINOC_SWITCH_NORMAL PC47
  0x39863185 ,  #0x060: 0x3185   	                             BEQR   lpinoc_curr_cp_zero=0 LB_GDSC_ON          PC48
                #0x062: 0x3986   	                             BEQR   lpinoc_curr_cp_zero=1 LB_GDSC_OFF         PC49
  0x1c073192 ,  #0x064: 0x3192   	                             BEQR   lpinoc_curr_cp_zero=0 LPICX_CLK_DIS_CLAMP PC50
                #0x066: 0x1c07   	                             CALL   LLCC_APM_TO_SOC     PC51
  0x40275027 ,  #0x068: 0x5027   	                             SET1   stats_timer_midpoint_b PC52
                #0x06a: 0x4027   	                             SET0   stats_timer_midpoint_b PC53
  0x400f4010 ,  #0x06c: 0x4010   	                             SET0   lb_path_sel         PC54
                #0x06e: 0x400f   	                             SET0   lb_cpr_bypass       PC55
  0x400b400d ,  #0x070: 0x400d   	                             SET0   cx_lb_clamp         PC56
                #0x072: 0x400b   	                             SET0   cx_lb_clk_dis_req   PC57
  0x1c05680b ,  #0x074: 0x680b   	                             WAIT0  5200000ns           cx_lb_clk_dis_ack   PC58
                #0x076: 0x1c05   	                             CALL   LB_GDSC_ON          PC59
  0x2a164007 ,  #0x078: 0x4007   	                             SET0   lb_gdsc_override_sel PC60
                #0x07a: 0x2a16   	                             BEQ    debugpdc_ddraux_seq_ovrd=1 SKIP_LB_RESTORE     PC61
  0x7823500e ,  #0x07c: 0x500e   	                             SET1   tcs14_lb_powerstate_req PC62
                #0x07e: 0x7823   	                             WAIT1  5200000ns           tcs14_lb_powerstate_ack PC63
  0x318c400e ,  #0x080: 0x400e   	                             SET0   tcs14_lb_powerstate_req PC64
                #0x082: 0x318c   	SKIP_LB_RESTORE:             BEQR   lpinoc_curr_cp_zero=0 LPINOC_UNSTALL      PC65
  0x50213fd4 ,  #0x084: 0x3fd4   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC66
                #0x086: 0x5021   	                             SET1   normal_path_switch_done PC67
  0x50234021 ,  #0x088: 0x4021   	                             SET0   normal_path_switch_done PC68
                #0x08a: 0x5023   	                             SET1   path_switch_seq_done PC69
  0x40236024 ,  #0x08c: 0x6024   	                             WAIT0  path_sequencer_req  PC70
                #0x08e: 0x4023   	                             SET0   path_switch_seq_done PC71
  0x10008000 ,  #0x090: 0x8000   	                             MV     seq1_mv_status      seq_done            PC72
                #0x092: 0x1000   	                             RETURN PC73
  0x40255025 ,  #0x094: 0x5025   	SWITCH_LPINOC:               SET1   lpinoc_cp_zero_capture_en PC74
                #0x096: 0x4025   	                             SET0   lpinoc_cp_zero_capture_en PC75
  0x30043803 ,  #0x098: 0x3803   	                             BEQR   lpinoc_dest_cp_zero=1 LPINOC_OFF          PC76
                #0x09a: 0x3004   	                             BEQR   lpinoc_dest_cp_zero=0 LPINOC_ON           PC77
  0x80041000 ,  #0x09c: 0x1000   	                             RETURN PC78
                #0x09e: 0x8004   	LPINOC_OFF:                  MV     seq1_mv_status      lpinoc_off_seq_status PC79
  0x68205020 ,  #0x0a0: 0x5020   	                             SET1   bcm_lpinoc_ack      PC80
                #0x0a2: 0x6820   	                             WAIT0  5200000ns           bcm_lpinoc_req      PC81
  0x78214020 ,  #0x0a4: 0x4020   	                             SET0   bcm_lpinoc_ack      PC82
                #0x0a6: 0x7821   	                             WAIT1  5200000ns           bcm_lpinoc_post_req PC83
  0x40265026 ,  #0x0a8: 0x5026   	                             SET1   stats_timer_midpoint_a PC84
                #0x0aa: 0x4026   	                             SET0   stats_timer_midpoint_a PC85
  0x31c931d2 ,  #0x0ac: 0x31d2   	                             BEQR   curr_path_state=0   LPICX_CLK_DIS_CLAMP PC86
                #0x0ae: 0x31c9   	                             BEQR   curr_path_state=0   LLCC_APM_TO_OFF     PC87
  0x40275027 ,  #0x0b0: 0x5027   	                             SET1   stats_timer_midpoint_b PC88
                #0x0b2: 0x4027   	                             SET0   stats_timer_midpoint_b PC89
  0x68215024 ,  #0x0b4: 0x5024   	                             SET1   bcm_lpinoc_post_ack PC90
                #0x0b6: 0x6821   	                             WAIT0  5200000ns           bcm_lpinoc_post_req PC91
  0x3fd44024 ,  #0x0b8: 0x4024   	                             SET0   bcm_lpinoc_post_ack PC92
                #0x0ba: 0x3fd4   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC93
  0x10008000 ,  #0x0bc: 0x8000   	                             MV     seq1_mv_status      seq_done            PC94
                #0x0be: 0x1000   	                             RETURN PC95
  0x31c88003 ,  #0x0c0: 0x8003   	LPINOC_ON:                   MV     seq1_mv_status      lpinoc_on_seq_status PC96
                #0x0c2: 0x31c8   	                             BEQR   curr_path_state=0   LLCC_APM_TO_LPI     PC97
  0x502031d3 ,  #0x0c4: 0x31d3   	                             BEQR   curr_path_state=0   LPICX_UNCLAMP_CLK_EN PC98
                #0x0c6: 0x5020   	                             SET1   bcm_lpinoc_ack      PC99
  0x50266820 ,  #0x0c8: 0x6820   	                             WAIT0  5200000ns           bcm_lpinoc_req      PC100
                #0x0ca: 0x5026   	                             SET1   stats_timer_midpoint_a PC101
  0x40204026 ,  #0x0cc: 0x4026   	                             SET0   stats_timer_midpoint_a PC102
                #0x0ce: 0x4020   	                             SET0   bcm_lpinoc_ack      PC103
  0x50277821 ,  #0x0d0: 0x7821   	                             WAIT1  5200000ns           bcm_lpinoc_post_req PC104
                #0x0d2: 0x5027   	                             SET1   stats_timer_midpoint_b PC105
  0x1c0b4027 ,  #0x0d4: 0x4027   	                             SET0   stats_timer_midpoint_b PC106
                #0x0d6: 0x1c0b   	                             CALL   LPINOC_STALL        PC107
  0x39ce31cd ,  #0x0d8: 0x31cd   	                             BEQR   curr_path_state=0   LPINOC_SWITCH_SPECIAL PC108
                #0x0da: 0x39ce   	                             BEQR   curr_path_state=1   LPINOC_SWITCH_NORMAL PC109
  0x50241c0c ,  #0x0dc: 0x1c0c   	                             CALL   LPINOC_UNSTALL      PC110
                #0x0de: 0x5024   	                             SET1   bcm_lpinoc_post_ack PC111
  0x40246821 ,  #0x0e0: 0x6821   	                             WAIT0  5200000ns           bcm_lpinoc_post_req PC112
                #0x0e2: 0x4024   	                             SET0   bcm_lpinoc_post_ack PC113
  0x80003fd4 ,  #0x0e4: 0x3fd4   	                             BEQR   goto_error_sequence=1 ERROR_SEQUENCE      PC114
                #0x0e6: 0x8000   	                             MV     seq1_mv_status      seq_done            PC115
  0x40061000 ,  #0x0e8: 0x1000   	                             RETURN PC116
                #0x0ea: 0x4006   	LB_GDSC_ON:                  SET0   lb_gdsc_pwr_gate_req PC117
  0x10006806 ,  #0x0ec: 0x6806   	                             WAIT0  5200000ns           lb_gdsc_pwr_gate_ack PC118
                #0x0ee: 0x1000   	                             RETURN PC119
  0x78065006 ,  #0x0f0: 0x5006   	LB_GDSC_OFF:                 SET1   lb_gdsc_pwr_gate_req PC120
                #0x0f2: 0x7806   	                             WAIT1  5200000ns           lb_gdsc_pwr_gate_ack PC121
  0x1c111000 ,  #0x0f4: 0x1000   	                             RETURN PC122
                #0x0f6: 0x1c11   	LLCC_APM_TO_SOC:             CALL   LLCC_APM_CLK_ON     PC123
  0x50094008 ,  #0x0f8: 0x4008   	                             SET0   llcccx_apm_tile_act_br0 PC124
                #0x0fa: 0x5009   	                             SET1   llcccx_apm_tile_act_br1 PC125
  0x50014000 ,  #0x0fc: 0x4000   	                             SET0   llccmx_apm_tile_act_br0 PC126
                #0x0fe: 0x5001   	                             SET1   llccmx_apm_tile_act_br1 PC127
  0x10001c0a ,  #0x100: 0x1c0a   	                             CALL   LLCC_APM_SWITCH     PC128
                #0x102: 0x1000   	                             RETURN PC129
  0x50081c11 ,  #0x104: 0x1c11   	LLCC_APM_TO_LPI:             CALL   LLCC_APM_CLK_ON     PC130
                #0x106: 0x5008   	                             SET1   llcccx_apm_tile_act_br0 PC131
  0x50004009 ,  #0x108: 0x4009   	                             SET0   llcccx_apm_tile_act_br1 PC132
                #0x10a: 0x5000   	                             SET1   llccmx_apm_tile_act_br0 PC133
  0x1c0a4001 ,  #0x10c: 0x4001   	                             SET0   llccmx_apm_tile_act_br1 PC134
                #0x10e: 0x1c0a   	                             CALL   LLCC_APM_SWITCH     PC135
  0x1c111000 ,  #0x110: 0x1000   	                             RETURN PC136
                #0x112: 0x1c11   	LLCC_APM_TO_OFF:             CALL   LLCC_APM_CLK_ON     PC137
  0x40094008 ,  #0x114: 0x4008   	                             SET0   llcccx_apm_tile_act_br0 PC138
                #0x116: 0x4009   	                             SET0   llcccx_apm_tile_act_br1 PC139
  0x50014000 ,  #0x118: 0x4000   	                             SET0   llccmx_apm_tile_act_br0 PC140
                #0x11a: 0x5001   	                             SET1   llccmx_apm_tile_act_br1 PC141
  0x10001c0a ,  #0x11c: 0x1c0a   	                             CALL   LLCC_APM_SWITCH     PC142
                #0x11e: 0x1000   	                             RETURN PC143
  0x680d5011 ,  #0x120: 0x5011   	LLCC_APM_CLK_ON:             SET1   llcc_lb_pwr_mux_ctrl_clk_en PC144
                #0x122: 0x680d   	                             WAIT0  5200000ns           llcc_lb_pwr_mux_ctrl_clk_ack PC145
  0x500a1000 ,  #0x124: 0x1000   	                             RETURN PC146
                #0x126: 0x500a   	LLCC_APM_SWITCH:             SET1   llcccx_apm_switch   PC147
  0x780a400a ,  #0x128: 0x400a   	                             SET0   llcccx_apm_switch   PC148
                #0x12a: 0x780a   	                             WAIT1  5200000ns           llcccx_apm_tile_trans_done PC149
  0x40025002 ,  #0x12c: 0x5002   	                             SET1   llccmx_apm_switch   PC150
                #0x12e: 0x4002   	                             SET0   llccmx_apm_switch   PC151
  0x40117802 ,  #0x130: 0x7802   	                             WAIT1  5200000ns           llccmx_apm_tile_trans_done PC152
                #0x132: 0x4011   	                             SET0   llcc_lb_pwr_mux_ctrl_clk_en PC153
  0x50031000 ,  #0x134: 0x1000   	                             RETURN PC154
                #0x136: 0x5003   	LPINOC_STALL:                SET1   lpinoc_stall_req    PC155
  0x40031000 ,  #0x138: 0x1000   	                             RETURN PC156
                #0x13a: 0x4003   	LPINOC_UNSTALL:              SET0   lpinoc_stall_req    PC157
  0x500c1000 ,  #0x13c: 0x1000   	                             RETURN PC158
                #0x13e: 0x500c   	LPICX_CLK_DIS_CLAMP:         SET1   lpicx_lb_clk_dis_req PC159
  0x5005780c ,  #0x140: 0x780c   	                             WAIT1  5200000ns           lpicx_lb_clk_dis_ack PC160
                #0x142: 0x5005   	                             SET1   lpicx_lb_clamp      PC161
  0x40051000 ,  #0x144: 0x1000   	                             RETURN PC162
                #0x146: 0x4005   	LPICX_UNCLAMP_CLK_EN:        SET0   lpicx_lb_clamp      PC163
  0x680c400c ,  #0x148: 0x400c   	                             SET0   lpicx_lb_clk_dis_req PC164
                #0x14a: 0x680c   	                             WAIT0  5200000ns           lpicx_lb_clk_dis_ack PC165
  0x50041000 ,  #0x14c: 0x1000   	                             RETURN PC166
                #0x14e: 0x5004   	LPINOC_SWITCH_SPECIAL:       SET1   lpinoc_switch_req   PC167
  0x10007804 ,  #0x150: 0x7804   	                             WAIT1  5200000ns           lpinoc_switch_ack   PC168
                #0x152: 0x1000   	                             RETURN PC169
  0x68044004 ,  #0x154: 0x4004   	LPINOC_SWITCH_NORMAL:        SET0   lpinoc_switch_req   PC170
                #0x156: 0x6804   	                             WAIT0  5200000ns           lpinoc_switch_ack   PC171
  0x502f1000 ,  #0x158: 0x1000   	                             RETURN PC172
                #0x15a: 0x502f   	AOP_WORKAROUND:              SET1   aop_int             PC173
  0x402f7830 ,  #0x15c: 0x7830   	                             WAIT1  5200000ns           waitsel_sw_0        PC174
                #0x15e: 0x402f   	                             SET0   aop_int             PC175
  0x80061000 ,  #0x160: 0x1000   	                             RETURN PC176
                #0x162: 0x8006   	INIT_SEQ:                    MV     seq1_mv_status      init_seq_status     PC177
  0x5005500c ,  #0x164: 0x500c   	                             SET1   lpicx_lb_clk_dis_req PC178
                #0x166: 0x5005   	                             SET1   lpicx_lb_clamp      PC179
  0x50235028 ,  #0x168: 0x5028   	                             SET1   release_forcing_default_hi PC180
                #0x16a: 0x5023   	                             SET1   path_switch_seq_done PC181
  0x40236024 ,  #0x16c: 0x6024   	                             WAIT0  path_sequencer_req  PC182
                #0x16e: 0x4023   	                             SET0   path_switch_seq_done PC183
  0x10008000 ,  #0x170: 0x8000   	                             MV     seq1_mv_status      seq_done            PC184
                #0x172: 0x1000   	                             RETURN PC185
  0x2fd4000b ,  #0x174: 0x000b   	ERROR_SEQUENCE:              DELI   31200ns             PC186
                #0x176: 0x2fd4   	                             BEQ    goto_error_sequence=1 ERROR_SEQUENCE      PC187
  0x00001000    #0x178: 0x1000   	                             RETURN PC188
                #0x17a: 0x0000   	                                    PC189

]
# branch offsets within sequence memory 
SWITCH_SPECIAL                 = 	0x16
SWITCH_NORMAL                  = 	0x54
SWITCH_LPINOC                  = 	0x94
LPINOC_OFF                     = 	0x9e
LPINOC_ON                      = 	0xc0
LB_GDSC_ON                     = 	0xea
LB_GDSC_OFF                    = 	0xf0
LLCC_APM_TO_SOC                = 	0xf6
LLCC_APM_TO_LPI                = 	0x104
LLCC_APM_TO_OFF                = 	0x112
LLCC_APM_SWITCH                = 	0x126
LPINOC_STALL                   = 	0x136
LPINOC_UNSTALL                 = 	0x13a
LPINOC_SWITCH_SPECIAL          = 	0x14e
LPINOC_SWITCH_NORMAL           = 	0x154
SKIP_ALL                       = 	0xc
INIT_SEQ                       = 	0x162
LLCC_APM_CLK_ON                = 	0x120
LPICX_CLK_DIS_CLAMP            = 	0x13e
LPICX_UNCLAMP_CLK_EN           = 	0x146
ERROR_SEQUENCE                 = 	0x174
AOP_WORKAROUND                 = 	0x15a
SKIP_LB_RESTORE                =  0x82

seq1_br_address = [
    SWITCH_SPECIAL,
    SWITCH_NORMAL,
    SWITCH_LPINOC,
    LPINOC_OFF,
    LPINOC_ON,
    LB_GDSC_ON,
    LB_GDSC_OFF,
    LLCC_APM_TO_SOC,
    LLCC_APM_TO_LPI,
    LLCC_APM_TO_OFF,
    LLCC_APM_SWITCH,
    LPINOC_STALL,
    LPINOC_UNSTALL,
    LPINOC_SWITCH_SPECIAL,
    LPINOC_SWITCH_NORMAL,
    SKIP_ALL,
    INIT_SEQ,
    LLCC_APM_CLK_ON,
    LPICX_CLK_DIS_CLAMP,
    LPICX_UNCLAMP_CLK_EN,
    ERROR_SEQUENCE,
    AOP_WORKAROUND,
    SKIP_LB_RESTORE
]
# End of Generated .rinit data.

regs:
 SEQ0_MEMq = ddr_aux_seq0
 SEQ0_BRANCH_ADDRq = seq0_br_address

 SEQ1_MEMq = ddr_aux_seq1
 SEQ1_BRANCH_ADDRq = seq1_br_address

 #SEQ_BRANCH_EVENT = 0x00 # Programmed by AOP - initialize to all 0's
 SEQ_GCC_CLKPLAN = 0x0   # Programmed by AOP - initialize to all 0's
 SEQn_CFG = 0x0
 #SEQ_VCD_SEL = 0x0
 SEQn_PWR_CTRL_OVRD_BIT_31_TO_0_MASK  = 0x0
 SEQn_PWR_CTRL_OVRD_BIT_63_TO_32_MASK = 0x0
 SEQn_PWR_CTRL_OVRD_BIT_31_TO_0_VAL   = 0x0
 SEQn_PWR_CTRL_OVRD_BIT_63_TO_32_VAL  = 0x0

 SEQn_WAIT_EVENT_BIT_31_TO_0_OVRD_MASK  = 0x00000000
 SEQn_WAIT_EVENT_BIT_31_TO_0_OVRD_VAL   = 0x00000000

 # Override PMU_SHUB
 SEQn_WAIT_EVENT_BIT_63_TO_32_OVRD_MASK = 0x00000000
 SEQn_WAIT_EVENT_BIT_63_TO_32_OVRD_VAL  = 0x00000000

 SEQn_BRANCH_EVENT_OVRD_MASK = 0x0
 SEQn_BRANCH_EVENT_OVRD_VAL = 0x0


module : { name = RPMH_DDRAUX_DDR_AUX_TCS_CFG, group = DDRAUX }
vars:
  default_config = 0x00
  default_cmd = 0x00
  
  flush_cmd = 0xB400000 #RSI_REQ 2/REQ
                        #RSI_RR 1/RR
                        #RSI_LAST 1/LAST
                        #RSI_OPCODE 8/FLUSH
                        #RSI_ID 0/RESVD 

  flush_abort_cmd = 0xB480000 #RSI_REQ 2/REQ
                              #RSI_RR 1/RR
                              #RSI_LAST 1/LAST
                              #RSI_OPCODE 9/FLUSH ABORT
                              #RSI_ID 0/RESVD

  ddrps_req = 0xB300000 #RSI_REQ 2/REQ
                        #RSI_RR 1/RR
                        #RSI_LAST 1/LAST
                        #RSI_OPCODE 6/POWERSTATE
                        #RSI_ID 0/DDRSS

  llcps_req = 0xB320000 #RSI_REQ 2/REQ
                        #RSI_RR 1/RR
                        #RSI_LAST 1/LAST
                        #RSI_OPCODE 6/POWERSTATE
                        #RSI_ID 1/LLC

  pasr_hw_cmd = 0xB600000  #RSI_REQ 2/REQ
                           #RSI_RR 1/RR
                           #RSI_LAST 1/LAST
                           #RSI_OPCODE 12/PASR
                           #RSI_ID 0/RESVD

  shrm_freq_cmd = 0xB680000 #RSI_REQ 2/REQ
                            #RSI_RR 1/RR
                            #RSI_LAST 1/LAST
                            #RSI_OPCODE 13/SHRM_FREQ
                            #RSI_ID 0/RESVD
  shub_pre_cmd = 0xB000000 #RSI_REQ 2/REQ
                           #RSI_RR 1/RR
                           #RSI_LAST 1/LAST
                           #RSI_OPCODE 0/CLOCK_PREWORK
                           #RSI_ID 0/SHUB

  shub_post_cmd = 0xB100000 #RSI_REQ 2/REQ
                            #RSI_RR 1/RR
                            #RSI_LAST 1/LAST
                            #RSI_OPCODE 2/CLOCK_POST
                            #RSI_ID 0/SHUB

  mc_prep_cmd = 0x9710000 #RSI_REQ 2/REQ
                          #RSI_RR 0/FF
                          #RSI_LAST 1/LAST
                          #RSI_OPCODE 14/MC_SWITCH_PREP
                          #RSI_ID 1/MC 

  mc_pre_cmd = 0xB010000 #RSI_REQ 2/REQ
                         #RSI_RR 1/RR
                         #RSI_LAST 1/LAST
                         #RSI_OPCODE 0/CLOCK_PREWORK
                         #RSI_ID 1/MC

  mc_work_cmd = 0xB090000   #RSI_REQ 2/REQ
                            #RSI_RR 1/RR
                            #RSI_LAST 1/LAST
                            #RSI_OPCODE 1/CLOCK_WORK
                            #RSI_ID 1/MC
  alc_cmd = 0xB580000  #RSI_REQ 2/REQ
                       #RSI_RR 1/RR
                       #RSI_LAST 1/LAST
                       #RSI_OPCODE 11/ALC
                       #RSI_ID 0/RESVD      

  acv_cmd = 0xB500000  #RSI_REQ 2/REQ
                       #RSI_RR 1/RR
                       #RSI_LAST 1/LAST
                       #RSI_OPCODE 10/ACV
                       #RSI_ID 0/RESVD

  debug_pdc_cmd = 0xB780000 #RSI_REQ 2/REQ
                            #RSI_RR 1/RR
                            #RSI_LAST 1/LAST
                            #RSI_OPCODE 15/DEBUG_PDC
                            #RSI_ID 0/RESVD

  llcc_lb_cmd = 0xB310000

regs:
  #all sequence triggered
  RSI_TCSm_AMC_MODE = [0]
  VTG_TCSm_AMC_MODE = 0x00
  
  #response data from ARC/VRM
  VTG_TCS_RESP_BACK = 0x00000000
  
  DDRAUX_DRV_ID_FOR_VTG_VOTE = 24   # DDR_AUX DRV

  RSI_TCSm_CMDt[0, 0] = flush_cmd
  RSI_TCSm_CFG[0] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[1, 0] = flush_abort_cmd
  RSI_TCSm_CFG[1] = {.CMD_EN = 1, .CMD_WAIT = 0 } #FnF

  RSI_TCSm_CMDt[2, 0] = ddrps_req
  RSI_TCSm_CFG[2] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[3, 0] = llcps_req
  RSI_TCSm_CFG[3] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[4, 0] = pasr_hw_cmd
  RSI_TCSm_CFG[4] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[5, 0] = shrm_freq_cmd
  RSI_TCSm_CFG[5] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[6, 0] = shub_pre_cmd
  RSI_TCSm_CFG[6] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[7, 0] = shub_post_cmd
  RSI_TCSm_CFG[7] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[8, 0] = mc_prep_cmd
  RSI_TCSm_CFG[8] = {.CMD_EN = 1, .CMD_WAIT = 0 } #FnF

  RSI_TCSm_CMDt[9, 0] = mc_pre_cmd
  RSI_TCSm_CFG[9] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[10, 0] = mc_work_cmd
  RSI_TCSm_CFG[10] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[11, 0] = alc_cmd
  RSI_TCSm_CFG[11] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[12, 0] = acv_cmd
  RSI_TCSm_CFG[12] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  #RSI_TCSm_CMDt[13] = default_cmd #spare

  RSI_TCSm_CMDt[14] = llcc_lb_cmd
  RSI_TCSm_CFG[14] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  RSI_TCSm_CMDt[15, 0] = debug_pdc_cmd
  RSI_TCSm_CFG[15] = {.CMD_EN = 1, .CMD_WAIT = 1 }

  #RSI_TCSm_CMDt[16] = default_cmd #TODO: SW driven (GPR, GPW)??
  #RSI_TCSm_CMDt[17] = default_cmd #TODO: SW driven PASR
  #RSI_TCSm_CMDt[18] = default_cmd #SWWR resvd
  #RSI_TCSm_CMDt[19] = default_cmd #SWWR resvd

module : { name = RPMH_DDRAUX_DDR_AUX, group = DDRAUX, last = true }

regs:
  AOP_INTR_MASK = 0x69    # Seq 0 Done
                          # Seq Power Control
                          # Seq 0 Sub sequence timeout
                          # Seq 1 Sub sequence timeout

  SEQn_TIMEOUT_CTRL[0] = {.THRESHOLD = 0x1C200, .ENABLE = 0x1}
  SEQn_TIMEOUT_CTRL[1] = {.THRESHOLD = 0x17700, .ENABLE = 0x1}
# RSIn_TIMEOUT = {
#   .THRESHOLD = 0xFFFFF, # Max timeout threshold.
#   .ENABLE    = 0x0      # RSI Timeout disabled.
# }

  # ACA config
  #Here is the HW client mapping table. 
  #0	APSS                        0001      
  #1	                           <unused>
  #2	DPU                         0004
  #3	Video                       0008
  #4	Camera                      0010
  #5	Modem                       0020
  #6	GPU                         0040
  #7	NPU                         0080
  #8	Turing Q6                   0100
  #9	PCIe-1L                     0200
  #10	PCIe-2L                     0400
  #11	Modem                       0800
  #12	TME                         1000
  #13	LPASS                       2000
  #14	SSC                         4000
  #15	GCC_CATC_client_fal10_veto  8000
  
  ACA_AGG_CFG = {            # 
    .SW_CLIENT_EN = 0xFFFF,  # Enable all SW clients (DRVs)
    .HW_CLIENT_EN = 0xFFFF,  # Enable HW clients with FAL10 veto signals
  } 

  ACA_AGG_CFG_SHAPE_CLIENTsc = 0xFFFFFFFB # Enabled ACA clients minus shaping clients (only DPU)
  ACA_INFRA_IN_USE_CFG       = 0x1F       # Enable SHUB and MC for Infrastructure in use
  ACA_FAL10_CMD              = 0xb580000  # (2)  << 26 | # RSI_REQ
                                          # (1)  << 25 | # Response reqd
                                          # (1)  << 24 | # Last cmd
                                          # (11) << 19 | # opcode = RSI_OPCODE_FAL_ALC
                                          # (0)  << 16 | # res_id = RSI_RESOURCE_DDRSS
                                          # (1)        | # data
                                          
  SW_ALC_CMD                 = 0xb580000  # (2)  << 26 | # RSI_REQ
                                          # (1)  << 25 | # Response reqd
                                          # (1)  << 24 | # Last cmd
                                          # (11) << 19 | # opcode = RSI_OPCODE_FAL_ALC
                                          # (0)  << 16 | # res_id = RSI_RESOURCE_DDRSS
                                          # (0)        | # data

  # Enable DDR_AUX
  DDR_AUX_HW_ENABLE = 0x01

  # Enable ACA in the .c
