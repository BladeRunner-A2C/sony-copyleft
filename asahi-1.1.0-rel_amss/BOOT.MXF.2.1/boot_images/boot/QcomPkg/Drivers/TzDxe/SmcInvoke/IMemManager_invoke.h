// Copyright (c) 2018 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
/**
 * @file IMemManager.idl
 *
 * Describes the interface for a service that tracks and provides
 * information for memory backed objects, this service returns access
 * information and access permissions for tracked memory objects.
 */
/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "IMemManager.h"

#define IMemManager_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##retain(me); \
      } \
      case IMemManager_OP_getRegionInfo: { \
        if (k != ObjectCounts_pack(0, 1, 1, 1) || \
          a[0].b.size != 20) { \
          break; \
        } \
        struct { \
          uint64_t m_addr; \
          uint64_t m_len; \
          uint32_t m_perm; \
        } *o = a[0].b.ptr; \
        return prefix##getRegionInfo(me, a[1].o, &o->m_addr, &o->m_len, &o->m_perm, &a[2].o); \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


