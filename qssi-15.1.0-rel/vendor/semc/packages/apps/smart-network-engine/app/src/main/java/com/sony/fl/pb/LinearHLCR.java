// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LinearHLCR.proto

package com.sony.fl.pb;

public final class LinearHLCR {
  private LinearHLCR() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class PBLinearHLCRGlobalModel extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBLinearHLCRGlobalModel.newBuilder() to construct.
    private PBLinearHLCRGlobalModel() {
      initFields();
    }
    private PBLinearHLCRGlobalModel(boolean noInit) {}
    
    private static final PBLinearHLCRGlobalModel defaultInstance;
    public static PBLinearHLCRGlobalModel getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBLinearHLCRGlobalModel getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string HLCR_params_file_name = 1;
    public static final int HLCR_PARAMS_FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasHLCRParamsFileName;
    private java.lang.String hLCRParamsFileName_ = "";
    public boolean hasHLCRParamsFileName() { return hasHLCRParamsFileName; }
    public java.lang.String getHLCRParamsFileName() { return hLCRParamsFileName_; }
    
    // repeated string Linear_Regression_file_names = 2;
    public static final int LINEAR_REGRESSION_FILE_NAMES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> linearRegressionFileNames_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getLinearRegressionFileNamesList() {
      return linearRegressionFileNames_;
    }
    public int getLinearRegressionFileNamesCount() { return linearRegressionFileNames_.size(); }
    public java.lang.String getLinearRegressionFileNames(int index) {
      return linearRegressionFileNames_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHLCRParamsFileName()) {
        output.writeString(1, getHLCRParamsFileName());
      }
      for (java.lang.String element : getLinearRegressionFileNamesList()) {
        output.writeString(2, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHLCRParamsFileName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getHLCRParamsFileName());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getLinearRegressionFileNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLinearRegressionFileNamesList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel, Builder> {
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel result;
      
      // Construct using com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel();
        return builder;
      }
      
      protected com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getDefaultInstanceForType() {
        return com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.linearRegressionFileNames_ != java.util.Collections.EMPTY_LIST) {
          result.linearRegressionFileNames_ =
            java.util.Collections.unmodifiableList(result.linearRegressionFileNames_);
        }
        com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel other) {
        if (other == com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance()) return this;
        if (other.hasHLCRParamsFileName()) {
          setHLCRParamsFileName(other.getHLCRParamsFileName());
        }
        if (!other.linearRegressionFileNames_.isEmpty()) {
          if (result.linearRegressionFileNames_.isEmpty()) {
            result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
          }
          result.linearRegressionFileNames_.addAll(other.linearRegressionFileNames_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setHLCRParamsFileName(input.readString());
              break;
            }
            case 18: {
              addLinearRegressionFileNames(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string HLCR_params_file_name = 1;
      public boolean hasHLCRParamsFileName() {
        return result.hasHLCRParamsFileName();
      }
      public java.lang.String getHLCRParamsFileName() {
        return result.getHLCRParamsFileName();
      }
      public Builder setHLCRParamsFileName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHLCRParamsFileName = true;
        result.hLCRParamsFileName_ = value;
        return this;
      }
      public Builder clearHLCRParamsFileName() {
        result.hasHLCRParamsFileName = false;
        result.hLCRParamsFileName_ = getDefaultInstance().getHLCRParamsFileName();
        return this;
      }
      
      // repeated string Linear_Regression_file_names = 2;
      public java.util.List<java.lang.String> getLinearRegressionFileNamesList() {
        return java.util.Collections.unmodifiableList(result.linearRegressionFileNames_);
      }
      public int getLinearRegressionFileNamesCount() {
        return result.getLinearRegressionFileNamesCount();
      }
      public java.lang.String getLinearRegressionFileNames(int index) {
        return result.getLinearRegressionFileNames(index);
      }
      public Builder setLinearRegressionFileNames(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.linearRegressionFileNames_.set(index, value);
        return this;
      }
      public Builder addLinearRegressionFileNames(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.linearRegressionFileNames_.isEmpty()) {
          result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
        }
        result.linearRegressionFileNames_.add(value);
        return this;
      }
      public Builder addAllLinearRegressionFileNames(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.linearRegressionFileNames_.isEmpty()) {
          result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.linearRegressionFileNames_);
        return this;
      }
      public Builder clearLinearRegressionFileNames() {
        result.linearRegressionFileNames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBLinearHLCRGlobalModel)
    }
    
    static {
      defaultInstance = new PBLinearHLCRGlobalModel(true);
      com.sony.fl.pb.LinearHLCR.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBLinearHLCRGlobalModel)
  }
  
  public static final class PBLinearHLCRLocalModel extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBLinearHLCRLocalModel.newBuilder() to construct.
    private PBLinearHLCRLocalModel() {
      initFields();
    }
    private PBLinearHLCRLocalModel(boolean noInit) {}
    
    private static final PBLinearHLCRLocalModel defaultInstance;
    public static PBLinearHLCRLocalModel getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBLinearHLCRLocalModel getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string HLCR_params_file_name = 1;
    public static final int HLCR_PARAMS_FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasHLCRParamsFileName;
    private java.lang.String hLCRParamsFileName_ = "";
    public boolean hasHLCRParamsFileName() { return hasHLCRParamsFileName; }
    public java.lang.String getHLCRParamsFileName() { return hLCRParamsFileName_; }
    
    // repeated string Linear_Regression_file_names = 2;
    public static final int LINEAR_REGRESSION_FILE_NAMES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> linearRegressionFileNames_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getLinearRegressionFileNamesList() {
      return linearRegressionFileNames_;
    }
    public int getLinearRegressionFileNamesCount() { return linearRegressionFileNames_.size(); }
    public java.lang.String getLinearRegressionFileNames(int index) {
      return linearRegressionFileNames_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHLCRParamsFileName()) {
        output.writeString(1, getHLCRParamsFileName());
      }
      for (java.lang.String element : getLinearRegressionFileNamesList()) {
        output.writeString(2, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHLCRParamsFileName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getHLCRParamsFileName());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getLinearRegressionFileNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLinearRegressionFileNamesList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel, Builder> {
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel result;
      
      // Construct using com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel();
        return builder;
      }
      
      protected com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel getDefaultInstanceForType() {
        return com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.linearRegressionFileNames_ != java.util.Collections.EMPTY_LIST) {
          result.linearRegressionFileNames_ =
            java.util.Collections.unmodifiableList(result.linearRegressionFileNames_);
        }
        com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel other) {
        if (other == com.sony.fl.pb.LinearHLCR.PBLinearHLCRLocalModel.getDefaultInstance()) return this;
        if (other.hasHLCRParamsFileName()) {
          setHLCRParamsFileName(other.getHLCRParamsFileName());
        }
        if (!other.linearRegressionFileNames_.isEmpty()) {
          if (result.linearRegressionFileNames_.isEmpty()) {
            result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
          }
          result.linearRegressionFileNames_.addAll(other.linearRegressionFileNames_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setHLCRParamsFileName(input.readString());
              break;
            }
            case 18: {
              addLinearRegressionFileNames(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string HLCR_params_file_name = 1;
      public boolean hasHLCRParamsFileName() {
        return result.hasHLCRParamsFileName();
      }
      public java.lang.String getHLCRParamsFileName() {
        return result.getHLCRParamsFileName();
      }
      public Builder setHLCRParamsFileName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHLCRParamsFileName = true;
        result.hLCRParamsFileName_ = value;
        return this;
      }
      public Builder clearHLCRParamsFileName() {
        result.hasHLCRParamsFileName = false;
        result.hLCRParamsFileName_ = getDefaultInstance().getHLCRParamsFileName();
        return this;
      }
      
      // repeated string Linear_Regression_file_names = 2;
      public java.util.List<java.lang.String> getLinearRegressionFileNamesList() {
        return java.util.Collections.unmodifiableList(result.linearRegressionFileNames_);
      }
      public int getLinearRegressionFileNamesCount() {
        return result.getLinearRegressionFileNamesCount();
      }
      public java.lang.String getLinearRegressionFileNames(int index) {
        return result.getLinearRegressionFileNames(index);
      }
      public Builder setLinearRegressionFileNames(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.linearRegressionFileNames_.set(index, value);
        return this;
      }
      public Builder addLinearRegressionFileNames(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.linearRegressionFileNames_.isEmpty()) {
          result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
        }
        result.linearRegressionFileNames_.add(value);
        return this;
      }
      public Builder addAllLinearRegressionFileNames(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.linearRegressionFileNames_.isEmpty()) {
          result.linearRegressionFileNames_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.linearRegressionFileNames_);
        return this;
      }
      public Builder clearLinearRegressionFileNames() {
        result.linearRegressionFileNames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBLinearHLCRLocalModel)
    }
    
    static {
      defaultInstance = new PBLinearHLCRLocalModel(true);
      com.sony.fl.pb.LinearHLCR.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBLinearHLCRLocalModel)
  }
  
  public static final class PBLinearHLCRTrainInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBLinearHLCRTrainInfo.newBuilder() to construct.
    private PBLinearHLCRTrainInfo() {
      initFields();
    }
    private PBLinearHLCRTrainInfo(boolean noInit) {}
    
    private static final PBLinearHLCRTrainInfo defaultInstance;
    public static PBLinearHLCRTrainInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBLinearHLCRTrainInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string hyperparams_file_name = 1;
    public static final int HYPERPARAMS_FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasHyperparamsFileName;
    private java.lang.String hyperparamsFileName_ = "";
    public boolean hasHyperparamsFileName() { return hasHyperparamsFileName; }
    public java.lang.String getHyperparamsFileName() { return hyperparamsFileName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHyperparamsFileName()) {
        output.writeString(1, getHyperparamsFileName());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHyperparamsFileName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getHyperparamsFileName());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo, Builder> {
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo result;
      
      // Construct using com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo other) {
        if (other == com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.getDefaultInstance()) return this;
        if (other.hasHyperparamsFileName()) {
          setHyperparamsFileName(other.getHyperparamsFileName());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setHyperparamsFileName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string hyperparams_file_name = 1;
      public boolean hasHyperparamsFileName() {
        return result.hasHyperparamsFileName();
      }
      public java.lang.String getHyperparamsFileName() {
        return result.getHyperparamsFileName();
      }
      public Builder setHyperparamsFileName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHyperparamsFileName = true;
        result.hyperparamsFileName_ = value;
        return this;
      }
      public Builder clearHyperparamsFileName() {
        result.hasHyperparamsFileName = false;
        result.hyperparamsFileName_ = getDefaultInstance().getHyperparamsFileName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBLinearHLCRTrainInfo)
    }
    
    static {
      defaultInstance = new PBLinearHLCRTrainInfo(true);
      com.sony.fl.pb.LinearHLCR.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBLinearHLCRTrainInfo)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
