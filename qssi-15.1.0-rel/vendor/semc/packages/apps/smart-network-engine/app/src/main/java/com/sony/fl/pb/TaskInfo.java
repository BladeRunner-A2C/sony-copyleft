// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskInfo.proto

package com.sony.fl.pb;

public final class TaskInfo {
  private TaskInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum TaskType
      implements com.google.protobuf.Internal.EnumLite {
    UnknownTaskType(0, 0),
    Train(1, 1),
    Evaluation(2, 2),
    Deploy(3, 3),
    Delete(4, 4),
    Stop(5, 5),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static TaskType valueOf(int value) {
      switch (value) {
        case 0: return UnknownTaskType;
        case 1: return Train;
        case 2: return Evaluation;
        case 3: return Deploy;
        case 4: return Delete;
        case 5: return Stop;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<TaskType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TaskType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TaskType>() {
            public TaskType findValueByNumber(int number) {
              return TaskType.valueOf(number)
    ;        }
          };
    
    private final int index;
    private final int value;
    private TaskType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.sony.fl.pb.TaskType)
  }
  
  public enum ModelType
      implements com.google.protobuf.Internal.EnumLite {
    UnknownModelType(0, 0),
    LinerHLCR(1, 1),
    NNHLCR(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static ModelType valueOf(int value) {
      switch (value) {
        case 0: return UnknownModelType;
        case 1: return LinerHLCR;
        case 2: return NNHLCR;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ModelType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModelType>() {
            public ModelType findValueByNumber(int number) {
              return ModelType.valueOf(number)
    ;        }
          };
    
    private final int index;
    private final int value;
    private ModelType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.sony.fl.pb.ModelType)
  }
  
  public static final class PBTaskInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBTaskInfo.newBuilder() to construct.
    private PBTaskInfo() {
      initFields();
    }
    private PBTaskInfo(boolean noInit) {}
    
    private static final PBTaskInfo defaultInstance;
    public static PBTaskInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBTaskInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string FLLib_Version = 1;
    public static final int FLLIB_VERSION_FIELD_NUMBER = 1;
    private boolean hasFLLibVersion;
    private java.lang.String fLLibVersion_ = "";
    public boolean hasFLLibVersion() { return hasFLLibVersion; }
    public java.lang.String getFLLibVersion() { return fLLibVersion_; }
    
    // optional string task_ID = 2;
    public static final int TASK_ID_FIELD_NUMBER = 2;
    private boolean hasTaskID;
    private java.lang.String taskID_ = "";
    public boolean hasTaskID() { return hasTaskID; }
    public java.lang.String getTaskID() { return taskID_; }
    
    // optional string FL_ID = 3;
    public static final int FL_ID_FIELD_NUMBER = 3;
    private boolean hasFLID;
    private java.lang.String fLID_ = "";
    public boolean hasFLID() { return hasFLID; }
    public java.lang.String getFLID() { return fLID_; }
    
    // optional .com.sony.fl.pb.TaskType task_type = 4;
    public static final int TASK_TYPE_FIELD_NUMBER = 4;
    private boolean hasTaskType;
    private com.sony.fl.pb.TaskInfo.TaskType taskType_;
    public boolean hasTaskType() { return hasTaskType; }
    public com.sony.fl.pb.TaskInfo.TaskType getTaskType() { return taskType_; }
    
    // optional .com.sony.fl.pb.PBTrainInfo train_info = 5;
    public static final int TRAIN_INFO_FIELD_NUMBER = 5;
    private boolean hasTrainInfo;
    private com.sony.fl.pb.TaskInfo.PBTrainInfo trainInfo_;
    public boolean hasTrainInfo() { return hasTrainInfo; }
    public com.sony.fl.pb.TaskInfo.PBTrainInfo getTrainInfo() { return trainInfo_; }
    
    // optional .com.sony.fl.pb.PBEvaluationInfo evaluation_info = 6;
    public static final int EVALUATION_INFO_FIELD_NUMBER = 6;
    private boolean hasEvaluationInfo;
    private com.sony.fl.pb.TaskInfo.PBEvaluationInfo evaluationInfo_;
    public boolean hasEvaluationInfo() { return hasEvaluationInfo; }
    public com.sony.fl.pb.TaskInfo.PBEvaluationInfo getEvaluationInfo() { return evaluationInfo_; }
    
    // optional .com.sony.fl.pb.PBDeployInfo deploy_info = 7;
    public static final int DEPLOY_INFO_FIELD_NUMBER = 7;
    private boolean hasDeployInfo;
    private com.sony.fl.pb.TaskInfo.PBDeployInfo deployInfo_;
    public boolean hasDeployInfo() { return hasDeployInfo; }
    public com.sony.fl.pb.TaskInfo.PBDeployInfo getDeployInfo() { return deployInfo_; }
    
    // optional .com.sony.fl.pb.PBDeleteInfo delete_info = 8;
    public static final int DELETE_INFO_FIELD_NUMBER = 8;
    private boolean hasDeleteInfo;
    private com.sony.fl.pb.TaskInfo.PBDeleteInfo deleteInfo_;
    public boolean hasDeleteInfo() { return hasDeleteInfo; }
    public com.sony.fl.pb.TaskInfo.PBDeleteInfo getDeleteInfo() { return deleteInfo_; }
    
    // optional .com.sony.fl.pb.PBStopInfo stop_info = 9;
    public static final int STOP_INFO_FIELD_NUMBER = 9;
    private boolean hasStopInfo;
    private com.sony.fl.pb.TaskInfo.PBStopInfo stopInfo_;
    public boolean hasStopInfo() { return hasStopInfo; }
    public com.sony.fl.pb.TaskInfo.PBStopInfo getStopInfo() { return stopInfo_; }
    
    // optional string appID = 99;
    public static final int APPID_FIELD_NUMBER = 99;
    private boolean hasAppID;
    private java.lang.String appID_ = "";
    public boolean hasAppID() { return hasAppID; }
    public java.lang.String getAppID() { return appID_; }
    
    private void initFields() {
      taskType_ = com.sony.fl.pb.TaskInfo.TaskType.UnknownTaskType;
      trainInfo_ = com.sony.fl.pb.TaskInfo.PBTrainInfo.getDefaultInstance();
      evaluationInfo_ = com.sony.fl.pb.TaskInfo.PBEvaluationInfo.getDefaultInstance();
      deployInfo_ = com.sony.fl.pb.TaskInfo.PBDeployInfo.getDefaultInstance();
      deleteInfo_ = com.sony.fl.pb.TaskInfo.PBDeleteInfo.getDefaultInstance();
      stopInfo_ = com.sony.fl.pb.TaskInfo.PBStopInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFLLibVersion()) {
        output.writeString(1, getFLLibVersion());
      }
      if (hasTaskID()) {
        output.writeString(2, getTaskID());
      }
      if (hasFLID()) {
        output.writeString(3, getFLID());
      }
      if (hasTaskType()) {
        output.writeEnum(4, getTaskType().getNumber());
      }
      if (hasTrainInfo()) {
        output.writeMessage(5, getTrainInfo());
      }
      if (hasEvaluationInfo()) {
        output.writeMessage(6, getEvaluationInfo());
      }
      if (hasDeployInfo()) {
        output.writeMessage(7, getDeployInfo());
      }
      if (hasDeleteInfo()) {
        output.writeMessage(8, getDeleteInfo());
      }
      if (hasStopInfo()) {
        output.writeMessage(9, getStopInfo());
      }
      if (hasAppID()) {
        output.writeString(99, getAppID());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFLLibVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFLLibVersion());
      }
      if (hasTaskID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTaskID());
      }
      if (hasFLID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFLID());
      }
      if (hasTaskType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getTaskType().getNumber());
      }
      if (hasTrainInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTrainInfo());
      }
      if (hasEvaluationInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getEvaluationInfo());
      }
      if (hasDeployInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getDeployInfo());
      }
      if (hasDeleteInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDeleteInfo());
      }
      if (hasStopInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getStopInfo());
      }
      if (hasAppID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(99, getAppID());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTaskInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBTaskInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBTaskInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBTaskInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBTaskInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBTaskInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBTaskInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBTaskInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBTaskInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBTaskInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBTaskInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBTaskInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBTaskInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBTaskInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBTaskInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBTaskInfo.getDefaultInstance()) return this;
        if (other.hasFLLibVersion()) {
          setFLLibVersion(other.getFLLibVersion());
        }
        if (other.hasTaskID()) {
          setTaskID(other.getTaskID());
        }
        if (other.hasFLID()) {
          setFLID(other.getFLID());
        }
        if (other.hasTaskType()) {
          setTaskType(other.getTaskType());
        }
        if (other.hasTrainInfo()) {
          mergeTrainInfo(other.getTrainInfo());
        }
        if (other.hasEvaluationInfo()) {
          mergeEvaluationInfo(other.getEvaluationInfo());
        }
        if (other.hasDeployInfo()) {
          mergeDeployInfo(other.getDeployInfo());
        }
        if (other.hasDeleteInfo()) {
          mergeDeleteInfo(other.getDeleteInfo());
        }
        if (other.hasStopInfo()) {
          mergeStopInfo(other.getStopInfo());
        }
        if (other.hasAppID()) {
          setAppID(other.getAppID());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setFLLibVersion(input.readString());
              break;
            }
            case 18: {
              setTaskID(input.readString());
              break;
            }
            case 26: {
              setFLID(input.readString());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.sony.fl.pb.TaskInfo.TaskType value = com.sony.fl.pb.TaskInfo.TaskType.valueOf(rawValue);
              if (value != null) {
                setTaskType(value);
              }
              break;
            }
            case 42: {
              com.sony.fl.pb.TaskInfo.PBTrainInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBTrainInfo.newBuilder();
              if (hasTrainInfo()) {
                subBuilder.mergeFrom(getTrainInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTrainInfo(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.sony.fl.pb.TaskInfo.PBEvaluationInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBEvaluationInfo.newBuilder();
              if (hasEvaluationInfo()) {
                subBuilder.mergeFrom(getEvaluationInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEvaluationInfo(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.sony.fl.pb.TaskInfo.PBDeployInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBDeployInfo.newBuilder();
              if (hasDeployInfo()) {
                subBuilder.mergeFrom(getDeployInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDeployInfo(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.sony.fl.pb.TaskInfo.PBDeleteInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBDeleteInfo.newBuilder();
              if (hasDeleteInfo()) {
                subBuilder.mergeFrom(getDeleteInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDeleteInfo(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.sony.fl.pb.TaskInfo.PBStopInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBStopInfo.newBuilder();
              if (hasStopInfo()) {
                subBuilder.mergeFrom(getStopInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStopInfo(subBuilder.buildPartial());
              break;
            }
            case 794: {
              setAppID(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string FLLib_Version = 1;
      public boolean hasFLLibVersion() {
        return result.hasFLLibVersion();
      }
      public java.lang.String getFLLibVersion() {
        return result.getFLLibVersion();
      }
      public Builder setFLLibVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFLLibVersion = true;
        result.fLLibVersion_ = value;
        return this;
      }
      public Builder clearFLLibVersion() {
        result.hasFLLibVersion = false;
        result.fLLibVersion_ = getDefaultInstance().getFLLibVersion();
        return this;
      }
      
      // optional string task_ID = 2;
      public boolean hasTaskID() {
        return result.hasTaskID();
      }
      public java.lang.String getTaskID() {
        return result.getTaskID();
      }
      public Builder setTaskID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTaskID = true;
        result.taskID_ = value;
        return this;
      }
      public Builder clearTaskID() {
        result.hasTaskID = false;
        result.taskID_ = getDefaultInstance().getTaskID();
        return this;
      }
      
      // optional string FL_ID = 3;
      public boolean hasFLID() {
        return result.hasFLID();
      }
      public java.lang.String getFLID() {
        return result.getFLID();
      }
      public Builder setFLID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFLID = true;
        result.fLID_ = value;
        return this;
      }
      public Builder clearFLID() {
        result.hasFLID = false;
        result.fLID_ = getDefaultInstance().getFLID();
        return this;
      }
      
      // optional .com.sony.fl.pb.TaskType task_type = 4;
      public boolean hasTaskType() {
        return result.hasTaskType();
      }
      public com.sony.fl.pb.TaskInfo.TaskType getTaskType() {
        return result.getTaskType();
      }
      public Builder setTaskType(com.sony.fl.pb.TaskInfo.TaskType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTaskType = true;
        result.taskType_ = value;
        return this;
      }
      public Builder clearTaskType() {
        result.hasTaskType = false;
        result.taskType_ = com.sony.fl.pb.TaskInfo.TaskType.UnknownTaskType;
        return this;
      }
      
      // optional .com.sony.fl.pb.PBTrainInfo train_info = 5;
      public boolean hasTrainInfo() {
        return result.hasTrainInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBTrainInfo getTrainInfo() {
        return result.getTrainInfo();
      }
      public Builder setTrainInfo(com.sony.fl.pb.TaskInfo.PBTrainInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTrainInfo = true;
        result.trainInfo_ = value;
        return this;
      }
      public Builder setTrainInfo(com.sony.fl.pb.TaskInfo.PBTrainInfo.Builder builderForValue) {
        result.hasTrainInfo = true;
        result.trainInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeTrainInfo(com.sony.fl.pb.TaskInfo.PBTrainInfo value) {
        if (result.hasTrainInfo() &&
            result.trainInfo_ != com.sony.fl.pb.TaskInfo.PBTrainInfo.getDefaultInstance()) {
          result.trainInfo_ =
            com.sony.fl.pb.TaskInfo.PBTrainInfo.newBuilder(result.trainInfo_).mergeFrom(value).buildPartial();
        } else {
          result.trainInfo_ = value;
        }
        result.hasTrainInfo = true;
        return this;
      }
      public Builder clearTrainInfo() {
        result.hasTrainInfo = false;
        result.trainInfo_ = com.sony.fl.pb.TaskInfo.PBTrainInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBEvaluationInfo evaluation_info = 6;
      public boolean hasEvaluationInfo() {
        return result.hasEvaluationInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBEvaluationInfo getEvaluationInfo() {
        return result.getEvaluationInfo();
      }
      public Builder setEvaluationInfo(com.sony.fl.pb.TaskInfo.PBEvaluationInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEvaluationInfo = true;
        result.evaluationInfo_ = value;
        return this;
      }
      public Builder setEvaluationInfo(com.sony.fl.pb.TaskInfo.PBEvaluationInfo.Builder builderForValue) {
        result.hasEvaluationInfo = true;
        result.evaluationInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeEvaluationInfo(com.sony.fl.pb.TaskInfo.PBEvaluationInfo value) {
        if (result.hasEvaluationInfo() &&
            result.evaluationInfo_ != com.sony.fl.pb.TaskInfo.PBEvaluationInfo.getDefaultInstance()) {
          result.evaluationInfo_ =
            com.sony.fl.pb.TaskInfo.PBEvaluationInfo.newBuilder(result.evaluationInfo_).mergeFrom(value).buildPartial();
        } else {
          result.evaluationInfo_ = value;
        }
        result.hasEvaluationInfo = true;
        return this;
      }
      public Builder clearEvaluationInfo() {
        result.hasEvaluationInfo = false;
        result.evaluationInfo_ = com.sony.fl.pb.TaskInfo.PBEvaluationInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBDeployInfo deploy_info = 7;
      public boolean hasDeployInfo() {
        return result.hasDeployInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBDeployInfo getDeployInfo() {
        return result.getDeployInfo();
      }
      public Builder setDeployInfo(com.sony.fl.pb.TaskInfo.PBDeployInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDeployInfo = true;
        result.deployInfo_ = value;
        return this;
      }
      public Builder setDeployInfo(com.sony.fl.pb.TaskInfo.PBDeployInfo.Builder builderForValue) {
        result.hasDeployInfo = true;
        result.deployInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeDeployInfo(com.sony.fl.pb.TaskInfo.PBDeployInfo value) {
        if (result.hasDeployInfo() &&
            result.deployInfo_ != com.sony.fl.pb.TaskInfo.PBDeployInfo.getDefaultInstance()) {
          result.deployInfo_ =
            com.sony.fl.pb.TaskInfo.PBDeployInfo.newBuilder(result.deployInfo_).mergeFrom(value).buildPartial();
        } else {
          result.deployInfo_ = value;
        }
        result.hasDeployInfo = true;
        return this;
      }
      public Builder clearDeployInfo() {
        result.hasDeployInfo = false;
        result.deployInfo_ = com.sony.fl.pb.TaskInfo.PBDeployInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBDeleteInfo delete_info = 8;
      public boolean hasDeleteInfo() {
        return result.hasDeleteInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBDeleteInfo getDeleteInfo() {
        return result.getDeleteInfo();
      }
      public Builder setDeleteInfo(com.sony.fl.pb.TaskInfo.PBDeleteInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDeleteInfo = true;
        result.deleteInfo_ = value;
        return this;
      }
      public Builder setDeleteInfo(com.sony.fl.pb.TaskInfo.PBDeleteInfo.Builder builderForValue) {
        result.hasDeleteInfo = true;
        result.deleteInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeDeleteInfo(com.sony.fl.pb.TaskInfo.PBDeleteInfo value) {
        if (result.hasDeleteInfo() &&
            result.deleteInfo_ != com.sony.fl.pb.TaskInfo.PBDeleteInfo.getDefaultInstance()) {
          result.deleteInfo_ =
            com.sony.fl.pb.TaskInfo.PBDeleteInfo.newBuilder(result.deleteInfo_).mergeFrom(value).buildPartial();
        } else {
          result.deleteInfo_ = value;
        }
        result.hasDeleteInfo = true;
        return this;
      }
      public Builder clearDeleteInfo() {
        result.hasDeleteInfo = false;
        result.deleteInfo_ = com.sony.fl.pb.TaskInfo.PBDeleteInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBStopInfo stop_info = 9;
      public boolean hasStopInfo() {
        return result.hasStopInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBStopInfo getStopInfo() {
        return result.getStopInfo();
      }
      public Builder setStopInfo(com.sony.fl.pb.TaskInfo.PBStopInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStopInfo = true;
        result.stopInfo_ = value;
        return this;
      }
      public Builder setStopInfo(com.sony.fl.pb.TaskInfo.PBStopInfo.Builder builderForValue) {
        result.hasStopInfo = true;
        result.stopInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeStopInfo(com.sony.fl.pb.TaskInfo.PBStopInfo value) {
        if (result.hasStopInfo() &&
            result.stopInfo_ != com.sony.fl.pb.TaskInfo.PBStopInfo.getDefaultInstance()) {
          result.stopInfo_ =
            com.sony.fl.pb.TaskInfo.PBStopInfo.newBuilder(result.stopInfo_).mergeFrom(value).buildPartial();
        } else {
          result.stopInfo_ = value;
        }
        result.hasStopInfo = true;
        return this;
      }
      public Builder clearStopInfo() {
        result.hasStopInfo = false;
        result.stopInfo_ = com.sony.fl.pb.TaskInfo.PBStopInfo.getDefaultInstance();
        return this;
      }
      
      // optional string appID = 99;
      public boolean hasAppID() {
        return result.hasAppID();
      }
      public java.lang.String getAppID() {
        return result.getAppID();
      }
      public Builder setAppID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppID = true;
        result.appID_ = value;
        return this;
      }
      public Builder clearAppID() {
        result.hasAppID = false;
        result.appID_ = getDefaultInstance().getAppID();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBTaskInfo)
    }
    
    static {
      defaultInstance = new PBTaskInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBTaskInfo)
  }
  
  public static final class PBTrainInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBTrainInfo.newBuilder() to construct.
    private PBTrainInfo() {
      initFields();
    }
    private PBTrainInfo(boolean noInit) {}
    
    private static final PBTrainInfo defaultInstance;
    public static PBTrainInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBTrainInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional .com.sony.fl.pb.ModelType model_type = 1;
    public static final int MODEL_TYPE_FIELD_NUMBER = 1;
    private boolean hasModelType;
    private com.sony.fl.pb.TaskInfo.ModelType modelType_;
    public boolean hasModelType() { return hasModelType; }
    public com.sony.fl.pb.TaskInfo.ModelType getModelType() { return modelType_; }
    
    // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
    public static final int LINEARHLCR_GLOBAL_MODEL_FIELD_NUMBER = 2;
    private boolean hasLinearHLCRGlobalModel;
    private com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel linearHLCRGlobalModel_;
    public boolean hasLinearHLCRGlobalModel() { return hasLinearHLCRGlobalModel; }
    public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() { return linearHLCRGlobalModel_; }
    
    // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
    public static final int NNHLCR_MODEL_FIELD_NUMBER = 3;
    private boolean hasNNHLCRModel;
    private com.sony.fl.pb.NNHLCR.PBNNHLCRModel nNHLCRModel_;
    public boolean hasNNHLCRModel() { return hasNNHLCRModel; }
    public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() { return nNHLCRModel_; }
    
    // optional .com.sony.fl.pb.PBLinearHLCRTrainInfo linearHLCR_train_info = 4;
    public static final int LINEARHLCR_TRAIN_INFO_FIELD_NUMBER = 4;
    private boolean hasLinearHLCRTrainInfo;
    private com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo linearHLCRTrainInfo_;
    public boolean hasLinearHLCRTrainInfo() { return hasLinearHLCRTrainInfo; }
    public com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo getLinearHLCRTrainInfo() { return linearHLCRTrainInfo_; }
    
    // optional .com.sony.fl.pb.PBNNHLCRTrainInfo NNHLCR_train_info = 5;
    public static final int NNHLCR_TRAIN_INFO_FIELD_NUMBER = 5;
    private boolean hasNNHLCRTrainInfo;
    private com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo nNHLCRTrainInfo_;
    public boolean hasNNHLCRTrainInfo() { return hasNNHLCRTrainInfo; }
    public com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo getNNHLCRTrainInfo() { return nNHLCRTrainInfo_; }
    
    // optional .com.sony.fl.pb.PBDataInfo data_info = 6;
    public static final int DATA_INFO_FIELD_NUMBER = 6;
    private boolean hasDataInfo;
    private com.sony.fl.pb.TaskInfo.PBDataInfo dataInfo_;
    public boolean hasDataInfo() { return hasDataInfo; }
    public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() { return dataInfo_; }
    
    private void initFields() {
      modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
      linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
      nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
      linearHLCRTrainInfo_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.getDefaultInstance();
      nNHLCRTrainInfo_ = com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.getDefaultInstance();
      dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasModelType()) {
        output.writeEnum(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        output.writeMessage(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        output.writeMessage(3, getNNHLCRModel());
      }
      if (hasLinearHLCRTrainInfo()) {
        output.writeMessage(4, getLinearHLCRTrainInfo());
      }
      if (hasNNHLCRTrainInfo()) {
        output.writeMessage(5, getNNHLCRTrainInfo());
      }
      if (hasDataInfo()) {
        output.writeMessage(6, getDataInfo());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasModelType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNNHLCRModel());
      }
      if (hasLinearHLCRTrainInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLinearHLCRTrainInfo());
      }
      if (hasNNHLCRTrainInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNNHLCRTrainInfo());
      }
      if (hasDataInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDataInfo());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBTrainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBTrainInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBTrainInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBTrainInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBTrainInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBTrainInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBTrainInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBTrainInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBTrainInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBTrainInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBTrainInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBTrainInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBTrainInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBTrainInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBTrainInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBTrainInfo.getDefaultInstance()) return this;
        if (other.hasModelType()) {
          setModelType(other.getModelType());
        }
        if (other.hasLinearHLCRGlobalModel()) {
          mergeLinearHLCRGlobalModel(other.getLinearHLCRGlobalModel());
        }
        if (other.hasNNHLCRModel()) {
          mergeNNHLCRModel(other.getNNHLCRModel());
        }
        if (other.hasLinearHLCRTrainInfo()) {
          mergeLinearHLCRTrainInfo(other.getLinearHLCRTrainInfo());
        }
        if (other.hasNNHLCRTrainInfo()) {
          mergeNNHLCRTrainInfo(other.getNNHLCRTrainInfo());
        }
        if (other.hasDataInfo()) {
          mergeDataInfo(other.getDataInfo());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.sony.fl.pb.TaskInfo.ModelType value = com.sony.fl.pb.TaskInfo.ModelType.valueOf(rawValue);
              if (value != null) {
                setModelType(value);
              }
              break;
            }
            case 18: {
              com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder subBuilder = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder();
              if (hasLinearHLCRGlobalModel()) {
                subBuilder.mergeFrom(getLinearHLCRGlobalModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLinearHLCRGlobalModel(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder subBuilder = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder();
              if (hasNNHLCRModel()) {
                subBuilder.mergeFrom(getNNHLCRModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNNHLCRModel(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.Builder subBuilder = com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.newBuilder();
              if (hasLinearHLCRTrainInfo()) {
                subBuilder.mergeFrom(getLinearHLCRTrainInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLinearHLCRTrainInfo(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.Builder subBuilder = com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.newBuilder();
              if (hasNNHLCRTrainInfo()) {
                subBuilder.mergeFrom(getNNHLCRTrainInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNNHLCRTrainInfo(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.sony.fl.pb.TaskInfo.PBDataInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder();
              if (hasDataInfo()) {
                subBuilder.mergeFrom(getDataInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDataInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.sony.fl.pb.ModelType model_type = 1;
      public boolean hasModelType() {
        return result.hasModelType();
      }
      public com.sony.fl.pb.TaskInfo.ModelType getModelType() {
        return result.getModelType();
      }
      public Builder setModelType(com.sony.fl.pb.TaskInfo.ModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasModelType = true;
        result.modelType_ = value;
        return this;
      }
      public Builder clearModelType() {
        result.hasModelType = false;
        result.modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
        return this;
      }
      
      // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
      public boolean hasLinearHLCRGlobalModel() {
        return result.hasLinearHLCRGlobalModel();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() {
        return result.getLinearHLCRGlobalModel();
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = value;
        return this;
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder builderForValue) {
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (result.hasLinearHLCRGlobalModel() &&
            result.linearHLCRGlobalModel_ != com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance()) {
          result.linearHLCRGlobalModel_ =
            com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder(result.linearHLCRGlobalModel_).mergeFrom(value).buildPartial();
        } else {
          result.linearHLCRGlobalModel_ = value;
        }
        result.hasLinearHLCRGlobalModel = true;
        return this;
      }
      public Builder clearLinearHLCRGlobalModel() {
        result.hasLinearHLCRGlobalModel = false;
        result.linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
      public boolean hasNNHLCRModel() {
        return result.hasNNHLCRModel();
      }
      public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() {
        return result.getNNHLCRModel();
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = value;
        return this;
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder builderForValue) {
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (result.hasNNHLCRModel() &&
            result.nNHLCRModel_ != com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance()) {
          result.nNHLCRModel_ =
            com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder(result.nNHLCRModel_).mergeFrom(value).buildPartial();
        } else {
          result.nNHLCRModel_ = value;
        }
        result.hasNNHLCRModel = true;
        return this;
      }
      public Builder clearNNHLCRModel() {
        result.hasNNHLCRModel = false;
        result.nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBLinearHLCRTrainInfo linearHLCR_train_info = 4;
      public boolean hasLinearHLCRTrainInfo() {
        return result.hasLinearHLCRTrainInfo();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo getLinearHLCRTrainInfo() {
        return result.getLinearHLCRTrainInfo();
      }
      public Builder setLinearHLCRTrainInfo(com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLinearHLCRTrainInfo = true;
        result.linearHLCRTrainInfo_ = value;
        return this;
      }
      public Builder setLinearHLCRTrainInfo(com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.Builder builderForValue) {
        result.hasLinearHLCRTrainInfo = true;
        result.linearHLCRTrainInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeLinearHLCRTrainInfo(com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo value) {
        if (result.hasLinearHLCRTrainInfo() &&
            result.linearHLCRTrainInfo_ != com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.getDefaultInstance()) {
          result.linearHLCRTrainInfo_ =
            com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.newBuilder(result.linearHLCRTrainInfo_).mergeFrom(value).buildPartial();
        } else {
          result.linearHLCRTrainInfo_ = value;
        }
        result.hasLinearHLCRTrainInfo = true;
        return this;
      }
      public Builder clearLinearHLCRTrainInfo() {
        result.hasLinearHLCRTrainInfo = false;
        result.linearHLCRTrainInfo_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRTrainInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBNNHLCRTrainInfo NNHLCR_train_info = 5;
      public boolean hasNNHLCRTrainInfo() {
        return result.hasNNHLCRTrainInfo();
      }
      public com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo getNNHLCRTrainInfo() {
        return result.getNNHLCRTrainInfo();
      }
      public Builder setNNHLCRTrainInfo(com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNNHLCRTrainInfo = true;
        result.nNHLCRTrainInfo_ = value;
        return this;
      }
      public Builder setNNHLCRTrainInfo(com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.Builder builderForValue) {
        result.hasNNHLCRTrainInfo = true;
        result.nNHLCRTrainInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeNNHLCRTrainInfo(com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo value) {
        if (result.hasNNHLCRTrainInfo() &&
            result.nNHLCRTrainInfo_ != com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.getDefaultInstance()) {
          result.nNHLCRTrainInfo_ =
            com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.newBuilder(result.nNHLCRTrainInfo_).mergeFrom(value).buildPartial();
        } else {
          result.nNHLCRTrainInfo_ = value;
        }
        result.hasNNHLCRTrainInfo = true;
        return this;
      }
      public Builder clearNNHLCRTrainInfo() {
        result.hasNNHLCRTrainInfo = false;
        result.nNHLCRTrainInfo_ = com.sony.fl.pb.NNHLCR.PBNNHLCRTrainInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBDataInfo data_info = 6;
      public boolean hasDataInfo() {
        return result.hasDataInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() {
        return result.getDataInfo();
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDataInfo = true;
        result.dataInfo_ = value;
        return this;
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo.Builder builderForValue) {
        result.hasDataInfo = true;
        result.dataInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (result.hasDataInfo() &&
            result.dataInfo_ != com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance()) {
          result.dataInfo_ =
            com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder(result.dataInfo_).mergeFrom(value).buildPartial();
        } else {
          result.dataInfo_ = value;
        }
        result.hasDataInfo = true;
        return this;
      }
      public Builder clearDataInfo() {
        result.hasDataInfo = false;
        result.dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBTrainInfo)
    }
    
    static {
      defaultInstance = new PBTrainInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBTrainInfo)
  }
  
  public static final class PBEvaluationInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBEvaluationInfo.newBuilder() to construct.
    private PBEvaluationInfo() {
      initFields();
    }
    private PBEvaluationInfo(boolean noInit) {}
    
    private static final PBEvaluationInfo defaultInstance;
    public static PBEvaluationInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEvaluationInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional .com.sony.fl.pb.ModelType model_type = 1;
    public static final int MODEL_TYPE_FIELD_NUMBER = 1;
    private boolean hasModelType;
    private com.sony.fl.pb.TaskInfo.ModelType modelType_;
    public boolean hasModelType() { return hasModelType; }
    public com.sony.fl.pb.TaskInfo.ModelType getModelType() { return modelType_; }
    
    // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
    public static final int LINEARHLCR_GLOBAL_MODEL_FIELD_NUMBER = 2;
    private boolean hasLinearHLCRGlobalModel;
    private com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel linearHLCRGlobalModel_;
    public boolean hasLinearHLCRGlobalModel() { return hasLinearHLCRGlobalModel; }
    public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() { return linearHLCRGlobalModel_; }
    
    // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
    public static final int NNHLCR_MODEL_FIELD_NUMBER = 3;
    private boolean hasNNHLCRModel;
    private com.sony.fl.pb.NNHLCR.PBNNHLCRModel nNHLCRModel_;
    public boolean hasNNHLCRModel() { return hasNNHLCRModel; }
    public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() { return nNHLCRModel_; }
    
    // optional .com.sony.fl.pb.PBDataInfo data_info = 4;
    public static final int DATA_INFO_FIELD_NUMBER = 4;
    private boolean hasDataInfo;
    private com.sony.fl.pb.TaskInfo.PBDataInfo dataInfo_;
    public boolean hasDataInfo() { return hasDataInfo; }
    public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() { return dataInfo_; }
    
    private void initFields() {
      modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
      linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
      nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
      dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasModelType()) {
        output.writeEnum(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        output.writeMessage(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        output.writeMessage(3, getNNHLCRModel());
      }
      if (hasDataInfo()) {
        output.writeMessage(4, getDataInfo());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasModelType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNNHLCRModel());
      }
      if (hasDataInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDataInfo());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBEvaluationInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBEvaluationInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBEvaluationInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBEvaluationInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBEvaluationInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBEvaluationInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBEvaluationInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBEvaluationInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBEvaluationInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBEvaluationInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBEvaluationInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBEvaluationInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBEvaluationInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBEvaluationInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBEvaluationInfo.getDefaultInstance()) return this;
        if (other.hasModelType()) {
          setModelType(other.getModelType());
        }
        if (other.hasLinearHLCRGlobalModel()) {
          mergeLinearHLCRGlobalModel(other.getLinearHLCRGlobalModel());
        }
        if (other.hasNNHLCRModel()) {
          mergeNNHLCRModel(other.getNNHLCRModel());
        }
        if (other.hasDataInfo()) {
          mergeDataInfo(other.getDataInfo());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.sony.fl.pb.TaskInfo.ModelType value = com.sony.fl.pb.TaskInfo.ModelType.valueOf(rawValue);
              if (value != null) {
                setModelType(value);
              }
              break;
            }
            case 18: {
              com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder subBuilder = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder();
              if (hasLinearHLCRGlobalModel()) {
                subBuilder.mergeFrom(getLinearHLCRGlobalModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLinearHLCRGlobalModel(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder subBuilder = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder();
              if (hasNNHLCRModel()) {
                subBuilder.mergeFrom(getNNHLCRModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNNHLCRModel(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.sony.fl.pb.TaskInfo.PBDataInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder();
              if (hasDataInfo()) {
                subBuilder.mergeFrom(getDataInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDataInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.sony.fl.pb.ModelType model_type = 1;
      public boolean hasModelType() {
        return result.hasModelType();
      }
      public com.sony.fl.pb.TaskInfo.ModelType getModelType() {
        return result.getModelType();
      }
      public Builder setModelType(com.sony.fl.pb.TaskInfo.ModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasModelType = true;
        result.modelType_ = value;
        return this;
      }
      public Builder clearModelType() {
        result.hasModelType = false;
        result.modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
        return this;
      }
      
      // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
      public boolean hasLinearHLCRGlobalModel() {
        return result.hasLinearHLCRGlobalModel();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() {
        return result.getLinearHLCRGlobalModel();
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = value;
        return this;
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder builderForValue) {
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (result.hasLinearHLCRGlobalModel() &&
            result.linearHLCRGlobalModel_ != com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance()) {
          result.linearHLCRGlobalModel_ =
            com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder(result.linearHLCRGlobalModel_).mergeFrom(value).buildPartial();
        } else {
          result.linearHLCRGlobalModel_ = value;
        }
        result.hasLinearHLCRGlobalModel = true;
        return this;
      }
      public Builder clearLinearHLCRGlobalModel() {
        result.hasLinearHLCRGlobalModel = false;
        result.linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
      public boolean hasNNHLCRModel() {
        return result.hasNNHLCRModel();
      }
      public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() {
        return result.getNNHLCRModel();
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = value;
        return this;
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder builderForValue) {
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (result.hasNNHLCRModel() &&
            result.nNHLCRModel_ != com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance()) {
          result.nNHLCRModel_ =
            com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder(result.nNHLCRModel_).mergeFrom(value).buildPartial();
        } else {
          result.nNHLCRModel_ = value;
        }
        result.hasNNHLCRModel = true;
        return this;
      }
      public Builder clearNNHLCRModel() {
        result.hasNNHLCRModel = false;
        result.nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBDataInfo data_info = 4;
      public boolean hasDataInfo() {
        return result.hasDataInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() {
        return result.getDataInfo();
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDataInfo = true;
        result.dataInfo_ = value;
        return this;
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo.Builder builderForValue) {
        result.hasDataInfo = true;
        result.dataInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (result.hasDataInfo() &&
            result.dataInfo_ != com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance()) {
          result.dataInfo_ =
            com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder(result.dataInfo_).mergeFrom(value).buildPartial();
        } else {
          result.dataInfo_ = value;
        }
        result.hasDataInfo = true;
        return this;
      }
      public Builder clearDataInfo() {
        result.hasDataInfo = false;
        result.dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBEvaluationInfo)
    }
    
    static {
      defaultInstance = new PBEvaluationInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBEvaluationInfo)
  }
  
  public static final class PBDeployInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBDeployInfo.newBuilder() to construct.
    private PBDeployInfo() {
      initFields();
    }
    private PBDeployInfo(boolean noInit) {}
    
    private static final PBDeployInfo defaultInstance;
    public static PBDeployInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBDeployInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional .com.sony.fl.pb.ModelType model_type = 1;
    public static final int MODEL_TYPE_FIELD_NUMBER = 1;
    private boolean hasModelType;
    private com.sony.fl.pb.TaskInfo.ModelType modelType_;
    public boolean hasModelType() { return hasModelType; }
    public com.sony.fl.pb.TaskInfo.ModelType getModelType() { return modelType_; }
    
    // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
    public static final int LINEARHLCR_GLOBAL_MODEL_FIELD_NUMBER = 2;
    private boolean hasLinearHLCRGlobalModel;
    private com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel linearHLCRGlobalModel_;
    public boolean hasLinearHLCRGlobalModel() { return hasLinearHLCRGlobalModel; }
    public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() { return linearHLCRGlobalModel_; }
    
    // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
    public static final int NNHLCR_MODEL_FIELD_NUMBER = 3;
    private boolean hasNNHLCRModel;
    private com.sony.fl.pb.NNHLCR.PBNNHLCRModel nNHLCRModel_;
    public boolean hasNNHLCRModel() { return hasNNHLCRModel; }
    public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() { return nNHLCRModel_; }
    
    // optional string app_ID = 4;
    public static final int APP_ID_FIELD_NUMBER = 4;
    private boolean hasAppID;
    private java.lang.String appID_ = "";
    public boolean hasAppID() { return hasAppID; }
    public java.lang.String getAppID() { return appID_; }
    
    // optional .com.sony.fl.pb.PBDataInfo data_info = 5;
    public static final int DATA_INFO_FIELD_NUMBER = 5;
    private boolean hasDataInfo;
    private com.sony.fl.pb.TaskInfo.PBDataInfo dataInfo_;
    public boolean hasDataInfo() { return hasDataInfo; }
    public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() { return dataInfo_; }
    
    private void initFields() {
      modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
      linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
      nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
      dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasModelType()) {
        output.writeEnum(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        output.writeMessage(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        output.writeMessage(3, getNNHLCRModel());
      }
      if (hasAppID()) {
        output.writeString(4, getAppID());
      }
      if (hasDataInfo()) {
        output.writeMessage(5, getDataInfo());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasModelType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getModelType().getNumber());
      }
      if (hasLinearHLCRGlobalModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLinearHLCRGlobalModel());
      }
      if (hasNNHLCRModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNNHLCRModel());
      }
      if (hasAppID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getAppID());
      }
      if (hasDataInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDataInfo());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeployInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBDeployInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBDeployInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBDeployInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBDeployInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBDeployInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBDeployInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBDeployInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBDeployInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBDeployInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBDeployInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBDeployInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBDeployInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBDeployInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBDeployInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBDeployInfo.getDefaultInstance()) return this;
        if (other.hasModelType()) {
          setModelType(other.getModelType());
        }
        if (other.hasLinearHLCRGlobalModel()) {
          mergeLinearHLCRGlobalModel(other.getLinearHLCRGlobalModel());
        }
        if (other.hasNNHLCRModel()) {
          mergeNNHLCRModel(other.getNNHLCRModel());
        }
        if (other.hasAppID()) {
          setAppID(other.getAppID());
        }
        if (other.hasDataInfo()) {
          mergeDataInfo(other.getDataInfo());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.sony.fl.pb.TaskInfo.ModelType value = com.sony.fl.pb.TaskInfo.ModelType.valueOf(rawValue);
              if (value != null) {
                setModelType(value);
              }
              break;
            }
            case 18: {
              com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder subBuilder = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder();
              if (hasLinearHLCRGlobalModel()) {
                subBuilder.mergeFrom(getLinearHLCRGlobalModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLinearHLCRGlobalModel(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder subBuilder = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder();
              if (hasNNHLCRModel()) {
                subBuilder.mergeFrom(getNNHLCRModel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNNHLCRModel(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setAppID(input.readString());
              break;
            }
            case 42: {
              com.sony.fl.pb.TaskInfo.PBDataInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder();
              if (hasDataInfo()) {
                subBuilder.mergeFrom(getDataInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDataInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.sony.fl.pb.ModelType model_type = 1;
      public boolean hasModelType() {
        return result.hasModelType();
      }
      public com.sony.fl.pb.TaskInfo.ModelType getModelType() {
        return result.getModelType();
      }
      public Builder setModelType(com.sony.fl.pb.TaskInfo.ModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasModelType = true;
        result.modelType_ = value;
        return this;
      }
      public Builder clearModelType() {
        result.hasModelType = false;
        result.modelType_ = com.sony.fl.pb.TaskInfo.ModelType.UnknownModelType;
        return this;
      }
      
      // optional .com.sony.fl.pb.PBLinearHLCRGlobalModel linearHLCR_global_model = 2;
      public boolean hasLinearHLCRGlobalModel() {
        return result.hasLinearHLCRGlobalModel();
      }
      public com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel getLinearHLCRGlobalModel() {
        return result.getLinearHLCRGlobalModel();
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = value;
        return this;
      }
      public Builder setLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.Builder builderForValue) {
        result.hasLinearHLCRGlobalModel = true;
        result.linearHLCRGlobalModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeLinearHLCRGlobalModel(com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel value) {
        if (result.hasLinearHLCRGlobalModel() &&
            result.linearHLCRGlobalModel_ != com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance()) {
          result.linearHLCRGlobalModel_ =
            com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.newBuilder(result.linearHLCRGlobalModel_).mergeFrom(value).buildPartial();
        } else {
          result.linearHLCRGlobalModel_ = value;
        }
        result.hasLinearHLCRGlobalModel = true;
        return this;
      }
      public Builder clearLinearHLCRGlobalModel() {
        result.hasLinearHLCRGlobalModel = false;
        result.linearHLCRGlobalModel_ = com.sony.fl.pb.LinearHLCR.PBLinearHLCRGlobalModel.getDefaultInstance();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBNNHLCRModel NNHLCR_model = 3;
      public boolean hasNNHLCRModel() {
        return result.hasNNHLCRModel();
      }
      public com.sony.fl.pb.NNHLCR.PBNNHLCRModel getNNHLCRModel() {
        return result.getNNHLCRModel();
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = value;
        return this;
      }
      public Builder setNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel.Builder builderForValue) {
        result.hasNNHLCRModel = true;
        result.nNHLCRModel_ = builderForValue.build();
        return this;
      }
      public Builder mergeNNHLCRModel(com.sony.fl.pb.NNHLCR.PBNNHLCRModel value) {
        if (result.hasNNHLCRModel() &&
            result.nNHLCRModel_ != com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance()) {
          result.nNHLCRModel_ =
            com.sony.fl.pb.NNHLCR.PBNNHLCRModel.newBuilder(result.nNHLCRModel_).mergeFrom(value).buildPartial();
        } else {
          result.nNHLCRModel_ = value;
        }
        result.hasNNHLCRModel = true;
        return this;
      }
      public Builder clearNNHLCRModel() {
        result.hasNNHLCRModel = false;
        result.nNHLCRModel_ = com.sony.fl.pb.NNHLCR.PBNNHLCRModel.getDefaultInstance();
        return this;
      }
      
      // optional string app_ID = 4;
      public boolean hasAppID() {
        return result.hasAppID();
      }
      public java.lang.String getAppID() {
        return result.getAppID();
      }
      public Builder setAppID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppID = true;
        result.appID_ = value;
        return this;
      }
      public Builder clearAppID() {
        result.hasAppID = false;
        result.appID_ = getDefaultInstance().getAppID();
        return this;
      }
      
      // optional .com.sony.fl.pb.PBDataInfo data_info = 5;
      public boolean hasDataInfo() {
        return result.hasDataInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBDataInfo getDataInfo() {
        return result.getDataInfo();
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDataInfo = true;
        result.dataInfo_ = value;
        return this;
      }
      public Builder setDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo.Builder builderForValue) {
        result.hasDataInfo = true;
        result.dataInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeDataInfo(com.sony.fl.pb.TaskInfo.PBDataInfo value) {
        if (result.hasDataInfo() &&
            result.dataInfo_ != com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance()) {
          result.dataInfo_ =
            com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder(result.dataInfo_).mergeFrom(value).buildPartial();
        } else {
          result.dataInfo_ = value;
        }
        result.hasDataInfo = true;
        return this;
      }
      public Builder clearDataInfo() {
        result.hasDataInfo = false;
        result.dataInfo_ = com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBDeployInfo)
    }
    
    static {
      defaultInstance = new PBDeployInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBDeployInfo)
  }
  
  public static final class PBDeleteInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBDeleteInfo.newBuilder() to construct.
    private PBDeleteInfo() {
      initFields();
    }
    private PBDeleteInfo(boolean noInit) {}
    
    private static final PBDeleteInfo defaultInstance;
    public static PBDeleteInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBDeleteInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDeleteInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBDeleteInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBDeleteInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBDeleteInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBDeleteInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBDeleteInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBDeleteInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBDeleteInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBDeleteInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBDeleteInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBDeleteInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBDeleteInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBDeleteInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBDeleteInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBDeleteInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBDeleteInfo.getDefaultInstance()) return this;
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBDeleteInfo)
    }
    
    static {
      defaultInstance = new PBDeleteInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBDeleteInfo)
  }
  
  public static final class PBStopInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBStopInfo.newBuilder() to construct.
    private PBStopInfo() {
      initFields();
    }
    private PBStopInfo(boolean noInit) {}
    
    private static final PBStopInfo defaultInstance;
    public static PBStopInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBStopInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string app_ID = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppID;
    private java.lang.String appID_ = "";
    public boolean hasAppID() { return hasAppID; }
    public java.lang.String getAppID() { return appID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppID()) {
        output.writeString(1, getAppID());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAppID());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBStopInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBStopInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBStopInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBStopInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBStopInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBStopInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBStopInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBStopInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBStopInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBStopInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBStopInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBStopInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBStopInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBStopInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBStopInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBStopInfo.getDefaultInstance()) return this;
        if (other.hasAppID()) {
          setAppID(other.getAppID());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setAppID(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string app_ID = 1;
      public boolean hasAppID() {
        return result.hasAppID();
      }
      public java.lang.String getAppID() {
        return result.getAppID();
      }
      public Builder setAppID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppID = true;
        result.appID_ = value;
        return this;
      }
      public Builder clearAppID() {
        result.hasAppID = false;
        result.appID_ = getDefaultInstance().getAppID();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBStopInfo)
    }
    
    static {
      defaultInstance = new PBStopInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBStopInfo)
  }
  
  public static final class PBDataInfo extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PBDataInfo.newBuilder() to construct.
    private PBDataInfo() {
      initFields();
    }
    private PBDataInfo(boolean noInit) {}
    
    private static final PBDataInfo defaultInstance;
    public static PBDataInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBDataInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string preprocess_params_file_name = 1;
    public static final int PREPROCESS_PARAMS_FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasPreprocessParamsFileName;
    private java.lang.String preprocessParamsFileName_ = "";
    public boolean hasPreprocessParamsFileName() { return hasPreprocessParamsFileName; }
    public java.lang.String getPreprocessParamsFileName() { return preprocessParamsFileName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPreprocessParamsFileName()) {
        output.writeString(1, getPreprocessParamsFileName());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPreprocessParamsFileName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPreprocessParamsFileName());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sony.fl.pb.TaskInfo.PBDataInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sony.fl.pb.TaskInfo.PBDataInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sony.fl.pb.TaskInfo.PBDataInfo, Builder> {
      private com.sony.fl.pb.TaskInfo.PBDataInfo result;
      
      // Construct using com.sony.fl.pb.TaskInfo.PBDataInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sony.fl.pb.TaskInfo.PBDataInfo();
        return builder;
      }
      
      protected com.sony.fl.pb.TaskInfo.PBDataInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sony.fl.pb.TaskInfo.PBDataInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sony.fl.pb.TaskInfo.PBDataInfo getDefaultInstanceForType() {
        return com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sony.fl.pb.TaskInfo.PBDataInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sony.fl.pb.TaskInfo.PBDataInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sony.fl.pb.TaskInfo.PBDataInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sony.fl.pb.TaskInfo.PBDataInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sony.fl.pb.TaskInfo.PBDataInfo other) {
        if (other == com.sony.fl.pb.TaskInfo.PBDataInfo.getDefaultInstance()) return this;
        if (other.hasPreprocessParamsFileName()) {
          setPreprocessParamsFileName(other.getPreprocessParamsFileName());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setPreprocessParamsFileName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string preprocess_params_file_name = 1;
      public boolean hasPreprocessParamsFileName() {
        return result.hasPreprocessParamsFileName();
      }
      public java.lang.String getPreprocessParamsFileName() {
        return result.getPreprocessParamsFileName();
      }
      public Builder setPreprocessParamsFileName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPreprocessParamsFileName = true;
        result.preprocessParamsFileName_ = value;
        return this;
      }
      public Builder clearPreprocessParamsFileName() {
        result.hasPreprocessParamsFileName = false;
        result.preprocessParamsFileName_ = getDefaultInstance().getPreprocessParamsFileName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.sony.fl.pb.PBDataInfo)
    }
    
    static {
      defaultInstance = new PBDataInfo(true);
      com.sony.fl.pb.TaskInfo.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.sony.fl.pb.PBDataInfo)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
