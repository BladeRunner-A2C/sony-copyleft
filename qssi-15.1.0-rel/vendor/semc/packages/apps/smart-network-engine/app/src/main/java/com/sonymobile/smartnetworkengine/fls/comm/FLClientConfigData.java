// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fl_client_config_data.proto

package com.sonymobile.smartnetworkengine.fls.comm;

public final class FLClientConfigData {
  private FLClientConfigData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class ClientConfigRoot extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ClientConfigRoot.newBuilder() to construct.
    private ClientConfigRoot() {
      initFields();
    }
    private ClientConfigRoot(boolean noInit) {}
    
    private static final ClientConfigRoot defaultInstance;
    public static ClientConfigRoot getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientConfigRoot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .ClientConfig client_configs = 1;
    public static final int CLIENT_CONFIGS_FIELD_NUMBER = 1;
    private java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig> clientConfigs_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig> getClientConfigsList() {
      return clientConfigs_;
    }
    public int getClientConfigsCount() { return clientConfigs_.size(); }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig getClientConfigs(int index) {
      return clientConfigs_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig element : getClientConfigsList()) {
        output.writeMessage(1, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig element : getClientConfigsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.clientConfigs_ != java.util.Collections.EMPTY_LIST) {
          result.clientConfigs_ =
            java.util.Collections.unmodifiableList(result.clientConfigs_);
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfigRoot.getDefaultInstance()) return this;
        if (!other.clientConfigs_.isEmpty()) {
          if (result.clientConfigs_.isEmpty()) {
            result.clientConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig>();
          }
          result.clientConfigs_.addAll(other.clientConfigs_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.Builder subBuilder = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addClientConfigs(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .ClientConfig client_configs = 1;
      public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig> getClientConfigsList() {
        return java.util.Collections.unmodifiableList(result.clientConfigs_);
      }
      public int getClientConfigsCount() {
        return result.getClientConfigsCount();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig getClientConfigs(int index) {
        return result.getClientConfigs(index);
      }
      public Builder setClientConfigs(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.clientConfigs_.set(index, value);
        return this;
      }
      public Builder setClientConfigs(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.Builder builderForValue) {
        result.clientConfigs_.set(index, builderForValue.build());
        return this;
      }
      public Builder addClientConfigs(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.clientConfigs_.isEmpty()) {
          result.clientConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig>();
        }
        result.clientConfigs_.add(value);
        return this;
      }
      public Builder addClientConfigs(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.Builder builderForValue) {
        if (result.clientConfigs_.isEmpty()) {
          result.clientConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig>();
        }
        result.clientConfigs_.add(builderForValue.build());
        return this;
      }
      public Builder addAllClientConfigs(
          java.lang.Iterable<? extends com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig> values) {
        if (result.clientConfigs_.isEmpty()) {
          result.clientConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig>();
        }
        super.addAll(values, result.clientConfigs_);
        return this;
      }
      public Builder clearClientConfigs() {
        result.clientConfigs_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ClientConfigRoot)
    }
    
    static {
      defaultInstance = new ClientConfigRoot(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ClientConfigRoot)
  }
  
  public static final class ClientConfig extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ClientConfig.newBuilder() to construct.
    private ClientConfig() {
      initFields();
    }
    private ClientConfig(boolean noInit) {}
    
    private static final ClientConfig defaultInstance;
    public static ClientConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string configuration_name = 1;
    public static final int CONFIGURATION_NAME_FIELD_NUMBER = 1;
    private boolean hasConfigurationName;
    private java.lang.String configurationName_ = "";
    public boolean hasConfigurationName() { return hasConfigurationName; }
    public java.lang.String getConfigurationName() { return configurationName_; }
    
    // optional .TargetDevice target_device = 2;
    public static final int TARGET_DEVICE_FIELD_NUMBER = 2;
    private boolean hasTargetDevice;
    private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice targetDevice_;
    public boolean hasTargetDevice() { return hasTargetDevice; }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice getTargetDevice() { return targetDevice_; }
    
    // optional .GeneralConfiguration general_configuration = 3;
    public static final int GENERAL_CONFIGURATION_FIELD_NUMBER = 3;
    private boolean hasGeneralConfiguration;
    private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration generalConfiguration_;
    public boolean hasGeneralConfiguration() { return hasGeneralConfiguration; }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration getGeneralConfiguration() { return generalConfiguration_; }
    
    // repeated .AppidSpecificConfig appid_specific_configs = 4;
    public static final int APPID_SPECIFIC_CONFIGS_FIELD_NUMBER = 4;
    private java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig> appidSpecificConfigs_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig> getAppidSpecificConfigsList() {
      return appidSpecificConfigs_;
    }
    public int getAppidSpecificConfigsCount() { return appidSpecificConfigs_.size(); }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig getAppidSpecificConfigs(int index) {
      return appidSpecificConfigs_.get(index);
    }
    
    // repeated .FLTask fl_tasks = 5;
    public static final int FL_TASKS_FIELD_NUMBER = 5;
    private java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask> flTasks_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask> getFlTasksList() {
      return flTasks_;
    }
    public int getFlTasksCount() { return flTasks_.size(); }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask getFlTasks(int index) {
      return flTasks_.get(index);
    }
    
    private void initFields() {
      targetDevice_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.getDefaultInstance();
      generalConfiguration_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasConfigurationName()) {
        output.writeString(1, getConfigurationName());
      }
      if (hasTargetDevice()) {
        output.writeMessage(2, getTargetDevice());
      }
      if (hasGeneralConfiguration()) {
        output.writeMessage(3, getGeneralConfiguration());
      }
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig element : getAppidSpecificConfigsList()) {
        output.writeMessage(4, element);
      }
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask element : getFlTasksList()) {
        output.writeMessage(5, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasConfigurationName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getConfigurationName());
      }
      if (hasTargetDevice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTargetDevice());
      }
      if (hasGeneralConfiguration()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGeneralConfiguration());
      }
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig element : getAppidSpecificConfigsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask element : getFlTasksList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.appidSpecificConfigs_ != java.util.Collections.EMPTY_LIST) {
          result.appidSpecificConfigs_ =
            java.util.Collections.unmodifiableList(result.appidSpecificConfigs_);
        }
        if (result.flTasks_ != java.util.Collections.EMPTY_LIST) {
          result.flTasks_ =
            java.util.Collections.unmodifiableList(result.flTasks_);
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.ClientConfig.getDefaultInstance()) return this;
        if (other.hasConfigurationName()) {
          setConfigurationName(other.getConfigurationName());
        }
        if (other.hasTargetDevice()) {
          mergeTargetDevice(other.getTargetDevice());
        }
        if (other.hasGeneralConfiguration()) {
          mergeGeneralConfiguration(other.getGeneralConfiguration());
        }
        if (!other.appidSpecificConfigs_.isEmpty()) {
          if (result.appidSpecificConfigs_.isEmpty()) {
            result.appidSpecificConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig>();
          }
          result.appidSpecificConfigs_.addAll(other.appidSpecificConfigs_);
        }
        if (!other.flTasks_.isEmpty()) {
          if (result.flTasks_.isEmpty()) {
            result.flTasks_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask>();
          }
          result.flTasks_.addAll(other.flTasks_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setConfigurationName(input.readString());
              break;
            }
            case 18: {
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.Builder subBuilder = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.newBuilder();
              if (hasTargetDevice()) {
                subBuilder.mergeFrom(getTargetDevice());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTargetDevice(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.Builder subBuilder = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.newBuilder();
              if (hasGeneralConfiguration()) {
                subBuilder.mergeFrom(getGeneralConfiguration());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGeneralConfiguration(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.Builder subBuilder = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAppidSpecificConfigs(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.Builder subBuilder = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFlTasks(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string configuration_name = 1;
      public boolean hasConfigurationName() {
        return result.hasConfigurationName();
      }
      public java.lang.String getConfigurationName() {
        return result.getConfigurationName();
      }
      public Builder setConfigurationName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasConfigurationName = true;
        result.configurationName_ = value;
        return this;
      }
      public Builder clearConfigurationName() {
        result.hasConfigurationName = false;
        result.configurationName_ = getDefaultInstance().getConfigurationName();
        return this;
      }
      
      // optional .TargetDevice target_device = 2;
      public boolean hasTargetDevice() {
        return result.hasTargetDevice();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice getTargetDevice() {
        return result.getTargetDevice();
      }
      public Builder setTargetDevice(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetDevice = true;
        result.targetDevice_ = value;
        return this;
      }
      public Builder setTargetDevice(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.Builder builderForValue) {
        result.hasTargetDevice = true;
        result.targetDevice_ = builderForValue.build();
        return this;
      }
      public Builder mergeTargetDevice(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice value) {
        if (result.hasTargetDevice() &&
            result.targetDevice_ != com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.getDefaultInstance()) {
          result.targetDevice_ =
            com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.newBuilder(result.targetDevice_).mergeFrom(value).buildPartial();
        } else {
          result.targetDevice_ = value;
        }
        result.hasTargetDevice = true;
        return this;
      }
      public Builder clearTargetDevice() {
        result.hasTargetDevice = false;
        result.targetDevice_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.getDefaultInstance();
        return this;
      }
      
      // optional .GeneralConfiguration general_configuration = 3;
      public boolean hasGeneralConfiguration() {
        return result.hasGeneralConfiguration();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration getGeneralConfiguration() {
        return result.getGeneralConfiguration();
      }
      public Builder setGeneralConfiguration(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGeneralConfiguration = true;
        result.generalConfiguration_ = value;
        return this;
      }
      public Builder setGeneralConfiguration(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.Builder builderForValue) {
        result.hasGeneralConfiguration = true;
        result.generalConfiguration_ = builderForValue.build();
        return this;
      }
      public Builder mergeGeneralConfiguration(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration value) {
        if (result.hasGeneralConfiguration() &&
            result.generalConfiguration_ != com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.getDefaultInstance()) {
          result.generalConfiguration_ =
            com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.newBuilder(result.generalConfiguration_).mergeFrom(value).buildPartial();
        } else {
          result.generalConfiguration_ = value;
        }
        result.hasGeneralConfiguration = true;
        return this;
      }
      public Builder clearGeneralConfiguration() {
        result.hasGeneralConfiguration = false;
        result.generalConfiguration_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.getDefaultInstance();
        return this;
      }
      
      // repeated .AppidSpecificConfig appid_specific_configs = 4;
      public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig> getAppidSpecificConfigsList() {
        return java.util.Collections.unmodifiableList(result.appidSpecificConfigs_);
      }
      public int getAppidSpecificConfigsCount() {
        return result.getAppidSpecificConfigsCount();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig getAppidSpecificConfigs(int index) {
        return result.getAppidSpecificConfigs(index);
      }
      public Builder setAppidSpecificConfigs(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.appidSpecificConfigs_.set(index, value);
        return this;
      }
      public Builder setAppidSpecificConfigs(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.Builder builderForValue) {
        result.appidSpecificConfigs_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAppidSpecificConfigs(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.appidSpecificConfigs_.isEmpty()) {
          result.appidSpecificConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig>();
        }
        result.appidSpecificConfigs_.add(value);
        return this;
      }
      public Builder addAppidSpecificConfigs(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.Builder builderForValue) {
        if (result.appidSpecificConfigs_.isEmpty()) {
          result.appidSpecificConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig>();
        }
        result.appidSpecificConfigs_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAppidSpecificConfigs(
          java.lang.Iterable<? extends com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig> values) {
        if (result.appidSpecificConfigs_.isEmpty()) {
          result.appidSpecificConfigs_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig>();
        }
        super.addAll(values, result.appidSpecificConfigs_);
        return this;
      }
      public Builder clearAppidSpecificConfigs() {
        result.appidSpecificConfigs_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FLTask fl_tasks = 5;
      public java.util.List<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask> getFlTasksList() {
        return java.util.Collections.unmodifiableList(result.flTasks_);
      }
      public int getFlTasksCount() {
        return result.getFlTasksCount();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask getFlTasks(int index) {
        return result.getFlTasks(index);
      }
      public Builder setFlTasks(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.flTasks_.set(index, value);
        return this;
      }
      public Builder setFlTasks(int index, com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.Builder builderForValue) {
        result.flTasks_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFlTasks(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.flTasks_.isEmpty()) {
          result.flTasks_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask>();
        }
        result.flTasks_.add(value);
        return this;
      }
      public Builder addFlTasks(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.Builder builderForValue) {
        if (result.flTasks_.isEmpty()) {
          result.flTasks_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask>();
        }
        result.flTasks_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFlTasks(
          java.lang.Iterable<? extends com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask> values) {
        if (result.flTasks_.isEmpty()) {
          result.flTasks_ = new java.util.ArrayList<com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask>();
        }
        super.addAll(values, result.flTasks_);
        return this;
      }
      public Builder clearFlTasks() {
        result.flTasks_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ClientConfig)
    }
    
    static {
      defaultInstance = new ClientConfig(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ClientConfig)
  }
  
  public static final class TargetDevice extends
      com.google.protobuf.GeneratedMessageLite {
    // Use TargetDevice.newBuilder() to construct.
    private TargetDevice() {
      initFields();
    }
    private TargetDevice(boolean noInit) {}
    
    private static final TargetDevice defaultInstance;
    public static TargetDevice getDefaultInstance() {
      return defaultInstance;
    }
    
    public TargetDevice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum DeviceType
        implements com.google.protobuf.Internal.EnumLite {
      LIVE(0, 0),
      TEST(1, 1),
      LIVE_AND_TEST(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static DeviceType valueOf(int value) {
        switch (value) {
          case 0: return LIVE;
          case 1: return TEST;
          case 2: return LIVE_AND_TEST;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
              public DeviceType findValueByNumber(int number) {
                return DeviceType.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private DeviceType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:TargetDevice.DeviceType)
    }
    
    // optional string sw_label_regex = 1;
    public static final int SW_LABEL_REGEX_FIELD_NUMBER = 1;
    private boolean hasSwLabelRegex;
    private java.lang.String swLabelRegex_ = "";
    public boolean hasSwLabelRegex() { return hasSwLabelRegex; }
    public java.lang.String getSwLabelRegex() { return swLabelRegex_; }
    
    // optional .TargetDevice.DeviceType device_type = 2;
    public static final int DEVICE_TYPE_FIELD_NUMBER = 2;
    private boolean hasDeviceType;
    private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType deviceType_;
    public boolean hasDeviceType() { return hasDeviceType; }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType getDeviceType() { return deviceType_; }
    
    // repeated string device_ids = 3;
    public static final int DEVICE_IDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> deviceIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getDeviceIdsList() {
      return deviceIds_;
    }
    public int getDeviceIdsCount() { return deviceIds_.size(); }
    public java.lang.String getDeviceIds(int index) {
      return deviceIds_.get(index);
    }
    
    // optional int32 device_ratio = 4;
    public static final int DEVICE_RATIO_FIELD_NUMBER = 4;
    private boolean hasDeviceRatio;
    private int deviceRatio_ = 0;
    public boolean hasDeviceRatio() { return hasDeviceRatio; }
    public int getDeviceRatio() { return deviceRatio_; }
    
    private void initFields() {
      deviceType_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType.LIVE;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSwLabelRegex()) {
        output.writeString(1, getSwLabelRegex());
      }
      if (hasDeviceType()) {
        output.writeEnum(2, getDeviceType().getNumber());
      }
      for (java.lang.String element : getDeviceIdsList()) {
        output.writeString(3, element);
      }
      if (hasDeviceRatio()) {
        output.writeInt32(4, getDeviceRatio());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSwLabelRegex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSwLabelRegex());
      }
      if (hasDeviceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getDeviceType().getNumber());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getDeviceIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getDeviceIdsList().size();
      }
      if (hasDeviceRatio()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getDeviceRatio());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.deviceIds_ != java.util.Collections.EMPTY_LIST) {
          result.deviceIds_ =
            java.util.Collections.unmodifiableList(result.deviceIds_);
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.getDefaultInstance()) return this;
        if (other.hasSwLabelRegex()) {
          setSwLabelRegex(other.getSwLabelRegex());
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (!other.deviceIds_.isEmpty()) {
          if (result.deviceIds_.isEmpty()) {
            result.deviceIds_ = new java.util.ArrayList<java.lang.String>();
          }
          result.deviceIds_.addAll(other.deviceIds_);
        }
        if (other.hasDeviceRatio()) {
          setDeviceRatio(other.getDeviceRatio());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setSwLabelRegex(input.readString());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType value = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType.valueOf(rawValue);
              if (value != null) {
                setDeviceType(value);
              }
              break;
            }
            case 26: {
              addDeviceIds(input.readString());
              break;
            }
            case 32: {
              setDeviceRatio(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string sw_label_regex = 1;
      public boolean hasSwLabelRegex() {
        return result.hasSwLabelRegex();
      }
      public java.lang.String getSwLabelRegex() {
        return result.getSwLabelRegex();
      }
      public Builder setSwLabelRegex(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSwLabelRegex = true;
        result.swLabelRegex_ = value;
        return this;
      }
      public Builder clearSwLabelRegex() {
        result.hasSwLabelRegex = false;
        result.swLabelRegex_ = getDefaultInstance().getSwLabelRegex();
        return this;
      }
      
      // optional .TargetDevice.DeviceType device_type = 2;
      public boolean hasDeviceType() {
        return result.hasDeviceType();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType getDeviceType() {
        return result.getDeviceType();
      }
      public Builder setDeviceType(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDeviceType = true;
        result.deviceType_ = value;
        return this;
      }
      public Builder clearDeviceType() {
        result.hasDeviceType = false;
        result.deviceType_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.TargetDevice.DeviceType.LIVE;
        return this;
      }
      
      // repeated string device_ids = 3;
      public java.util.List<java.lang.String> getDeviceIdsList() {
        return java.util.Collections.unmodifiableList(result.deviceIds_);
      }
      public int getDeviceIdsCount() {
        return result.getDeviceIdsCount();
      }
      public java.lang.String getDeviceIds(int index) {
        return result.getDeviceIds(index);
      }
      public Builder setDeviceIds(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.deviceIds_.set(index, value);
        return this;
      }
      public Builder addDeviceIds(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.deviceIds_.isEmpty()) {
          result.deviceIds_ = new java.util.ArrayList<java.lang.String>();
        }
        result.deviceIds_.add(value);
        return this;
      }
      public Builder addAllDeviceIds(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.deviceIds_.isEmpty()) {
          result.deviceIds_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.deviceIds_);
        return this;
      }
      public Builder clearDeviceIds() {
        result.deviceIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 device_ratio = 4;
      public boolean hasDeviceRatio() {
        return result.hasDeviceRatio();
      }
      public int getDeviceRatio() {
        return result.getDeviceRatio();
      }
      public Builder setDeviceRatio(int value) {
        result.hasDeviceRatio = true;
        result.deviceRatio_ = value;
        return this;
      }
      public Builder clearDeviceRatio() {
        result.hasDeviceRatio = false;
        result.deviceRatio_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetDevice)
    }
    
    static {
      defaultInstance = new TargetDevice(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetDevice)
  }
  
  public static final class GeneralConfiguration extends
      com.google.protobuf.GeneratedMessageLite {
    // Use GeneralConfiguration.newBuilder() to construct.
    private GeneralConfiguration() {
      initFields();
    }
    private GeneralConfiguration(boolean noInit) {}
    
    private static final GeneralConfiguration defaultInstance;
    public static GeneralConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public GeneralConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum OperationMode
        implements com.google.protobuf.Internal.EnumLite {
      NORMAL(0, 1),
      SERVER_ACCESS_ONLY(1, 2),
      ENTIRE_FEATURE_KILLED(2, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static OperationMode valueOf(int value) {
        switch (value) {
          case 1: return NORMAL;
          case 2: return SERVER_ACCESS_ONLY;
          case 3: return ENTIRE_FEATURE_KILLED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<OperationMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<OperationMode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OperationMode>() {
              public OperationMode findValueByNumber(int number) {
                return OperationMode.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private OperationMode(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:GeneralConfiguration.OperationMode)
    }
    
    // optional .GeneralConfiguration.OperationMode operation_mode = 1;
    public static final int OPERATION_MODE_FIELD_NUMBER = 1;
    private boolean hasOperationMode;
    private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode operationMode_;
    public boolean hasOperationMode() { return hasOperationMode; }
    public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode getOperationMode() { return operationMode_; }
    
    // optional int64 client_polling_frequency_mins = 2;
    public static final int CLIENT_POLLING_FREQUENCY_MINS_FIELD_NUMBER = 2;
    private boolean hasClientPollingFrequencyMins;
    private long clientPollingFrequencyMins_ = 0L;
    public boolean hasClientPollingFrequencyMins() { return hasClientPollingFrequencyMins; }
    public long getClientPollingFrequencyMins() { return clientPollingFrequencyMins_; }
    
    // optional int32 uploadable_period_hours = 3;
    public static final int UPLOADABLE_PERIOD_HOURS_FIELD_NUMBER = 3;
    private boolean hasUploadablePeriodHours;
    private int uploadablePeriodHours_ = 0;
    public boolean hasUploadablePeriodHours() { return hasUploadablePeriodHours; }
    public int getUploadablePeriodHours() { return uploadablePeriodHours_; }
    
    private void initFields() {
      operationMode_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode.NORMAL;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOperationMode()) {
        output.writeEnum(1, getOperationMode().getNumber());
      }
      if (hasClientPollingFrequencyMins()) {
        output.writeInt64(2, getClientPollingFrequencyMins());
      }
      if (hasUploadablePeriodHours()) {
        output.writeInt32(3, getUploadablePeriodHours());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOperationMode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getOperationMode().getNumber());
      }
      if (hasClientPollingFrequencyMins()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getClientPollingFrequencyMins());
      }
      if (hasUploadablePeriodHours()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getUploadablePeriodHours());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.getDefaultInstance()) return this;
        if (other.hasOperationMode()) {
          setOperationMode(other.getOperationMode());
        }
        if (other.hasClientPollingFrequencyMins()) {
          setClientPollingFrequencyMins(other.getClientPollingFrequencyMins());
        }
        if (other.hasUploadablePeriodHours()) {
          setUploadablePeriodHours(other.getUploadablePeriodHours());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode value = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode.valueOf(rawValue);
              if (value != null) {
                setOperationMode(value);
              }
              break;
            }
            case 16: {
              setClientPollingFrequencyMins(input.readInt64());
              break;
            }
            case 24: {
              setUploadablePeriodHours(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .GeneralConfiguration.OperationMode operation_mode = 1;
      public boolean hasOperationMode() {
        return result.hasOperationMode();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode getOperationMode() {
        return result.getOperationMode();
      }
      public Builder setOperationMode(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOperationMode = true;
        result.operationMode_ = value;
        return this;
      }
      public Builder clearOperationMode() {
        result.hasOperationMode = false;
        result.operationMode_ = com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.GeneralConfiguration.OperationMode.NORMAL;
        return this;
      }
      
      // optional int64 client_polling_frequency_mins = 2;
      public boolean hasClientPollingFrequencyMins() {
        return result.hasClientPollingFrequencyMins();
      }
      public long getClientPollingFrequencyMins() {
        return result.getClientPollingFrequencyMins();
      }
      public Builder setClientPollingFrequencyMins(long value) {
        result.hasClientPollingFrequencyMins = true;
        result.clientPollingFrequencyMins_ = value;
        return this;
      }
      public Builder clearClientPollingFrequencyMins() {
        result.hasClientPollingFrequencyMins = false;
        result.clientPollingFrequencyMins_ = 0L;
        return this;
      }
      
      // optional int32 uploadable_period_hours = 3;
      public boolean hasUploadablePeriodHours() {
        return result.hasUploadablePeriodHours();
      }
      public int getUploadablePeriodHours() {
        return result.getUploadablePeriodHours();
      }
      public Builder setUploadablePeriodHours(int value) {
        result.hasUploadablePeriodHours = true;
        result.uploadablePeriodHours_ = value;
        return this;
      }
      public Builder clearUploadablePeriodHours() {
        result.hasUploadablePeriodHours = false;
        result.uploadablePeriodHours_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:GeneralConfiguration)
    }
    
    static {
      defaultInstance = new GeneralConfiguration(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GeneralConfiguration)
  }
  
  public static final class AppidSpecificConfig extends
      com.google.protobuf.GeneratedMessageLite {
    // Use AppidSpecificConfig.newBuilder() to construct.
    private AppidSpecificConfig() {
      initFields();
    }
    private AppidSpecificConfig(boolean noInit) {}
    
    private static final AppidSpecificConfig defaultInstance;
    public static AppidSpecificConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppidSpecificConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // optional float inference_threshold = 2;
    public static final int INFERENCE_THRESHOLD_FIELD_NUMBER = 2;
    private boolean hasInferenceThreshold;
    private float inferenceThreshold_ = 0F;
    public boolean hasInferenceThreshold() { return hasInferenceThreshold; }
    public float getInferenceThreshold() { return inferenceThreshold_; }
    
    // optional int32 training_data_collection_ratio = 3;
    public static final int TRAINING_DATA_COLLECTION_RATIO_FIELD_NUMBER = 3;
    private boolean hasTrainingDataCollectionRatio;
    private int trainingDataCollectionRatio_ = 0;
    public boolean hasTrainingDataCollectionRatio() { return hasTrainingDataCollectionRatio; }
    public int getTrainingDataCollectionRatio() { return trainingDataCollectionRatio_; }
    
    // optional int32 max_num_of_training_session = 4;
    public static final int MAX_NUM_OF_TRAINING_SESSION_FIELD_NUMBER = 4;
    private boolean hasMaxNumOfTrainingSession;
    private int maxNumOfTrainingSession_ = 0;
    public boolean hasMaxNumOfTrainingSession() { return hasMaxNumOfTrainingSession; }
    public int getMaxNumOfTrainingSession() { return maxNumOfTrainingSession_; }
    
    // optional int32 max_num_of_training_session_per_bssid = 5;
    public static final int MAX_NUM_OF_TRAINING_SESSION_PER_BSSID_FIELD_NUMBER = 5;
    private boolean hasMaxNumOfTrainingSessionPerBssid;
    private int maxNumOfTrainingSessionPerBssid_ = 0;
    public boolean hasMaxNumOfTrainingSessionPerBssid() { return hasMaxNumOfTrainingSessionPerBssid; }
    public int getMaxNumOfTrainingSessionPerBssid() { return maxNumOfTrainingSessionPerBssid_; }
    
    // optional int32 max_period_days_of_training_session = 6;
    public static final int MAX_PERIOD_DAYS_OF_TRAINING_SESSION_FIELD_NUMBER = 6;
    private boolean hasMaxPeriodDaysOfTrainingSession;
    private int maxPeriodDaysOfTrainingSession_ = 0;
    public boolean hasMaxPeriodDaysOfTrainingSession() { return hasMaxPeriodDaysOfTrainingSession; }
    public int getMaxPeriodDaysOfTrainingSession() { return maxPeriodDaysOfTrainingSession_; }
    
    // optional int32 data_count_threshold = 7;
    public static final int DATA_COUNT_THRESHOLD_FIELD_NUMBER = 7;
    private boolean hasDataCountThreshold;
    private int dataCountThreshold_ = 0;
    public boolean hasDataCountThreshold() { return hasDataCountThreshold; }
    public int getDataCountThreshold() { return dataCountThreshold_; }
    
    // optional int32 periodic_calibration_frequency_days = 8;
    public static final int PERIODIC_CALIBRATION_FREQUENCY_DAYS_FIELD_NUMBER = 8;
    private boolean hasPeriodicCalibrationFrequencyDays;
    private int periodicCalibrationFrequencyDays_ = 0;
    public boolean hasPeriodicCalibrationFrequencyDays() { return hasPeriodicCalibrationFrequencyDays; }
    public int getPeriodicCalibrationFrequencyDays() { return periodicCalibrationFrequencyDays_; }
    
    // optional float positive_label_threshold = 9;
    public static final int POSITIVE_LABEL_THRESHOLD_FIELD_NUMBER = 9;
    private boolean hasPositiveLabelThreshold;
    private float positiveLabelThreshold_ = 0F;
    public boolean hasPositiveLabelThreshold() { return hasPositiveLabelThreshold; }
    public float getPositiveLabelThreshold() { return positiveLabelThreshold_; }
    
    // optional float positive_rate_threshold = 10;
    public static final int POSITIVE_RATE_THRESHOLD_FIELD_NUMBER = 10;
    private boolean hasPositiveRateThreshold;
    private float positiveRateThreshold_ = 0F;
    public boolean hasPositiveRateThreshold() { return hasPositiveRateThreshold; }
    public float getPositiveRateThreshold() { return positiveRateThreshold_; }
    
    // optional bool inference_enabled = 11;
    public static final int INFERENCE_ENABLED_FIELD_NUMBER = 11;
    private boolean hasInferenceEnabled;
    private boolean inferenceEnabled_ = false;
    public boolean hasInferenceEnabled() { return hasInferenceEnabled; }
    public boolean getInferenceEnabled() { return inferenceEnabled_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeString(1, getAppId());
      }
      if (hasInferenceThreshold()) {
        output.writeFloat(2, getInferenceThreshold());
      }
      if (hasTrainingDataCollectionRatio()) {
        output.writeInt32(3, getTrainingDataCollectionRatio());
      }
      if (hasMaxNumOfTrainingSession()) {
        output.writeInt32(4, getMaxNumOfTrainingSession());
      }
      if (hasMaxNumOfTrainingSessionPerBssid()) {
        output.writeInt32(5, getMaxNumOfTrainingSessionPerBssid());
      }
      if (hasMaxPeriodDaysOfTrainingSession()) {
        output.writeInt32(6, getMaxPeriodDaysOfTrainingSession());
      }
      if (hasDataCountThreshold()) {
        output.writeInt32(7, getDataCountThreshold());
      }
      if (hasPeriodicCalibrationFrequencyDays()) {
        output.writeInt32(8, getPeriodicCalibrationFrequencyDays());
      }
      if (hasPositiveLabelThreshold()) {
        output.writeFloat(9, getPositiveLabelThreshold());
      }
      if (hasPositiveRateThreshold()) {
        output.writeFloat(10, getPositiveRateThreshold());
      }
      if (hasInferenceEnabled()) {
        output.writeBool(11, getInferenceEnabled());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAppId());
      }
      if (hasInferenceThreshold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, getInferenceThreshold());
      }
      if (hasTrainingDataCollectionRatio()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getTrainingDataCollectionRatio());
      }
      if (hasMaxNumOfTrainingSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getMaxNumOfTrainingSession());
      }
      if (hasMaxNumOfTrainingSessionPerBssid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getMaxNumOfTrainingSessionPerBssid());
      }
      if (hasMaxPeriodDaysOfTrainingSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getMaxPeriodDaysOfTrainingSession());
      }
      if (hasDataCountThreshold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getDataCountThreshold());
      }
      if (hasPeriodicCalibrationFrequencyDays()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getPeriodicCalibrationFrequencyDays());
      }
      if (hasPositiveLabelThreshold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, getPositiveLabelThreshold());
      }
      if (hasPositiveRateThreshold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getPositiveRateThreshold());
      }
      if (hasInferenceEnabled()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, getInferenceEnabled());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.AppidSpecificConfig.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasInferenceThreshold()) {
          setInferenceThreshold(other.getInferenceThreshold());
        }
        if (other.hasTrainingDataCollectionRatio()) {
          setTrainingDataCollectionRatio(other.getTrainingDataCollectionRatio());
        }
        if (other.hasMaxNumOfTrainingSession()) {
          setMaxNumOfTrainingSession(other.getMaxNumOfTrainingSession());
        }
        if (other.hasMaxNumOfTrainingSessionPerBssid()) {
          setMaxNumOfTrainingSessionPerBssid(other.getMaxNumOfTrainingSessionPerBssid());
        }
        if (other.hasMaxPeriodDaysOfTrainingSession()) {
          setMaxPeriodDaysOfTrainingSession(other.getMaxPeriodDaysOfTrainingSession());
        }
        if (other.hasDataCountThreshold()) {
          setDataCountThreshold(other.getDataCountThreshold());
        }
        if (other.hasPeriodicCalibrationFrequencyDays()) {
          setPeriodicCalibrationFrequencyDays(other.getPeriodicCalibrationFrequencyDays());
        }
        if (other.hasPositiveLabelThreshold()) {
          setPositiveLabelThreshold(other.getPositiveLabelThreshold());
        }
        if (other.hasPositiveRateThreshold()) {
          setPositiveRateThreshold(other.getPositiveRateThreshold());
        }
        if (other.hasInferenceEnabled()) {
          setInferenceEnabled(other.getInferenceEnabled());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setAppId(input.readString());
              break;
            }
            case 21: {
              setInferenceThreshold(input.readFloat());
              break;
            }
            case 24: {
              setTrainingDataCollectionRatio(input.readInt32());
              break;
            }
            case 32: {
              setMaxNumOfTrainingSession(input.readInt32());
              break;
            }
            case 40: {
              setMaxNumOfTrainingSessionPerBssid(input.readInt32());
              break;
            }
            case 48: {
              setMaxPeriodDaysOfTrainingSession(input.readInt32());
              break;
            }
            case 56: {
              setDataCountThreshold(input.readInt32());
              break;
            }
            case 64: {
              setPeriodicCalibrationFrequencyDays(input.readInt32());
              break;
            }
            case 77: {
              setPositiveLabelThreshold(input.readFloat());
              break;
            }
            case 85: {
              setPositiveRateThreshold(input.readFloat());
              break;
            }
            case 88: {
              setInferenceEnabled(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // optional float inference_threshold = 2;
      public boolean hasInferenceThreshold() {
        return result.hasInferenceThreshold();
      }
      public float getInferenceThreshold() {
        return result.getInferenceThreshold();
      }
      public Builder setInferenceThreshold(float value) {
        result.hasInferenceThreshold = true;
        result.inferenceThreshold_ = value;
        return this;
      }
      public Builder clearInferenceThreshold() {
        result.hasInferenceThreshold = false;
        result.inferenceThreshold_ = 0F;
        return this;
      }
      
      // optional int32 training_data_collection_ratio = 3;
      public boolean hasTrainingDataCollectionRatio() {
        return result.hasTrainingDataCollectionRatio();
      }
      public int getTrainingDataCollectionRatio() {
        return result.getTrainingDataCollectionRatio();
      }
      public Builder setTrainingDataCollectionRatio(int value) {
        result.hasTrainingDataCollectionRatio = true;
        result.trainingDataCollectionRatio_ = value;
        return this;
      }
      public Builder clearTrainingDataCollectionRatio() {
        result.hasTrainingDataCollectionRatio = false;
        result.trainingDataCollectionRatio_ = 0;
        return this;
      }
      
      // optional int32 max_num_of_training_session = 4;
      public boolean hasMaxNumOfTrainingSession() {
        return result.hasMaxNumOfTrainingSession();
      }
      public int getMaxNumOfTrainingSession() {
        return result.getMaxNumOfTrainingSession();
      }
      public Builder setMaxNumOfTrainingSession(int value) {
        result.hasMaxNumOfTrainingSession = true;
        result.maxNumOfTrainingSession_ = value;
        return this;
      }
      public Builder clearMaxNumOfTrainingSession() {
        result.hasMaxNumOfTrainingSession = false;
        result.maxNumOfTrainingSession_ = 0;
        return this;
      }
      
      // optional int32 max_num_of_training_session_per_bssid = 5;
      public boolean hasMaxNumOfTrainingSessionPerBssid() {
        return result.hasMaxNumOfTrainingSessionPerBssid();
      }
      public int getMaxNumOfTrainingSessionPerBssid() {
        return result.getMaxNumOfTrainingSessionPerBssid();
      }
      public Builder setMaxNumOfTrainingSessionPerBssid(int value) {
        result.hasMaxNumOfTrainingSessionPerBssid = true;
        result.maxNumOfTrainingSessionPerBssid_ = value;
        return this;
      }
      public Builder clearMaxNumOfTrainingSessionPerBssid() {
        result.hasMaxNumOfTrainingSessionPerBssid = false;
        result.maxNumOfTrainingSessionPerBssid_ = 0;
        return this;
      }
      
      // optional int32 max_period_days_of_training_session = 6;
      public boolean hasMaxPeriodDaysOfTrainingSession() {
        return result.hasMaxPeriodDaysOfTrainingSession();
      }
      public int getMaxPeriodDaysOfTrainingSession() {
        return result.getMaxPeriodDaysOfTrainingSession();
      }
      public Builder setMaxPeriodDaysOfTrainingSession(int value) {
        result.hasMaxPeriodDaysOfTrainingSession = true;
        result.maxPeriodDaysOfTrainingSession_ = value;
        return this;
      }
      public Builder clearMaxPeriodDaysOfTrainingSession() {
        result.hasMaxPeriodDaysOfTrainingSession = false;
        result.maxPeriodDaysOfTrainingSession_ = 0;
        return this;
      }
      
      // optional int32 data_count_threshold = 7;
      public boolean hasDataCountThreshold() {
        return result.hasDataCountThreshold();
      }
      public int getDataCountThreshold() {
        return result.getDataCountThreshold();
      }
      public Builder setDataCountThreshold(int value) {
        result.hasDataCountThreshold = true;
        result.dataCountThreshold_ = value;
        return this;
      }
      public Builder clearDataCountThreshold() {
        result.hasDataCountThreshold = false;
        result.dataCountThreshold_ = 0;
        return this;
      }
      
      // optional int32 periodic_calibration_frequency_days = 8;
      public boolean hasPeriodicCalibrationFrequencyDays() {
        return result.hasPeriodicCalibrationFrequencyDays();
      }
      public int getPeriodicCalibrationFrequencyDays() {
        return result.getPeriodicCalibrationFrequencyDays();
      }
      public Builder setPeriodicCalibrationFrequencyDays(int value) {
        result.hasPeriodicCalibrationFrequencyDays = true;
        result.periodicCalibrationFrequencyDays_ = value;
        return this;
      }
      public Builder clearPeriodicCalibrationFrequencyDays() {
        result.hasPeriodicCalibrationFrequencyDays = false;
        result.periodicCalibrationFrequencyDays_ = 0;
        return this;
      }
      
      // optional float positive_label_threshold = 9;
      public boolean hasPositiveLabelThreshold() {
        return result.hasPositiveLabelThreshold();
      }
      public float getPositiveLabelThreshold() {
        return result.getPositiveLabelThreshold();
      }
      public Builder setPositiveLabelThreshold(float value) {
        result.hasPositiveLabelThreshold = true;
        result.positiveLabelThreshold_ = value;
        return this;
      }
      public Builder clearPositiveLabelThreshold() {
        result.hasPositiveLabelThreshold = false;
        result.positiveLabelThreshold_ = 0F;
        return this;
      }
      
      // optional float positive_rate_threshold = 10;
      public boolean hasPositiveRateThreshold() {
        return result.hasPositiveRateThreshold();
      }
      public float getPositiveRateThreshold() {
        return result.getPositiveRateThreshold();
      }
      public Builder setPositiveRateThreshold(float value) {
        result.hasPositiveRateThreshold = true;
        result.positiveRateThreshold_ = value;
        return this;
      }
      public Builder clearPositiveRateThreshold() {
        result.hasPositiveRateThreshold = false;
        result.positiveRateThreshold_ = 0F;
        return this;
      }
      
      // optional bool inference_enabled = 11;
      public boolean hasInferenceEnabled() {
        return result.hasInferenceEnabled();
      }
      public boolean getInferenceEnabled() {
        return result.getInferenceEnabled();
      }
      public Builder setInferenceEnabled(boolean value) {
        result.hasInferenceEnabled = true;
        result.inferenceEnabled_ = value;
        return this;
      }
      public Builder clearInferenceEnabled() {
        result.hasInferenceEnabled = false;
        result.inferenceEnabled_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AppidSpecificConfig)
    }
    
    static {
      defaultInstance = new AppidSpecificConfig(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AppidSpecificConfig)
  }
  
  public static final class FLTask extends
      com.google.protobuf.GeneratedMessageLite {
    // Use FLTask.newBuilder() to construct.
    private FLTask() {
      initFields();
    }
    private FLTask(boolean noInit) {}
    
    private static final FLTask defaultInstance;
    public static FLTask getDefaultInstance() {
      return defaultInstance;
    }
    
    public FLTask getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional .com.sony.fl.pb.PBTaskInfo task_info = 1;
    public static final int TASK_INFO_FIELD_NUMBER = 1;
    private boolean hasTaskInfo;
    private com.sony.fl.pb.TaskInfo.PBTaskInfo taskInfo_;
    public boolean hasTaskInfo() { return hasTaskInfo; }
    public com.sony.fl.pb.TaskInfo.PBTaskInfo getTaskInfo() { return taskInfo_; }
    
    // optional string task_data_file = 2;
    public static final int TASK_DATA_FILE_FIELD_NUMBER = 2;
    private boolean hasTaskDataFile;
    private java.lang.String taskDataFile_ = "";
    public boolean hasTaskDataFile() { return hasTaskDataFile; }
    public java.lang.String getTaskDataFile() { return taskDataFile_; }
    
    private void initFields() {
      taskInfo_ = com.sony.fl.pb.TaskInfo.PBTaskInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTaskInfo()) {
        output.writeMessage(1, getTaskInfo());
      }
      if (hasTaskDataFile()) {
        output.writeString(2, getTaskDataFile());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTaskInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTaskInfo());
      }
      if (hasTaskDataFile()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTaskDataFile());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask, Builder> {
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask result;
      
      // Construct using com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask();
        return builder;
      }
      
      protected com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask getDefaultInstanceForType() {
        return com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask other) {
        if (other == com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.FLTask.getDefaultInstance()) return this;
        if (other.hasTaskInfo()) {
          mergeTaskInfo(other.getTaskInfo());
        }
        if (other.hasTaskDataFile()) {
          setTaskDataFile(other.getTaskDataFile());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              com.sony.fl.pb.TaskInfo.PBTaskInfo.Builder subBuilder = com.sony.fl.pb.TaskInfo.PBTaskInfo.newBuilder();
              if (hasTaskInfo()) {
                subBuilder.mergeFrom(getTaskInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTaskInfo(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setTaskDataFile(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional .com.sony.fl.pb.PBTaskInfo task_info = 1;
      public boolean hasTaskInfo() {
        return result.hasTaskInfo();
      }
      public com.sony.fl.pb.TaskInfo.PBTaskInfo getTaskInfo() {
        return result.getTaskInfo();
      }
      public Builder setTaskInfo(com.sony.fl.pb.TaskInfo.PBTaskInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTaskInfo = true;
        result.taskInfo_ = value;
        return this;
      }
      public Builder setTaskInfo(com.sony.fl.pb.TaskInfo.PBTaskInfo.Builder builderForValue) {
        result.hasTaskInfo = true;
        result.taskInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeTaskInfo(com.sony.fl.pb.TaskInfo.PBTaskInfo value) {
        if (result.hasTaskInfo() &&
            result.taskInfo_ != com.sony.fl.pb.TaskInfo.PBTaskInfo.getDefaultInstance()) {
          result.taskInfo_ =
            com.sony.fl.pb.TaskInfo.PBTaskInfo.newBuilder(result.taskInfo_).mergeFrom(value).buildPartial();
        } else {
          result.taskInfo_ = value;
        }
        result.hasTaskInfo = true;
        return this;
      }
      public Builder clearTaskInfo() {
        result.hasTaskInfo = false;
        result.taskInfo_ = com.sony.fl.pb.TaskInfo.PBTaskInfo.getDefaultInstance();
        return this;
      }
      
      // optional string task_data_file = 2;
      public boolean hasTaskDataFile() {
        return result.hasTaskDataFile();
      }
      public java.lang.String getTaskDataFile() {
        return result.getTaskDataFile();
      }
      public Builder setTaskDataFile(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTaskDataFile = true;
        result.taskDataFile_ = value;
        return this;
      }
      public Builder clearTaskDataFile() {
        result.hasTaskDataFile = false;
        result.taskDataFile_ = getDefaultInstance().getTaskDataFile();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FLTask)
    }
    
    static {
      defaultInstance = new FLTask(true);
      com.sonymobile.smartnetworkengine.fls.comm.FLClientConfigData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FLTask)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
