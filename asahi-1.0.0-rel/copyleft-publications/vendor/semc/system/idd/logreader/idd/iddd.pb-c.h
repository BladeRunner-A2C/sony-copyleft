/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_idd_2fiddd_2eproto__INCLUDED
#define PROTOBUF_C_idd_2fiddd_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Iddd__Settings Iddd__Settings;
typedef struct _Iddd__RunActions Iddd__RunActions;
typedef struct _Iddd__RunActionsOnce Iddd__RunActionsOnce;


/* --- enums --- */

typedef enum _Iddd__PluginId {
  IDDD__PLUGIN_ID__IDD = 0,
  IDDD__PLUGIN_ID__XD = 1,
  IDDD__PLUGIN_ID__RCA = 2
} Iddd__PluginId;

/* --- messages --- */

struct  _Iddd__Settings
{
  ProtobufCMessage base;
  protobuf_c_boolean has_max_report_size;
  uint32_t max_report_size;
  protobuf_c_boolean has_max_output_dir_size;
  uint32_t max_output_dir_size;
  protobuf_c_boolean has_permanently_disable;
  protobuf_c_boolean permanently_disable;
  protobuf_c_boolean has_expire_counters_age;
  uint32_t expire_counters_age;
  protobuf_c_boolean has_expire_sdata_age;
  uint32_t expire_sdata_age;
  char *study;
};
#define IDDD__SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iddd__settings__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, NULL }


struct  _Iddd__RunActions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_run_log_reader;
  protobuf_c_boolean run_log_reader;
  protobuf_c_boolean has_activate_xperia_diagnostics;
  protobuf_c_boolean activate_xperia_diagnostics;
};
#define IDDD__RUN_ACTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iddd__run_actions__descriptor) \
    , 0,0, 0,0 }


struct  _Iddd__RunActionsOnce
{
  ProtobufCMessage base;
  protobuf_c_boolean has_remove_reports;
  protobuf_c_boolean remove_reports;
};
#define IDDD__RUN_ACTIONS_ONCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iddd__run_actions_once__descriptor) \
    , 0,0 }


/* Iddd__Settings methods */
void   iddd__settings__init
                     (Iddd__Settings         *message);
size_t iddd__settings__get_packed_size
                     (const Iddd__Settings   *message);
size_t iddd__settings__pack
                     (const Iddd__Settings   *message,
                      uint8_t             *out);
size_t iddd__settings__pack_to_buffer
                     (const Iddd__Settings   *message,
                      ProtobufCBuffer     *buffer);
Iddd__Settings *
       iddd__settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iddd__settings__free_unpacked
                     (Iddd__Settings *message,
                      ProtobufCAllocator *allocator);
/* Iddd__RunActions methods */
void   iddd__run_actions__init
                     (Iddd__RunActions         *message);
size_t iddd__run_actions__get_packed_size
                     (const Iddd__RunActions   *message);
size_t iddd__run_actions__pack
                     (const Iddd__RunActions   *message,
                      uint8_t             *out);
size_t iddd__run_actions__pack_to_buffer
                     (const Iddd__RunActions   *message,
                      ProtobufCBuffer     *buffer);
Iddd__RunActions *
       iddd__run_actions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iddd__run_actions__free_unpacked
                     (Iddd__RunActions *message,
                      ProtobufCAllocator *allocator);
/* Iddd__RunActionsOnce methods */
void   iddd__run_actions_once__init
                     (Iddd__RunActionsOnce         *message);
size_t iddd__run_actions_once__get_packed_size
                     (const Iddd__RunActionsOnce   *message);
size_t iddd__run_actions_once__pack
                     (const Iddd__RunActionsOnce   *message,
                      uint8_t             *out);
size_t iddd__run_actions_once__pack_to_buffer
                     (const Iddd__RunActionsOnce   *message,
                      ProtobufCBuffer     *buffer);
Iddd__RunActionsOnce *
       iddd__run_actions_once__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iddd__run_actions_once__free_unpacked
                     (Iddd__RunActionsOnce *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iddd__Settings_Closure)
                 (const Iddd__Settings *message,
                  void *closure_data);
typedef void (*Iddd__RunActions_Closure)
                 (const Iddd__RunActions *message,
                  void *closure_data);
typedef void (*Iddd__RunActionsOnce_Closure)
                 (const Iddd__RunActionsOnce *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iddd__plugin_id__descriptor;
extern const ProtobufCMessageDescriptor iddd__settings__descriptor;
extern const ProtobufCMessageDescriptor iddd__run_actions__descriptor;
extern const ProtobufCMessageDescriptor iddd__run_actions_once__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_idd_2fiddd_2eproto__INCLUDED */
