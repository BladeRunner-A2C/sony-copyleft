/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_idd_2fagent_2eproto__INCLUDED
#define PROTOBUF_C_idd_2fagent_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Idd__Upload Idd__Upload;
typedef struct _Idd__AgentConfig Idd__AgentConfig;
typedef struct _Idd__AgentConfig__Server Idd__AgentConfig__Server;
typedef struct _Idd__File Idd__File;
typedef struct _Idd__FileSet Idd__FileSet;


/* --- enums --- */

typedef enum _Idd__Upload__Status {
  IDD__UPLOAD__STATUS__STATUS_OK = 0,
  IDD__UPLOAD__STATUS__ROAMING = 1,
  IDD__UPLOAD__STATUS__MAX_LIMIT = 2,
  IDD__UPLOAD__STATUS__USER_ABORT = 3,
  IDD__UPLOAD__STATUS__NETWORK_ERROR = 4,
  IDD__UPLOAD__STATUS__UPLOAD_UNAVAILABLE = 5,
  IDD__UPLOAD__STATUS__UPLOAD_DISABLED = 6,
  IDD__UPLOAD__STATUS__BACKGROUND_DATA_DISABLED = 7,
  IDD__UPLOAD__STATUS__UPLOAD_LIMIT_ZERO = 8,
  IDD__UPLOAD__STATUS__WIFIONLY_NO_WIFI = 9
} Idd__Upload__Status;

/* --- messages --- */

struct  _Idd__Upload
{
  ProtobufCMessage base;
  Idd__Upload__Status status;
  protobuf_c_boolean has_data_size;
  int32_t data_size;
  protobuf_c_boolean has_number_of_files;
  int32_t number_of_files;
  protobuf_c_boolean has_transfer_time;
  int64_t transfer_time;
};
#define IDD__UPLOAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__upload__descriptor) \
    , 0, 0,0, 0,0, 0,0 }


struct  _Idd__AgentConfig__Server
{
  ProtobufCMessage base;
  char *url;
};
#define IDD__AGENT_CONFIG__SERVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__agent_config__server__descriptor) \
    , NULL }


struct  _Idd__AgentConfig
{
  ProtobufCMessage base;
  size_t n_report_servers;
  Idd__AgentConfig__Server **report_servers;
  size_t n_config_servers;
  Idd__AgentConfig__Server **config_servers;
  protobuf_c_boolean has_report_period;
  uint32_t report_period;
  protobuf_c_boolean has_report_max_size;
  uint32_t report_max_size;
  protobuf_c_boolean has_config_period;
  uint32_t config_period;
  size_t n_download_servers;
  Idd__AgentConfig__Server **download_servers;
  size_t n_gatekeeper_servers;
  Idd__AgentConfig__Server **gatekeeper_servers;
};
#define IDD__AGENT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__agent_config__descriptor) \
    , 0,NULL, 0,NULL, 0,86400, 0,1048576, 0,86400, 0,NULL, 0,NULL }


struct  _Idd__File
{
  ProtobufCMessage base;
  char *file_path;
  protobuf_c_boolean has_crc32;
  int32_t crc32;
  char *uuid;
  protobuf_c_boolean has_file_size;
  uint64_t file_size;
};
#define IDD__FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__file__descriptor) \
    , NULL, 0,0, NULL, 0,0 }


struct  _Idd__FileSet
{
  ProtobufCMessage base;
  size_t n_files;
  Idd__File **files;
  char *sender_package;
  char *sender_name;
};
#define IDD__FILE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__file_set__descriptor) \
    , 0,NULL, NULL, NULL }


/* Idd__Upload methods */
void   idd__upload__init
                     (Idd__Upload         *message);
size_t idd__upload__get_packed_size
                     (const Idd__Upload   *message);
size_t idd__upload__pack
                     (const Idd__Upload   *message,
                      uint8_t             *out);
size_t idd__upload__pack_to_buffer
                     (const Idd__Upload   *message,
                      ProtobufCBuffer     *buffer);
Idd__Upload *
       idd__upload__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__upload__free_unpacked
                     (Idd__Upload *message,
                      ProtobufCAllocator *allocator);
/* Idd__AgentConfig__Server methods */
void   idd__agent_config__server__init
                     (Idd__AgentConfig__Server         *message);
/* Idd__AgentConfig methods */
void   idd__agent_config__init
                     (Idd__AgentConfig         *message);
size_t idd__agent_config__get_packed_size
                     (const Idd__AgentConfig   *message);
size_t idd__agent_config__pack
                     (const Idd__AgentConfig   *message,
                      uint8_t             *out);
size_t idd__agent_config__pack_to_buffer
                     (const Idd__AgentConfig   *message,
                      ProtobufCBuffer     *buffer);
Idd__AgentConfig *
       idd__agent_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__agent_config__free_unpacked
                     (Idd__AgentConfig *message,
                      ProtobufCAllocator *allocator);
/* Idd__File methods */
void   idd__file__init
                     (Idd__File         *message);
size_t idd__file__get_packed_size
                     (const Idd__File   *message);
size_t idd__file__pack
                     (const Idd__File   *message,
                      uint8_t             *out);
size_t idd__file__pack_to_buffer
                     (const Idd__File   *message,
                      ProtobufCBuffer     *buffer);
Idd__File *
       idd__file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__file__free_unpacked
                     (Idd__File *message,
                      ProtobufCAllocator *allocator);
/* Idd__FileSet methods */
void   idd__file_set__init
                     (Idd__FileSet         *message);
size_t idd__file_set__get_packed_size
                     (const Idd__FileSet   *message);
size_t idd__file_set__pack
                     (const Idd__FileSet   *message,
                      uint8_t             *out);
size_t idd__file_set__pack_to_buffer
                     (const Idd__FileSet   *message,
                      ProtobufCBuffer     *buffer);
Idd__FileSet *
       idd__file_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__file_set__free_unpacked
                     (Idd__FileSet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Idd__Upload_Closure)
                 (const Idd__Upload *message,
                  void *closure_data);
typedef void (*Idd__AgentConfig__Server_Closure)
                 (const Idd__AgentConfig__Server *message,
                  void *closure_data);
typedef void (*Idd__AgentConfig_Closure)
                 (const Idd__AgentConfig *message,
                  void *closure_data);
typedef void (*Idd__File_Closure)
                 (const Idd__File *message,
                  void *closure_data);
typedef void (*Idd__FileSet_Closure)
                 (const Idd__FileSet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor idd__upload__descriptor;
extern const ProtobufCEnumDescriptor    idd__upload__status__descriptor;
extern const ProtobufCMessageDescriptor idd__agent_config__descriptor;
extern const ProtobufCMessageDescriptor idd__agent_config__server__descriptor;
extern const ProtobufCMessageDescriptor idd__file__descriptor;
extern const ProtobufCMessageDescriptor idd__file_set__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_idd_2fagent_2eproto__INCLUDED */
