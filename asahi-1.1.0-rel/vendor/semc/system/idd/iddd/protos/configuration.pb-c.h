/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_configuration_2eproto__INCLUDED
#define PROTOBUF_C_configuration_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "common.pb-c.h"

typedef struct _Idd__Config__ConfigRequest Idd__Config__ConfigRequest;
typedef struct _Idd__Config__ConfigPart Idd__Config__ConfigPart;
typedef struct _Idd__Config__ConfigPackage Idd__Config__ConfigPackage;
typedef struct _Idd__Config__ConfigResponse Idd__Config__ConfigResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Idd__Config__ConfigRequest
{
  ProtobufCMessage base;
  Idd__Header *header;
  protobuf_c_boolean has_current_config;
  ProtobufCBinaryData current_config;
  char *device_id;
};
#define IDD__CONFIG__CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__config__config_request__descriptor) \
    , NULL, 0,{0,NULL}, NULL }


struct  _Idd__Config__ConfigPart
{
  ProtobufCMessage base;
  char *package;
  char *name;
  ProtobufCBinaryData payload;
};
#define IDD__CONFIG__CONFIG_PART__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__config__config_part__descriptor) \
    , NULL, NULL, {0,NULL} }


struct  _Idd__Config__ConfigPackage
{
  ProtobufCMessage base;
  size_t n_parts;
  Idd__Config__ConfigPart **parts;
};
#define IDD__CONFIG__CONFIG_PACKAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__config__config_package__descriptor) \
    , 0,NULL }


struct  _Idd__Config__ConfigResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_signature;
  ProtobufCBinaryData signature;
  protobuf_c_boolean has_compressed_data;
  ProtobufCBinaryData compressed_data;
};
#define IDD__CONFIG__CONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__config__config_response__descriptor) \
    , 0,{0,NULL}, 0,{0,NULL} }


/* Idd__Config__ConfigRequest methods */
void   idd__config__config_request__init
                     (Idd__Config__ConfigRequest         *message);
size_t idd__config__config_request__get_packed_size
                     (const Idd__Config__ConfigRequest   *message);
size_t idd__config__config_request__pack
                     (const Idd__Config__ConfigRequest   *message,
                      uint8_t             *out);
size_t idd__config__config_request__pack_to_buffer
                     (const Idd__Config__ConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Idd__Config__ConfigRequest *
       idd__config__config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__config__config_request__free_unpacked
                     (Idd__Config__ConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Idd__Config__ConfigPart methods */
void   idd__config__config_part__init
                     (Idd__Config__ConfigPart         *message);
size_t idd__config__config_part__get_packed_size
                     (const Idd__Config__ConfigPart   *message);
size_t idd__config__config_part__pack
                     (const Idd__Config__ConfigPart   *message,
                      uint8_t             *out);
size_t idd__config__config_part__pack_to_buffer
                     (const Idd__Config__ConfigPart   *message,
                      ProtobufCBuffer     *buffer);
Idd__Config__ConfigPart *
       idd__config__config_part__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__config__config_part__free_unpacked
                     (Idd__Config__ConfigPart *message,
                      ProtobufCAllocator *allocator);
/* Idd__Config__ConfigPackage methods */
void   idd__config__config_package__init
                     (Idd__Config__ConfigPackage         *message);
size_t idd__config__config_package__get_packed_size
                     (const Idd__Config__ConfigPackage   *message);
size_t idd__config__config_package__pack
                     (const Idd__Config__ConfigPackage   *message,
                      uint8_t             *out);
size_t idd__config__config_package__pack_to_buffer
                     (const Idd__Config__ConfigPackage   *message,
                      ProtobufCBuffer     *buffer);
Idd__Config__ConfigPackage *
       idd__config__config_package__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__config__config_package__free_unpacked
                     (Idd__Config__ConfigPackage *message,
                      ProtobufCAllocator *allocator);
/* Idd__Config__ConfigResponse methods */
void   idd__config__config_response__init
                     (Idd__Config__ConfigResponse         *message);
size_t idd__config__config_response__get_packed_size
                     (const Idd__Config__ConfigResponse   *message);
size_t idd__config__config_response__pack
                     (const Idd__Config__ConfigResponse   *message,
                      uint8_t             *out);
size_t idd__config__config_response__pack_to_buffer
                     (const Idd__Config__ConfigResponse   *message,
                      ProtobufCBuffer     *buffer);
Idd__Config__ConfigResponse *
       idd__config__config_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__config__config_response__free_unpacked
                     (Idd__Config__ConfigResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Idd__Config__ConfigRequest_Closure)
                 (const Idd__Config__ConfigRequest *message,
                  void *closure_data);
typedef void (*Idd__Config__ConfigPart_Closure)
                 (const Idd__Config__ConfigPart *message,
                  void *closure_data);
typedef void (*Idd__Config__ConfigPackage_Closure)
                 (const Idd__Config__ConfigPackage *message,
                  void *closure_data);
typedef void (*Idd__Config__ConfigResponse_Closure)
                 (const Idd__Config__ConfigResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor idd__config__config_request__descriptor;
extern const ProtobufCMessageDescriptor idd__config__config_part__descriptor;
extern const ProtobufCMessageDescriptor idd__config__config_package__descriptor;
extern const ProtobufCMessageDescriptor idd__config__config_response__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_configuration_2eproto__INCLUDED */
