/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_idd_2flogreader_2eproto__INCLUDED
#define PROTOBUF_C_idd_2flogreader_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Idd__Logreader__LogReaderError Idd__Logreader__LogReaderError;
typedef struct _Idd__Logreader__CntLogReaderError Idd__Logreader__CntLogReaderError;


/* --- enums --- */


/* --- messages --- */

struct  _Idd__Logreader__LogReaderError
{
  ProtobufCMessage base;
  char *log;
  protobuf_c_boolean has_flooding;
  protobuf_c_boolean flooding;
};
#define IDD__LOGREADER__LOG_READER_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__logreader__log_reader_error__descriptor) \
    , NULL, 0,0 }


struct  _Idd__Logreader__CntLogReaderError
{
  ProtobufCMessage base;
};
#define IDD__LOGREADER__CNT__LOG_READER_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__logreader__cnt__log_reader_error__descriptor) \
     }


/* Idd__Logreader__LogReaderError methods */
void   idd__logreader__log_reader_error__init
                     (Idd__Logreader__LogReaderError         *message);
size_t idd__logreader__log_reader_error__get_packed_size
                     (const Idd__Logreader__LogReaderError   *message);
size_t idd__logreader__log_reader_error__pack
                     (const Idd__Logreader__LogReaderError   *message,
                      uint8_t             *out);
size_t idd__logreader__log_reader_error__pack_to_buffer
                     (const Idd__Logreader__LogReaderError   *message,
                      ProtobufCBuffer     *buffer);
Idd__Logreader__LogReaderError *
       idd__logreader__log_reader_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__logreader__log_reader_error__free_unpacked
                     (Idd__Logreader__LogReaderError *message,
                      ProtobufCAllocator *allocator);
/* Idd__Logreader__CntLogReaderError methods */
void   idd__logreader__cnt__log_reader_error__init
                     (Idd__Logreader__CntLogReaderError         *message);
size_t idd__logreader__cnt__log_reader_error__get_packed_size
                     (const Idd__Logreader__CntLogReaderError   *message);
size_t idd__logreader__cnt__log_reader_error__pack
                     (const Idd__Logreader__CntLogReaderError   *message,
                      uint8_t             *out);
size_t idd__logreader__cnt__log_reader_error__pack_to_buffer
                     (const Idd__Logreader__CntLogReaderError   *message,
                      ProtobufCBuffer     *buffer);
Idd__Logreader__CntLogReaderError *
       idd__logreader__cnt__log_reader_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__logreader__cnt__log_reader_error__free_unpacked
                     (Idd__Logreader__CntLogReaderError *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Idd__Logreader__LogReaderError_Closure)
                 (const Idd__Logreader__LogReaderError *message,
                  void *closure_data);
typedef void (*Idd__Logreader__CntLogReaderError_Closure)
                 (const Idd__Logreader__CntLogReaderError *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor idd__logreader__log_reader_error__descriptor;
extern const ProtobufCMessageDescriptor idd__logreader__cnt__log_reader_error__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_idd_2flogreader_2eproto__INCLUDED */
