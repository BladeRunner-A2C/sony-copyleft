/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_memory_2fmemory_2eproto__INCLUDED
#define PROTOBUF_C_memory_2fmemory_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Memory__FlashUsage Memory__FlashUsage;
typedef struct _Memory__Yaffs Memory__Yaffs;
typedef struct _Memory__DiscWrite Memory__DiscWrite;
typedef struct _Memory__EmmcCID Memory__EmmcCID;
typedef struct _Memory__EmmcCSD Memory__EmmcCSD;
typedef struct _Memory__EmmcRevision Memory__EmmcRevision;
typedef struct _Memory__EmmcExtCSD Memory__EmmcExtCSD;
typedef struct _Memory__DDR Memory__DDR;
typedef struct _Memory__SDCardInfo Memory__SDCardInfo;
typedef struct _Memory__UFSInfo Memory__UFSInfo;


/* --- enums --- */

typedef enum _Memory__UFSInfo__DeviceLifeTimeEst {
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__NO_INFORMATION = 0,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_0_10_PCT = 1,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_10_20_PCT = 2,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_20_30_PCT = 3,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_30_40_PCT = 4,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_40_50_PCT = 5,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_50_60_PCT = 6,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_60_70_PCT = 7,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_70_80_PCT = 8,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_80_90_PCT = 9,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__USED_90_100_PCT = 10,
  MEMORY__UFSINFO__DEVICE_LIFE_TIME_EST__EXCEEDED = 11
} Memory__UFSInfo__DeviceLifeTimeEst;

/* --- messages --- */

struct  _Memory__FlashUsage
{
  ProtobufCMessage base;
  int32_t total_internal;
  int32_t available_internal;
  protobuf_c_boolean has_total_sdcard;
  int32_t total_sdcard;
  protobuf_c_boolean has_available_sdcard;
  int32_t available_sdcard;
  protobuf_c_boolean has_total_usb;
  int32_t total_usb;
  protobuf_c_boolean has_available_usb;
  int32_t available_usb;
  protobuf_c_boolean has_total_emmc;
  int32_t total_emmc;
  protobuf_c_boolean has_available_emmc;
  int32_t available_emmc;
  protobuf_c_boolean has_total_system;
  int32_t total_system;
  protobuf_c_boolean has_available_system;
  int32_t available_system;
};
#define MEMORY__FLASH_USAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__flash_usage__descriptor) \
    , 0, 0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _Memory__Yaffs
{
  ProtobufCMessage base;
  char *content;
  protobuf_c_boolean has_elapsed_time;
  int64_t elapsed_time;
  protobuf_c_boolean has_truncated;
  protobuf_c_boolean truncated;
};
#define MEMORY__YAFFS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__yaffs__descriptor) \
    , NULL, 0,0, 0,0 }


struct  _Memory__DiscWrite
{
  ProtobufCMessage base;
  char *application;
  int32_t pid;
  int64_t writebytes;
  protobuf_c_boolean has_uptime_millis;
  int64_t uptime_millis;
  protobuf_c_boolean has_elapsed_realtime;
  int64_t elapsed_realtime;
};
#define MEMORY__DISC_WRITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__disc_write__descriptor) \
    , NULL, 0, 0, 0,0, 0,0 }


struct  _Memory__EmmcCID
{
  ProtobufCMessage base;
};
#define MEMORY__EMMC_CID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__emmc_cid__descriptor) \
     }


struct  _Memory__EmmcCSD
{
  ProtobufCMessage base;
};
#define MEMORY__EMMC_CSD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__emmc_csd__descriptor) \
     }


struct  _Memory__EmmcRevision
{
  ProtobufCMessage base;
};
#define MEMORY__EMMC_REVISION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__emmc_revision__descriptor) \
     }


struct  _Memory__EmmcExtCSD
{
  ProtobufCMessage base;
  char *csd_revision;
  char *firmware_version;
  char *device_life_time_est_type_a;
  char *device_life_time_est_type_b;
  char *vendor_proprietary_health_report;
};
#define MEMORY__EMMC_EXT_CSD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__emmc_ext_csd__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _Memory__DDR
{
  ProtobufCMessage base;
};
#define MEMORY__DDR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__ddr__descriptor) \
     }


struct  _Memory__SDCardInfo
{
  ProtobufCMessage base;
  char *cid;
  char *csd;
  char *scr;
};
#define MEMORY__SDCARD_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__sdcard_info__descriptor) \
    , NULL, NULL, NULL }


struct  _Memory__UFSInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_vendor;
  uint32_t vendor;
  char *model;
  char *rev;
  protobuf_c_boolean has_device_life_time_est_type_a;
  Memory__UFSInfo__DeviceLifeTimeEst device_life_time_est_type_a;
  protobuf_c_boolean has_device_life_time_est_type_b;
  Memory__UFSInfo__DeviceLifeTimeEst device_life_time_est_type_b;
  char *vendor_proprietary_health_report;
};
#define MEMORY__UFSINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memory__ufsinfo__descriptor) \
    , 0,0, NULL, NULL, 0,0, 0,0, NULL }


/* Memory__FlashUsage methods */
void   memory__flash_usage__init
                     (Memory__FlashUsage         *message);
size_t memory__flash_usage__get_packed_size
                     (const Memory__FlashUsage   *message);
size_t memory__flash_usage__pack
                     (const Memory__FlashUsage   *message,
                      uint8_t             *out);
size_t memory__flash_usage__pack_to_buffer
                     (const Memory__FlashUsage   *message,
                      ProtobufCBuffer     *buffer);
Memory__FlashUsage *
       memory__flash_usage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__flash_usage__free_unpacked
                     (Memory__FlashUsage *message,
                      ProtobufCAllocator *allocator);
/* Memory__Yaffs methods */
void   memory__yaffs__init
                     (Memory__Yaffs         *message);
size_t memory__yaffs__get_packed_size
                     (const Memory__Yaffs   *message);
size_t memory__yaffs__pack
                     (const Memory__Yaffs   *message,
                      uint8_t             *out);
size_t memory__yaffs__pack_to_buffer
                     (const Memory__Yaffs   *message,
                      ProtobufCBuffer     *buffer);
Memory__Yaffs *
       memory__yaffs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__yaffs__free_unpacked
                     (Memory__Yaffs *message,
                      ProtobufCAllocator *allocator);
/* Memory__DiscWrite methods */
void   memory__disc_write__init
                     (Memory__DiscWrite         *message);
size_t memory__disc_write__get_packed_size
                     (const Memory__DiscWrite   *message);
size_t memory__disc_write__pack
                     (const Memory__DiscWrite   *message,
                      uint8_t             *out);
size_t memory__disc_write__pack_to_buffer
                     (const Memory__DiscWrite   *message,
                      ProtobufCBuffer     *buffer);
Memory__DiscWrite *
       memory__disc_write__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__disc_write__free_unpacked
                     (Memory__DiscWrite *message,
                      ProtobufCAllocator *allocator);
/* Memory__EmmcCID methods */
void   memory__emmc_cid__init
                     (Memory__EmmcCID         *message);
size_t memory__emmc_cid__get_packed_size
                     (const Memory__EmmcCID   *message);
size_t memory__emmc_cid__pack
                     (const Memory__EmmcCID   *message,
                      uint8_t             *out);
size_t memory__emmc_cid__pack_to_buffer
                     (const Memory__EmmcCID   *message,
                      ProtobufCBuffer     *buffer);
Memory__EmmcCID *
       memory__emmc_cid__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__emmc_cid__free_unpacked
                     (Memory__EmmcCID *message,
                      ProtobufCAllocator *allocator);
/* Memory__EmmcCSD methods */
void   memory__emmc_csd__init
                     (Memory__EmmcCSD         *message);
size_t memory__emmc_csd__get_packed_size
                     (const Memory__EmmcCSD   *message);
size_t memory__emmc_csd__pack
                     (const Memory__EmmcCSD   *message,
                      uint8_t             *out);
size_t memory__emmc_csd__pack_to_buffer
                     (const Memory__EmmcCSD   *message,
                      ProtobufCBuffer     *buffer);
Memory__EmmcCSD *
       memory__emmc_csd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__emmc_csd__free_unpacked
                     (Memory__EmmcCSD *message,
                      ProtobufCAllocator *allocator);
/* Memory__EmmcRevision methods */
void   memory__emmc_revision__init
                     (Memory__EmmcRevision         *message);
size_t memory__emmc_revision__get_packed_size
                     (const Memory__EmmcRevision   *message);
size_t memory__emmc_revision__pack
                     (const Memory__EmmcRevision   *message,
                      uint8_t             *out);
size_t memory__emmc_revision__pack_to_buffer
                     (const Memory__EmmcRevision   *message,
                      ProtobufCBuffer     *buffer);
Memory__EmmcRevision *
       memory__emmc_revision__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__emmc_revision__free_unpacked
                     (Memory__EmmcRevision *message,
                      ProtobufCAllocator *allocator);
/* Memory__EmmcExtCSD methods */
void   memory__emmc_ext_csd__init
                     (Memory__EmmcExtCSD         *message);
size_t memory__emmc_ext_csd__get_packed_size
                     (const Memory__EmmcExtCSD   *message);
size_t memory__emmc_ext_csd__pack
                     (const Memory__EmmcExtCSD   *message,
                      uint8_t             *out);
size_t memory__emmc_ext_csd__pack_to_buffer
                     (const Memory__EmmcExtCSD   *message,
                      ProtobufCBuffer     *buffer);
Memory__EmmcExtCSD *
       memory__emmc_ext_csd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__emmc_ext_csd__free_unpacked
                     (Memory__EmmcExtCSD *message,
                      ProtobufCAllocator *allocator);
/* Memory__DDR methods */
void   memory__ddr__init
                     (Memory__DDR         *message);
size_t memory__ddr__get_packed_size
                     (const Memory__DDR   *message);
size_t memory__ddr__pack
                     (const Memory__DDR   *message,
                      uint8_t             *out);
size_t memory__ddr__pack_to_buffer
                     (const Memory__DDR   *message,
                      ProtobufCBuffer     *buffer);
Memory__DDR *
       memory__ddr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__ddr__free_unpacked
                     (Memory__DDR *message,
                      ProtobufCAllocator *allocator);
/* Memory__SDCardInfo methods */
void   memory__sdcard_info__init
                     (Memory__SDCardInfo         *message);
size_t memory__sdcard_info__get_packed_size
                     (const Memory__SDCardInfo   *message);
size_t memory__sdcard_info__pack
                     (const Memory__SDCardInfo   *message,
                      uint8_t             *out);
size_t memory__sdcard_info__pack_to_buffer
                     (const Memory__SDCardInfo   *message,
                      ProtobufCBuffer     *buffer);
Memory__SDCardInfo *
       memory__sdcard_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__sdcard_info__free_unpacked
                     (Memory__SDCardInfo *message,
                      ProtobufCAllocator *allocator);
/* Memory__UFSInfo methods */
void   memory__ufsinfo__init
                     (Memory__UFSInfo         *message);
size_t memory__ufsinfo__get_packed_size
                     (const Memory__UFSInfo   *message);
size_t memory__ufsinfo__pack
                     (const Memory__UFSInfo   *message,
                      uint8_t             *out);
size_t memory__ufsinfo__pack_to_buffer
                     (const Memory__UFSInfo   *message,
                      ProtobufCBuffer     *buffer);
Memory__UFSInfo *
       memory__ufsinfo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memory__ufsinfo__free_unpacked
                     (Memory__UFSInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Memory__FlashUsage_Closure)
                 (const Memory__FlashUsage *message,
                  void *closure_data);
typedef void (*Memory__Yaffs_Closure)
                 (const Memory__Yaffs *message,
                  void *closure_data);
typedef void (*Memory__DiscWrite_Closure)
                 (const Memory__DiscWrite *message,
                  void *closure_data);
typedef void (*Memory__EmmcCID_Closure)
                 (const Memory__EmmcCID *message,
                  void *closure_data);
typedef void (*Memory__EmmcCSD_Closure)
                 (const Memory__EmmcCSD *message,
                  void *closure_data);
typedef void (*Memory__EmmcRevision_Closure)
                 (const Memory__EmmcRevision *message,
                  void *closure_data);
typedef void (*Memory__EmmcExtCSD_Closure)
                 (const Memory__EmmcExtCSD *message,
                  void *closure_data);
typedef void (*Memory__DDR_Closure)
                 (const Memory__DDR *message,
                  void *closure_data);
typedef void (*Memory__SDCardInfo_Closure)
                 (const Memory__SDCardInfo *message,
                  void *closure_data);
typedef void (*Memory__UFSInfo_Closure)
                 (const Memory__UFSInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor memory__flash_usage__descriptor;
extern const ProtobufCMessageDescriptor memory__yaffs__descriptor;
extern const ProtobufCMessageDescriptor memory__disc_write__descriptor;
extern const ProtobufCMessageDescriptor memory__emmc_cid__descriptor;
extern const ProtobufCMessageDescriptor memory__emmc_csd__descriptor;
extern const ProtobufCMessageDescriptor memory__emmc_revision__descriptor;
extern const ProtobufCMessageDescriptor memory__emmc_ext_csd__descriptor;
extern const ProtobufCMessageDescriptor memory__ddr__descriptor;
extern const ProtobufCMessageDescriptor memory__sdcard_info__descriptor;
extern const ProtobufCMessageDescriptor memory__ufsinfo__descriptor;
extern const ProtobufCEnumDescriptor    memory__ufsinfo__device_life_time_est__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_memory_2fmemory_2eproto__INCLUDED */
