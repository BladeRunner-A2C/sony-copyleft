/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_idd_2fapp_5fusage_5fdata_2eproto__INCLUDED
#define PROTOBUF_C_idd_2fapp_5fusage_5fdata_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Idd__AppEvent Idd__AppEvent;


/* --- enums --- */


/* --- messages --- */

struct  _Idd__AppEvent
{
  ProtobufCMessage base;
  char *app_package;
  protobuf_c_boolean has_app_version_code;
  int32_t app_version_code;
  char *app_version_name;
  char *timestamp;
  protobuf_c_boolean has_payload_type;
  int32_t payload_type;
  char *payload;
};
#define IDD__APP_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idd__app_event__descriptor) \
    , NULL, 0,0, NULL, NULL, 0,0, NULL }


/* Idd__AppEvent methods */
void   idd__app_event__init
                     (Idd__AppEvent         *message);
size_t idd__app_event__get_packed_size
                     (const Idd__AppEvent   *message);
size_t idd__app_event__pack
                     (const Idd__AppEvent   *message,
                      uint8_t             *out);
size_t idd__app_event__pack_to_buffer
                     (const Idd__AppEvent   *message,
                      ProtobufCBuffer     *buffer);
Idd__AppEvent *
       idd__app_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idd__app_event__free_unpacked
                     (Idd__AppEvent *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Idd__AppEvent_Closure)
                 (const Idd__AppEvent *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor idd__app_event__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_idd_2fapp_5fusage_5fdata_2eproto__INCLUDED */
